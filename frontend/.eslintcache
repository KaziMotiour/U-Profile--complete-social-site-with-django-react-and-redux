[{"F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\index.js":"1","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\serviceWorker.js":"2","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\App.js":"3","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\store\\reducers\\PostReducer.js":"4","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\store\\reducers\\AuthReducer.js":"5","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\store\\reducers\\UserProfileReducer.js":"6","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\PrivateRoute.js":"7","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\component\\Nav.js":"8","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\store\\actions\\ActionTypes.js":"9","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\store\\actions\\Auth.js":"10","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\store\\actions\\Utils.js":"11","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\component\\Layout.js":"12","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\store\\actions\\UserProfile.js":"13","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\forgetPassword\\ForgetPasswor.js":"14","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\Home\\Home.js":"15","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\Login\\Login.js":"16","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\profilePage\\ProfilePage.js":"17","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\Singup\\singup.js":"18","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\component\\notification\\NotificationList.js":"19","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\store\\actions\\PostCrud.js":"20","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\profilePage\\FollowerAndGallery\\gallery.js":"21","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\Home\\Feed\\Feed.js":"22","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\profilePage\\FollowerAndGallery\\Follower.js":"23","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\profilePage\\FollowerAndGallery\\Following.js":"24","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\Home\\widgets\\Widgets.js":"25","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\Home\\sidebar\\Sidebar.js":"26","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\profilePage\\profilePost\\profilePost.js":"27","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\profilePage\\profileInfo\\ProfileInfo.js":"28","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\Home\\sidebar\\SidebarOptions.js":"29","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\Home\\Feed\\Post\\Post.js":"30","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\Home\\Feed\\TweetBox\\TweetBox.js":"31","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\Home\\Feed\\Post\\LoadPost.js":"32","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\profilePage\\profilePost\\DemoGallery.js":"33","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\profilePage\\profilePost\\UserInformation.js":"34","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\Home\\Feed\\recomendedUser\\RecomendedUser.js":"35","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\Home\\Feed\\Post\\userList\\UserList.js":"36","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\CheckAuthentication.js":"37","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\Home\\Feed\\Post\\deletePost\\DeletePost.js":"38","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\Home\\Feed\\Post\\sharePost\\SharePost.js":"39","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\Home\\Feed\\Post\\editPost\\EditPost.js":"40","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\Home\\Feed\\Post\\comment\\Comment.js":"41","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\Home\\Feed\\Post\\sharePost\\SnackBer.js":"42","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\profileSettings\\UpdateProfileInfo.js":"43","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\profileSettings\\ProfileSettings.js":"44","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\profileSettings\\ChangePassword.js":"45","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\profileSettings\\ChangeProfilePicture.js":"46","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\Home\\Feed\\Post\\singlePost\\SinglePost.js":"47","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\component\\notification\\NotificationForMobile.js":"48","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\component\\AutoCompletesearch.js":"49","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\component\\NotFound.js":"50","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\forgetPassword\\ResetPassword.js":"51"},{"size":1355,"mtime":1615286839840,"results":"52","hashOfConfig":"53"},{"size":5086,"mtime":499162500000,"results":"54","hashOfConfig":"53"},{"size":2857,"mtime":1617640046818,"results":"55","hashOfConfig":"53"},{"size":2247,"mtime":1617030893920,"results":"56","hashOfConfig":"53"},{"size":4252,"mtime":1619251783266,"results":"57","hashOfConfig":"53"},{"size":3642,"mtime":1617087669629,"results":"58","hashOfConfig":"53"},{"size":755,"mtime":1615212994700,"results":"59","hashOfConfig":"53"},{"size":13713,"mtime":1617614859474,"results":"60","hashOfConfig":"53"},{"size":2702,"mtime":1617728116099,"results":"61","hashOfConfig":"53"},{"size":6931,"mtime":1623555247916,"results":"62","hashOfConfig":"53"},{"size":2724,"mtime":1617730781113,"results":"63","hashOfConfig":"53"},{"size":449,"mtime":1615034309761,"results":"64","hashOfConfig":"53"},{"size":5179,"mtime":1619264101469,"results":"65","hashOfConfig":"53"},{"size":4285,"mtime":1617727472983,"results":"66","hashOfConfig":"53"},{"size":2062,"mtime":1617039009924,"results":"67","hashOfConfig":"53"},{"size":5944,"mtime":1617619535847,"results":"68","hashOfConfig":"53"},{"size":4865,"mtime":1617030074993,"results":"69","hashOfConfig":"53"},{"size":6222,"mtime":1617616318244,"results":"70","hashOfConfig":"53"},{"size":5370,"mtime":1617614032655,"results":"71","hashOfConfig":"53"},{"size":7193,"mtime":1617730728935,"results":"72","hashOfConfig":"53"},{"size":1932,"mtime":1616668490370,"results":"73","hashOfConfig":"53"},{"size":1821,"mtime":1616829056619,"results":"74","hashOfConfig":"53"},{"size":3141,"mtime":1617614737207,"results":"75","hashOfConfig":"53"},{"size":3173,"mtime":1617614750548,"results":"76","hashOfConfig":"53"},{"size":4646,"mtime":1617614691435,"results":"77","hashOfConfig":"53"},{"size":1502,"mtime":1615711928803,"results":"78","hashOfConfig":"53"},{"size":2962,"mtime":1616655311439,"results":"79","hashOfConfig":"53"},{"size":6723,"mtime":1617041553978,"results":"80","hashOfConfig":"53"},{"size":319,"mtime":1600232789214,"results":"81","hashOfConfig":"53"},{"size":21541,"mtime":1617616087494,"results":"82","hashOfConfig":"53"},{"size":3957,"mtime":1617025537639,"results":"83","hashOfConfig":"53"},{"size":2306,"mtime":1616083406158,"results":"84","hashOfConfig":"53"},{"size":3683,"mtime":1617725422955,"results":"85","hashOfConfig":"53"},{"size":5272,"mtime":1616959401019,"results":"86","hashOfConfig":"53"},{"size":4496,"mtime":1616083668009,"results":"87","hashOfConfig":"53"},{"size":3128,"mtime":1616083417913,"results":"88","hashOfConfig":"53"},{"size":4,"mtime":1615391571563,"results":"89","hashOfConfig":"53"},{"size":3684,"mtime":1617730266884,"results":"90","hashOfConfig":"53"},{"size":5331,"mtime":1617729468103,"results":"91","hashOfConfig":"53"},{"size":8204,"mtime":1617729461546,"results":"92","hashOfConfig":"53"},{"size":5628,"mtime":1617614550546,"results":"93","hashOfConfig":"53"},{"size":3486,"mtime":1617728236569,"results":"94","hashOfConfig":"53"},{"size":4392,"mtime":1617012439342,"results":"95","hashOfConfig":"53"},{"size":12654,"mtime":1617013209352,"results":"96","hashOfConfig":"53"},{"size":4586,"mtime":1617727966242,"results":"97","hashOfConfig":"53"},{"size":9045,"mtime":1617026938503,"results":"98","hashOfConfig":"53"},{"size":2044,"mtime":1617032048698,"results":"99","hashOfConfig":"53"},{"size":2263,"mtime":1617041413333,"results":"100","hashOfConfig":"53"},{"size":1314,"mtime":1617615870587,"results":"101","hashOfConfig":"53"},{"size":240,"mtime":1617614099017,"results":"102","hashOfConfig":"53"},{"size":5002,"mtime":1617641190389,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"q7k4z6",{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"106"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"106"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"106"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"106"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"106"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"106"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"106"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"106"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"106"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"106"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"106"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"106"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"106"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"106"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"106"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"106"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"106"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"106"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"106"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"106"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"106"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"106"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"106"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"106"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"106"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"106"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"106"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"106"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"106"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"106"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"106"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"106"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"106"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"106"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"106"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"106"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"106"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"106"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":"235","usedDeprecatedRules":"106"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"106"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"106"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"106"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"106"},"F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\index.js",[],["250","251"],"F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\serviceWorker.js",[],"F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\App.js",["252","253","254","255","256","257","258","259"],"import React, {useEffect} from \"react\";\nimport Layout from './component/Layout'\nimport {BrowserRouter as Router, Switch, Route, Link, useHistory, Redirect } from \"react-router-dom\";\nimport \"./App.css\";\nimport Home from './containers/Home/Home'\nimport Login from './containers/Login/Login'\nimport Singup from './containers/Singup/singup'\nimport ForgetPassword from './containers/forgetPassword/ForgetPasswor'\nimport Box from '@material-ui/core/Box'\nimport Fab from '@material-ui/core/Fab'\nimport Nav from './component/Nav'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {AuthenticRoute, LogedInRoute} from './PrivateRoute'\nimport {VerifyJwtToken} from './store/actions/Auth'\nimport {LoggedUserInfo} from './store/actions/UserProfile'\nimport ProfilePage from './containers/profilePage/ProfilePage'\nimport UpdateProfileInfo from './containers/profileSettings/UpdateProfileInfo'\nimport SinglePost from './containers/Home/Feed/Post/singlePost/SinglePost'\nimport NotificationForMobile from './component/notification/NotificationForMobile'\nimport Playground from './component/AutoCompletesearch'\nimport {NotificationCount} from './store/actions/Utils'\nimport NotFound from './component/NotFound'\nimport ResetUserPassword from './containers/forgetPassword/ResetPassword'\n\nfunction  App() {\n\n  const accessToken = useSelector(state => state.auth.access_token)\n  const dispatch = useDispatch()\n  const history = useHistory()\n  \n  const config = { headers: {'Authorization': \"Bearer \" + localStorage.getItem('access_token')}}\n\n  useEffect(() =>{\n\n    dispatch(VerifyJwtToken())\n    dispatch(LoggedUserInfo(config))\n\n    \n  },[])\n\n  useEffect(() =>{\n    checkAuthenticatin()\n    \n  },[])\n  \n  const checkAuthenticatin =()=>{\n    const access_token = localStorage.getItem('access_token')\n    if(!access_token){\n      <Redirect to=\"/login\" />\n    \n  }}\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Layout>\n        <Switch>  \n          <LogedInRoute exect path='/Login' component={Login}/>\n          <LogedInRoute exect path='/singup' component={Singup}/>\n          <Route exect path='/forgetpassword' component={ForgetPassword}/>\n          <Route exect path='/resetPassword/:token' component={ResetUserPassword}/>\n          <AuthenticRoute exect path='/accountSetings' component={UpdateProfileInfo}/>\n          <AuthenticRoute exect path='/autoComplete' component={Playground}/>\n          <AuthenticRoute exect path='/notification' component={NotificationForMobile}/>\n          <AuthenticRoute exect path='/post/:postId' component={SinglePost}/>\n          <AuthenticRoute exect path='/profile/:username' component={ProfilePage}/>\n          <AuthenticRoute exect path='/' component={Home}/>\n          <AuthenticRoute  component={NotFound}/>\n\n          </Switch>\n        </Layout>\n      </Router>\n      \n    </div>\n  );\n}\n\nexport default App;\n","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\store\\reducers\\PostReducer.js",["260","261","262","263"],"import React from 'react'\r\n\r\nimport {GET_POST_START, GET_POST_SUCCESS, SHARE_POST_SUCCESS, POST_LIKED_USER, REMOVE_POST_LIKED_USER, POST_SHARD_USER, REMOVE_POST_SHARD_USER, GET_USER_WON_POST_SUCCESS, GET_SINGLE_POST} from '../actions/ActionTypes'\r\nimport { auth_fail, auth_start } from '../actions/Auth'\r\nimport { GetPostLikedUser } from '../actions/Utils'\r\n\r\nconst initialState = ({\r\n    loadingPost : false,\r\n    allPost:[],\r\n    sharePostInfo:null,\r\n    postLikedUser:[],\r\n    postSharedUser:[],\r\n    UserWonPost:[],\r\n    singlePost:null\r\n})\r\n\r\nconst GetPostStart = (state, action) =>({\r\n    ...state,\r\n    loadingPost:true\r\n})\r\nconst GetPostSuccss = (state, action) =>({\r\n    ...state,\r\n    loadingPost:false,\r\n    allPost:action.posts\r\n})\r\nconst GetSharePostInfo = (state, action) =>({\r\n    ...state,\r\n    sharePostInfo:action.shareInfo\r\n})\r\n\r\nconst GetPostLikedUsers = (state, action) =>({\r\n    ...state,\r\n    postLikedUser:action.users\r\n})\r\nconst RemovePostLikedUsers = (state, action) =>({\r\n    ...state,\r\n    postLikedUser:[]\r\n})\r\n\r\nconst GetPostSharedUsers = (state, action) =>({\r\n    ...state,\r\n    postSharedUser:action.users\r\n})\r\nconst RemovePostSharedUsers = (state, action) =>({\r\n    ...state,\r\n    postSharedUser:[]\r\n})\r\nconst GetUserWonPost = (state, action) =>({\r\n    ...state,\r\n    UserWonPost: action.userWonPost\r\n})\r\n\r\nconst GetSinglePost = (state, action) =>({\r\n    ...state,\r\n    singlePost: action.post\r\n})\r\n\r\nconst PostReducer = (state = initialState, action) =>{\r\n    switch(action.type){\r\n        case GET_POST_START: return GetPostStart(state, action)\r\n        case GET_POST_SUCCESS: return GetPostSuccss(state, action)\r\n        case SHARE_POST_SUCCESS: return GetSharePostInfo(state, action)\r\n        case POST_LIKED_USER: return GetPostLikedUsers(state, action)\r\n        case REMOVE_POST_LIKED_USER: return RemovePostLikedUsers(state, action)\r\n        case POST_SHARD_USER: return GetPostSharedUsers(state, action)\r\n        case REMOVE_POST_SHARD_USER: return RemovePostSharedUsers(state, action)\r\n        case GET_USER_WON_POST_SUCCESS: return GetUserWonPost(state, action)\r\n        case GET_SINGLE_POST: return GetSinglePost(state, action)\r\n        default: return state\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default PostReducer;","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\store\\reducers\\AuthReducer.js",["264","265","266","267","268","269","270","271","272","273","274"],"import React from 'react'\r\n\r\nimport {AUTH_START, AUTH_SUCCESS, AUTH_LOGOUT, AUTH_LOGIN_FAIL, AUTH_REGISTRATION, AUTH_REGISTRATION_FAIL, CAHNGE_PASSWORD, RESET_PASSWORD, PASSWORD_CHANGE_FILED, PASSWORD_CHANGE_SUCCESS, REMOVE_PASSWORD_CHANGE_SUCCESS, RESET_EMAIL_CHANGED_SUCCESS, RESET_EMAIL_CHANGED_FAILED, RESET_PASSSWORD_FAILED, RESET_PASSSWORD_SUCCESS, REMOVE_RESET_EMAIL_CHANGED_SUCCESS, REMOVE_RESET_PASSSWORD_SUCCESS, REMOVE_PASSSWORD_CHANGE_SUCCESS} from '../actions/ActionTypes'\r\n\r\nimport { auth_fail, auth_start } from '../actions/Auth'\r\n\r\nconst initialState = ({\r\n    access_token : localStorage.getItem('access_token'),\r\n    loading:false,\r\n    login_error:null,\r\n    registration_confirmation:null,\r\n    registration_error:null,\r\n    passwordChange_error:null,\r\n    passwordChange_Success:null,\r\n    emailSendSuccess:null,\r\n    emailSendFailed:null,\r\n    resetPasswordSuccess:null,\r\n    resetPasswordFailed:null,\r\n\r\n})\r\n\r\nconst authStart = (state, action) =>({\r\n    ...state,\r\n    loading:true\r\n})\r\nconst authSuccess = (state, action) =>({\r\n    ...state,\r\n    access_token:action.access,\r\n    loading:false,\r\n   \r\n})\r\nconst authFail = (state, action) =>({\r\n    ...state,\r\n    login_error:action.error,\r\n    loading:false\r\n\r\n})\r\nconst authLogout = (state, action) =>({\r\n    ...state,\r\n    access_token:null\r\n})\r\n\r\nconst authRegistration = (state, action) =>({\r\n    ...state,\r\n    registration_confirmation:action.confirmation\r\n})\r\n\r\nconst authRegistrationFail = (state, action) =>({\r\n    ...state,\r\n    registration_error:action.registration_error\r\n    \r\n})\r\n\r\nconst passwordChangeFailed = (state, action) =>(\r\n    console.log('from error'),\r\n    {\r\n    ...state,\r\n    passwordChange_error:action.passwordChangeError\r\n    \r\n})\r\n\r\nconst successPasswordChange = (state, action) =>(\r\n\r\n    {\r\n    ...state,\r\n    passwordChange_Success: action.passwordChangedSuccess,\r\n    passwordChange_error: null\r\n    \r\n})\r\nconst removeSuccessPasswordChange = (state, action) =>(\r\n\r\n    {\r\n    ...state,\r\n    passwordChange_Success: null\r\n})\r\nconst sendEmailSuccess = (state, action) =>(\r\n    console.log(action),\r\n\r\n    {\r\n    ...state,\r\n    emailSendSuccess: action.reset_emailSend_success,\r\n    emailSendFailed:null,\r\n    \r\n})\r\nconst sendEmailFailed = (state, action) =>(\r\n    console.log(action),\r\n    {\r\n    ...state,\r\n    emailSendFailed:action.reset_emailSend_failed,\r\n    emailSendSuccess: null\r\n})\r\n\r\nconst passwordResetSuccess = (state, action) =>(\r\n\r\n    {\r\n    ...state,\r\n    resetPasswordSuccess: action.reset_password_success,\r\n    resetPasswordFailed:null,\r\n    \r\n})\r\n\r\nconst passwordResetFailed = (state, action) =>(\r\n    {\r\n    ...state,\r\n    resetPasswordFailed:action.reset_password_failed,\r\n    resetPasswordSuccess: null\r\n})\r\n\r\nconst RemoveSendEmailSuccess = (state, action) =>(\r\n\r\n    {\r\n    ...state,\r\n    emailSendSuccess:null,\r\n    \r\n})\r\n\r\nconst RemovePasswordResetSuccess = (state, action) =>(\r\n    {\r\n    ...state,\r\n    resetPasswordSuccess:null,\r\n})\r\n\r\n\r\n\r\nconst AuthReducer = (state = initialState, action) =>{\r\n    switch(action.type){\r\n\r\n        case AUTH_START: return authStart(state, action)\r\n        case AUTH_SUCCESS: return authSuccess(state, action)\r\n        case AUTH_LOGIN_FAIL: return authFail(state, action)\r\n        case AUTH_REGISTRATION: return authRegistration(state, action)\r\n        case AUTH_REGISTRATION_FAIL: return authRegistrationFail(state, action)\r\n        case PASSWORD_CHANGE_FILED: return passwordChangeFailed(state, action)\r\n        case PASSWORD_CHANGE_SUCCESS: return successPasswordChange(state, action)\r\n        case REMOVE_PASSWORD_CHANGE_SUCCESS: return removeSuccessPasswordChange(state, action)\r\n\r\n        case RESET_EMAIL_CHANGED_SUCCESS : return sendEmailSuccess(state, action)\r\n        case RESET_EMAIL_CHANGED_FAILED : return sendEmailFailed(state, action)\r\n        case RESET_PASSSWORD_SUCCESS : return passwordResetSuccess(state, action)\r\n        case RESET_PASSSWORD_FAILED : return passwordResetFailed(state, action)\r\n        case REMOVE_RESET_EMAIL_CHANGED_SUCCESS : return RemoveSendEmailSuccess(state, action)\r\n        case REMOVE_RESET_PASSSWORD_SUCCESS : return RemovePasswordResetSuccess(state, action)\r\n        default: return state\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default AuthReducer;","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\store\\reducers\\UserProfileReducer.js",["275","276","277","278","279"],"import React from 'react'\r\n\r\nimport { LOGGED_IN_USER_INFO, RECOMENDED_USER, MUTUAL_FRIEND, REMOVE_MUTUAL_FRIEND, NOTIFICATION_COUNT, NOTIFICATION_LIST, REMOVE_NOTIFICATION_LIST, USER_PFORILE, GET_FOLLWING_USER, GET_FOLLWER_USER,  USER_PROFILE_UPDATE_SUCCESS, USER_PROFILE_UPDATE_FAIL, REMOVE_USER_PROFILE_UPDATE_SUCCESS,SEARCH_USER_LIST } from '../actions/ActionTypes'\r\nimport { auth_fail, auth_start } from '../actions/Auth'\r\n\r\nconst initialState = ({\r\n    loggedinUserInfo: null,\r\n    recomendedUser: [],\r\n    mutualFriend: [],\r\n    notificationCount : null,\r\n    notifications : [],\r\n    userProfile:null,\r\n    followerUser:[],\r\n    followingUser:[],\r\n    userUpdateSuccess : false,\r\n    userUpdateFail : null,\r\n    searchUserList : []\r\n\r\n})\r\n\r\nconst loggedinUserInfo = (state, action) =>({\r\n    ...state,\r\n    loggedinUserInfo:action.loggedinUserInfo\r\n})\r\nconst RecomendedUser = (state, action) =>({\r\n    ...state,\r\n    recomendedUser:action.recomended_user\r\n})\r\nconst MutualFriend = (state, action) =>(\r\n    console.log(action.mutual_friend,'reducer'),\r\n    {\r\n    ...state,\r\n    mutualFriend:action.mutual_friend\r\n})\r\n\r\nconst RemoveMutualFriend = (state, action) =>(\r\n    {\r\n    ...state,\r\n    mutualFriend:[]\r\n})\r\n\r\nconst NotificationCount = (state, action) =>({\r\n    ...state,\r\n    notificationCount:action.notificatonCount\r\n\r\n})\r\n\r\nconst NotificationList = (state, action) =>(\r\n    {\r\n    ...state,\r\n    notifications:action.notificatonList\r\n\r\n})\r\n\r\nconst RemoveNotificationList = (state, action) =>({\r\n    ...state,\r\n    notificationList:[]\r\n})\r\n\r\nconst  UserProfile = (state, action) =>({\r\n    ...state,\r\n    userProfile:action.userProfile\r\n})\r\n\r\nconst FollowerUser = (state, action) =>({\r\n    ...state,\r\n    followerUser:action.followerUser\r\n})\r\n\r\nconst FollowingUser = (state, action) =>({\r\n    ...state,\r\n    followingUser:action.followingUser\r\n})\r\n\r\nconst userProfileUpdateSuccess = (state, action) =>(\r\n    console.log('from success info'),\r\n    {\r\n    ...state,\r\n    userUpdateSuccess:true,\r\n    userUpdateFail:null\r\n})\r\n\r\nconst removeUserProfileUpdateSuccess = (state, action) =>(\r\n   \r\n    {\r\n    ...state,\r\n    userUpdateSuccess:false,\r\n})\r\n\r\n\r\nconst userProfileUpdateFail = (state, action) =>(\r\n    \r\n    {\r\n    ...state,\r\n    userUpdateFail:action.ProfileUpdateError\r\n})\r\nconst searchedUserList = (state, action) =>(\r\n    \r\n    {\r\n    ...state,\r\n    searchUserList:action.searchedUserLists\r\n})\r\n\r\n\r\n\r\nconst UserInfo = (state = initialState, action) =>{\r\n    switch(action.type){\r\n        case LOGGED_IN_USER_INFO: return loggedinUserInfo(state, action)\r\n        case RECOMENDED_USER: return RecomendedUser(state, action)\r\n        case MUTUAL_FRIEND: return MutualFriend(state, action)\r\n        case REMOVE_MUTUAL_FRIEND: return RemoveMutualFriend(state, action)\r\n        case NOTIFICATION_COUNT: return NotificationCount(state, action)\r\n        case NOTIFICATION_LIST: return NotificationList(state, action)\r\n        case REMOVE_NOTIFICATION_LIST: return RemoveNotificationList(state, action)\r\n        case USER_PFORILE: return UserProfile(state, action)\r\n        case GET_FOLLWER_USER: return FollowerUser(state, action)\r\n        case GET_FOLLWING_USER: return FollowingUser(state, action)\r\n        case USER_PROFILE_UPDATE_SUCCESS: return userProfileUpdateSuccess(state, action)\r\n        case REMOVE_USER_PROFILE_UPDATE_SUCCESS: return removeUserProfileUpdateSuccess(state, action)\r\n        case USER_PROFILE_UPDATE_FAIL: return userProfileUpdateFail(state, action)\r\n        case SEARCH_USER_LIST: return searchedUserList(state, action)\r\n       \r\n        default: return state\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default UserInfo;","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\PrivateRoute.js",[],"F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\component\\Nav.js",["280","281","282","283","284","285","286"],"import React,{useEffect, useState} from 'react';\r\nimport { fade, makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport MeetingRoomIcon from '@material-ui/icons/MeetingRoom';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport Link from '@material-ui/core/Link';\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { useHistory, withRouter, NavLink } from \"react-router-dom\";\r\nimport {auth_logout} from '../store/actions/Auth'\r\nimport {NotificationCount, NotificationList, SearchUser} from '../store/actions/Utils'\r\nimport Notification from './notification/NotificationList'\r\nimport {REMOVE_MUTUAL_FRIEND, REMOVE_NOTIFICATION_LIST} from '../store/actions/ActionTypes'\r\nimport { ReactSearchAutocomplete } from 'react-search-autocomplete'\r\nimport zIndex from '@material-ui/core/styles/zIndex';\r\nimport './nav.css'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      [theme.breakpoints.up('sm')]: {\r\n        display: 'block',\r\n      },\r\n      paddingRight:'10px'\r\n    },\r\n    search: {\r\n      position: 'relative',\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.common.white, 0.15),\r\n      '&:hover': {\r\n        backgroundColor: fade(theme.palette.common.white, 0.25),\r\n      },\r\n      marginRight: theme.spacing(2),\r\n      marginLeft: 0,\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(3),\r\n        width: 'auto',\r\n      },\r\n    },\r\n    searchIcon: {\r\n      padding: theme.spacing(0, 2),\r\n      height: '100%',\r\n      position: 'absolute',\r\n      pointerEvents: 'none',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n      color: 'inherit',\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // vertical padding + font size from searchIcon\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n      transition: theme.transitions.create('width'),\r\n      width: '100%',\r\n      [theme.breakpoints.up('md')]: {\r\n        width: '20ch',\r\n      },\r\n    },\r\n    sectionDesktop: {\r\n      display: 'none',\r\n      marginRight:'50px',\r\n      [theme.breakpoints.up('md')]: {\r\n        display: 'flex',\r\n      },\r\n    },\r\n    sectionMobile: {\r\n      display: 'flex',\r\n      [theme.breakpoints.up('md')]: {\r\n        display: 'none',\r\n      },\r\n    },\r\n    large: {\r\n      width: theme.spacing(6),\r\n      height: theme.spacing(6),\r\n    },\r\n    small: {\r\n      marginTop:'4px',\r\n      width: theme.spacing(5),\r\n      height: theme.spacing(5),\r\n      cursor:'pointer',\r\n    },\r\n    nav:{\r\n      width:'400px',\r\n      maxHeight:'300px',\r\n      zIndex:100, \r\n      marginLeft:'35px',\r\n      marginTop:'10px',\r\n      backgroundColor:'white',\r\n      \r\n    \r\n      \r\n    },\r\n    navs:{\r\n      width:'400px',\r\n      zIndex:100,\r\n      marginLeft:'35px',\r\n      marginTop:'10px',\r\n      height:'300px',\r\n      maxHeight:'400px',\r\n      backgroundColor:'white',\r\n      padding:'2px',\r\n      overflowY:'scroll',\r\n      overflowX:'hidden',\r\n      borderRadius:'10px',\r\n    },\r\n    navli:{\r\n      display:'flex',\r\n      width:'98%',\r\n      '&:hover':{\r\n        backgroundColor:'rgb(214, 210, 210)'\r\n      }\r\n    },\r\n    noNotify:{\r\n      marginTop:'500px',\r\n      color:'rgb(214, 210, 210)',\r\n    },\r\n    notification:{\r\n      width:400,\r\n      ['@media (max-width: 920px)']: { // eslint-disable-line no-useless-computed-key\r\n        width: 300,\r\n        \r\n      },\r\n\r\n      ['@media (max-width: 600px)']: { // eslint-disable-line no-useless-computed-key\r\n        width: 200,\r\n        \r\n      },\r\n      ['@media (max-width: 400px)']: { // eslint-disable-line no-useless-computed-key\r\n        width: 150,\r\n        \r\n      },\r\n      ['@media (max-width: 350px)']: { // eslint-disable-line no-useless-computed-key\r\n        width: 120,\r\n        \r\n      },\r\n\r\n    }\r\n\r\n  \r\n  }),\r\n);\r\n\r\nfunction Nav() {\r\n  const classes = useStyles();\r\n  const history = useHistory()\r\n  const dispatch  = useDispatch()\r\n  const accessToken = useSelector(state => state.auth.access_token)\r\n  const loggedInUser = useSelector(state => state.user.loggedinUserInfo)\r\n  const notificationCount = useSelector(state => state.user.notificationCount)\r\n  const notifications = useSelector(state => state.user.notifications)\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n  const [openNotificationBar, setOpenNotificationBar] = useState(false)\r\n  const searchUser = useSelector(state => state.user.searchUserList)\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n\r\n  const config = { headers: { \r\n    'Content-Type':'application/json',\r\n    'Authorization': \"Bearer \" + localStorage.getItem('access_token')\r\n  }}\r\n\r\n  useEffect(()=>{\r\n    dispatch(NotificationCount(config))\r\n  \r\n  },[])\r\n\r\n  const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    console.log(event.currentTarget);\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const HandleLogout = ()=>{\r\n    \r\n    dispatch(auth_logout())\r\n    goToLogin()\r\n  }\r\n\r\n  const GetNotifcationCount = () =>{\r\n\r\n    setOpenNotificationBar(!openNotificationBar)\r\n    dispatch(NotificationList(config))\r\n    console.log('hello');\r\n  \r\n}\r\n\r\nconst CloseNotificationBar = () =>{\r\n  setOpenNotificationBar(false)\r\n}\r\n\r\nconst handleOnSearch = (string, results) => {\r\n  let query = string\r\n\r\n  if(string.indexOf(' ') >= 0){\r\n    let str = string.split(' ')\r\n    console.log(str,'hello');\r\n    query= str[0]+'_'+str[1]\r\n    }\r\n  dispatch(SearchUser(query, config))\r\n}\r\n\r\nconst handleOnSelect = (item) => {\r\n  history.push(`/profile/${item.username}`)\r\n  console.log(item)\r\n}\r\n\r\nconst handleOnFocus = () => {\r\n  console.log('Focused')\r\n}\r\n\r\n\r\n\r\n\r\n  async function goToLogin (){\r\n    await new Promise((resolve) => setTimeout(() => { \r\n        const access_token = localStorage.getItem('access_token') \r\n        if(!access_token){\r\n            history.push('/login')\r\n        }\r\n      \r\n    }, 1000))\r\n  }\r\n\r\n  const menuId = 'primary-search-account-menu';\r\n  const  renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    \r\n    ><div style={{display:'flex', flexDirection:'column'}}>\r\n      <Link component={NavLink} underline=\"none\"  to={`/profile/${loggedInUser && loggedInUser.username }`}>\r\n      <MenuItem onClick={handleMenuClose} >  Profile </MenuItem>\r\n     </Link>\r\n     \r\n     \r\n     <Link component={NavLink}underline=\"none\"  to={`/accountSetings`}>\r\n      <MenuItem onClick={handleMenuClose}>\r\n        My account\r\n        </MenuItem>\r\n        </Link>\r\n      <MenuItem onClick={handleMenuClose}><p onClick={HandleLogout}>LogOut</p></MenuItem>\r\n      </div>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n  const renderMobileMenu = (\r\n    <div >\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <div style={{display:'flex', flexDirection:'column'}}>\r\n      <Link component={NavLink} underline=\"none\"  to={`/notification`}>\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n          <Badge badgeContent={notificationCount} color=\"secondary\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        \r\n        <p>Notifications</p>\r\n      </MenuItem>\r\n      </Link>\r\n\r\n      <Link component={NavLink} underline=\"none\"  to={`/profile/${loggedInUser && loggedInUser.username }`}>\r\n      <MenuItem >\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n          </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n        </Link>\r\n\r\n        <Link component={NavLink} underline=\"none\"  to={`/accountSetings`}>\r\n            <MenuItem >\r\n              <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n                <Badge color=\"secondary\">\r\n                  <MeetingRoomIcon />\r\n                </Badge>\r\n              </IconButton>\r\n         \r\n                 My account\r\n        \r\n             </MenuItem>\r\n          </Link>\r\n          \r\n      <MenuItem onClick={HandleLogout}>\r\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n          <Badge color=\"secondary\">\r\n            <MeetingRoomIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p onClick={HandleLogout}>Logout</p>\r\n      </MenuItem>\r\n      </div>\r\n    </Menu>\r\n    </div>\r\n  );\r\n\r\n// return part \r\n\r\n\r\n  return (\r\n    <div className={classes.grow} onClick={openNotificationBar === true && CloseNotificationBar}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography className={classes.title} variant=\"h6\">\r\n           <Link component={NavLink}\r\n            underline=\"none\"  to='/' style={{color:'white'}}> uProfile </Link>\r\n          </Typography>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon  />\r\n              \r\n            </div>\r\n            \r\n            <div className={classes.notification} >\r\n            \r\n              {/* Notfication */}\r\n            \r\n            <ReactSearchAutocomplete\r\n          \r\n            style={{zIndex:1000}}\r\n            items={searchUser}\r\n            onSearch={handleOnSearch}\r\n            onSelect={handleOnSelect}\r\n            onFocus={handleOnFocus}\r\n            autoFocus\r\n          />\r\n        </div>\r\n            \r\n                          \r\n          </div>\r\n          \r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n           \r\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\" onClick={GetNotifcationCount} >\r\n              <Badge badgeContent={notificationCount} color=\"secondary\">    \r\n                \r\n             {openNotificationBar &&\r\n              <nav role=\"navigation\">\r\n                <ul className={classes.nav}>\r\n                 <li> \r\n                   \r\n                 <ul class=\"dropdown\" className={ classes.navs}>\r\n                 {notifications.length!==0 ? (notifications.map(notify=>(\r\n                   <li className={classes.navli}> <Notification notify={notify} key={notify.id}/> </li>))) : <span className={classes.noNotify}>no Notification yeat </span> }\r\n                 \r\n                  \r\n\r\n                </ul>\r\n                  </li>\r\n                </ul>\r\n                </nav>}\r\n\r\n\r\n                 <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n                  \r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              {/* <AccountCircle /> */}\r\n              {loggedInUser ? ( <Avatar alt=\"Remy Sharp\" src={loggedInUser.profile.image} className={classes.small} />) :  ( <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" className={classes.small} />)}\r\n            </IconButton>\r\n          </div>\r\n                \r\n          <div className={classes.sectionMobile}>\r\n          <Link component={NavLink} underline=\"none\"  to={`/${loggedInUser && loggedInUser.username }`}>\r\n            {loggedInUser ? ( <Avatar alt=\"Remy Sharp\" src={loggedInUser.profile.image} className={classes.small} />) :  ( <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" className={classes.small} />)}\r\n            </Link>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\nexport default withRouter(Nav);","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\store\\actions\\ActionTypes.js",[],"F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\store\\actions\\Auth.js",["287","288","289","290","291","292","293"],"F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\store\\actions\\Utils.js",["294","295"],"import React from 'react'\r\nimport axios from 'axios'\r\nimport {POST_LIKED_USER, REMOVE_POST_LIKED_USER, POST_SHARD_USER, REMOVE_POST_SHARD_USER, NOTIFICATION_COUNT, NOTIFICATION_LIST, SEARCH_USER_LIST} from './ActionTypes'\r\nimport { DataUsageSharp } from '@material-ui/icons'\r\n\r\nexport const PostLikedUser = (users) =>(\r\n    {\r\n    type:POST_LIKED_USER,\r\n    users: users\r\n})\r\n\r\nexport const RemovePostLikedUser = () =>({\r\n    type:REMOVE_POST_LIKED_USER,\r\n})\r\n\r\nexport const PostSharedUser = (users) =>({\r\n    type:POST_SHARD_USER,\r\n    users: users\r\n})\r\n\r\nexport const RemovePostSharedUser = () =>({\r\n    type:REMOVE_POST_SHARD_USER,\r\n})\r\n\r\nexport const NotificationCountData = (data) =>(\r\n    {\r\n    type:NOTIFICATION_COUNT,\r\n    notificatonCount : data\r\n})\r\n\r\nexport const NotificationLists = (data) =>(\r\n    {\r\n    type:NOTIFICATION_LIST,\r\n    notificatonList : data\r\n})\r\n\r\nexport const SearchUserList = (user) =>(\r\n    {\r\n    type:SEARCH_USER_LIST,\r\n    searchedUserLists : user\r\n})\r\n\r\nexport const GetPostLikedUser = (id, config) => async dispatch =>{\r\n    try{\r\n        await axios.get(`https://kmotiour.pythonanywhere.com/post/liked-user/${id}`, config).then(res=>{\r\n            dispatch(PostLikedUser(res.data))\r\n        })\r\n\r\n    }catch(err){\r\n        console.log(err);\r\n    }\r\n} \r\n\r\nexport const GetPostSharedUser = (id, config) => async dispatch =>{\r\n    try{\r\n        await axios.get(`https://kmotiour.pythonanywhere.com/post/shared-user/${id}`, config).then(res=>{\r\n            \r\n            dispatch(PostSharedUser(res.data))\r\n        })\r\n\r\n    }catch(err){\r\n        console.log(err);\r\n    }\r\n} \r\n\r\nexport const NotificationCount = (config) => async dispatch =>{\r\n    try{\r\n        await axios.get('https://kmotiour.pythonanywhere.com/notification/count', config).then(res=>{\r\n           console.log(res.data);\r\n            dispatch(NotificationCountData(res.data.new_notification))\r\n        })\r\n\r\n    }catch(err){\r\n        console.log(err);\r\n    }\r\n} \r\n\r\nexport const NotificationList = (config) => async dispatch =>{\r\n    try{\r\n        await axios.get('https://kmotiour.pythonanywhere.com/notification', config).then(res=>{\r\n           \r\n        dispatch(NotificationLists(res.data))\r\n           \r\n            \r\n        })\r\n\r\n    }catch(err){\r\n        console.log(err);\r\n    }\r\n} \r\n\r\n\r\nexport const SearchUser = (query,config) => async dispatch =>{\r\n    console.log(query, 'queryyyyyyyy');\r\n    try{\r\n        await axios.get(`https://kmotiour.pythonanywhere.com/profile/search/${query}`, config).then(res=>{\r\n           console.log(res.data, 'search dataaaaaaaaaa');\r\n        dispatch(SearchUserList(res.data))\r\n           \r\n            \r\n        })\r\n\r\n    }catch(err){\r\n        console.log(err);\r\n    }\r\n} ","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\component\\Layout.js",["296","297","298"],"import React, {useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\n\r\nimport Nav from './Nav'\r\n\r\nconst Layout = props =>{\r\n\r\n    const accessToken = useSelector(state => state.auth.access_token)\r\n    console.log(accessToken);\r\n    console.log('dddd');\r\n    return(\r\n    <div>\r\n       {/* {accessToken && <Nav />} */}\r\n        <main >\r\n        {props.children}\r\n        </main>\r\n\r\n    </div>\r\n    )};\r\n\r\nexport default Layout","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\store\\actions\\UserProfile.js",["299","300","301"],"    import React from 'react'\r\n    import axios from 'axios'\r\nimport {LOGGED_IN_USER_INFO, RECOMENDED_USER, MUTUAL_FRIEND, USER_PFORILE, GET_FOLLWER_USER, GET_FOLLWING_USER, USER_PROFILE_UPDATE_FAIL, USER_PROFILE_UPDATE_SUCCESS} from './ActionTypes'\r\nimport {GetPostLikedUser, GetPostSharedUser} from './Utils'\r\n\r\n\r\n\r\n\r\nexport const loggedin_user_info = (data) =>(\r\n    {\r\n    type: LOGGED_IN_USER_INFO,\r\n    loggedinUserInfo: data\r\n  \r\n  })\r\n\r\nexport const recomended_user = (data) =>(\r\n    {\r\n    type: RECOMENDED_USER,\r\n    recomended_user: data\r\n  \r\n  })\r\n\r\n  export const mutual_friend = (data) =>(\r\n      console.log(data, 'action'),\r\n    {\r\n    type: MUTUAL_FRIEND,\r\n    mutual_friend: data\r\n  \r\n  })\r\n\r\n  export const UserProfileData = (data) =>(\r\n    \r\n  {\r\n  type: USER_PFORILE,\r\n  userProfile: data\r\n\r\n})\r\nexport const followerUser = (user) =>({\r\n    type:GET_FOLLWER_USER,\r\n    followerUser : user\r\n})\r\n\r\nexport const followingUser = (user) =>({\r\n    type:GET_FOLLWING_USER,\r\n    followingUser : user\r\n})\r\n\r\n\r\nexport const userProfileUpdateFail = (error) =>(\r\n\r\n    {\r\n    type:USER_PROFILE_UPDATE_FAIL,\r\n    ProfileUpdateError : error\r\n})\r\n  \r\n\r\nexport const UserProfile = (username, config) => async dispatch =>{\r\n    try{\r\n        await axios.get(`https://kmotiour.pythonanywhere.com/profile/${username}`, config).then(res =>{\r\n        dispatch(UserProfileData(res.data))\r\n        \r\n    })\r\n    }catch(err){\r\n        console.log(err,'err');\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport const EditUserProfile = (id, username, formData, config) => async dispatch =>{\r\n    console.log(formData.get('github_link'),'idddddddddddddddddddddd');\r\n    try{\r\n        await axios.put(`https://kmotiour.pythonanywhere.com/profile/edit-profile/${id}`, formData, config).then(res =>{\r\n\r\n        dispatch({ type:USER_PROFILE_UPDATE_SUCCESS})\r\n        dispatch(UserProfile(username, config))\r\n      \r\n    }).catch(function (error) {\r\n        // handle error\r\n        if (error.response) {\r\n            \r\n            const errors = error.response.data\r\n            dispatch(userProfileUpdateFail(errors))\r\n    \r\n        }})\r\n    }catch(err){\r\n        console.log(err,'err');\r\n    }\r\n\r\n\r\n}\r\n\r\n  \r\n\r\n\r\n\r\n\r\nexport const LoggedUserInfo = (config) => async dispatch =>{\r\n    console.log(config,'logged configgggg');\r\n    try{\r\n            await axios.get('https://kmotiour.pythonanywhere.com/profile/loggedinUser/', config).then(res =>{\r\n               \r\n            dispatch(loggedin_user_info(res.data[0]))\r\n        })\r\n    }catch(err){\r\n        console.log(err,'err');\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport const RecomendedUser = (config) => async dispatch =>{\r\n\r\n    try{\r\n        await axios.get('https://kmotiour.pythonanywhere.com/profile/recomemdedUser/',config).then(res =>{\r\n            dispatch(recomended_user(res.data))\r\n        })\r\n    }catch(err){\r\n        console.log(err,'err');\r\n    }\r\n\r\n}\r\n\r\nexport const UserFollow = (username, profileUser, config, profile ) => async dispatch =>{\r\n    try{\r\n        await axios.get(`https://kmotiour.pythonanywhere.com/profile/follow/${username}`, config).then(res =>{\r\n            \r\n            dispatch(RecomendedUser(config))\r\n            dispatch(GetFollowerUser(profileUser, config))\r\n            dispatch(GetFollowingUser(profileUser, config))\r\n\r\n           {profile && dispatch(UserProfile(username, config))}\r\n        })\r\n    }catch(err){\r\n        console.log(err,'err');\r\n    }\r\n\r\n}\r\n\r\nexport const UserFollowFromLikedUser = (id, username, config) => async dispatch =>{\r\n   \r\n    try{\r\n        await axios.get(`https://kmotiour.pythonanywhere.com/profile/follow/${username}`, config).then(res =>{\r\n            dispatch(GetPostLikedUser(id, config))\r\n        })\r\n    }catch(err){\r\n        console.log(err,'err');\r\n    }\r\n\r\n}\r\n\r\nexport const UserFollowFromSharedUser = (id, username, config) => async dispatch =>{\r\n    \r\n    try{\r\n        await axios.get(`https://kmotiour.pythonanywhere.com/profile/follow/${username}`, config).then(res =>{\r\n            dispatch(GetPostSharedUser(id, config))\r\n        })\r\n    }catch(err){\r\n        console.log(err,'err');\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const MutualFriend = (id, config) => async dispatch =>{\r\n\r\n    try{\r\n        await axios.get(`https://kmotiour.pythonanywhere.com/profile/mutualfriend/${id}`,config).then(res =>{\r\n            \r\n            dispatch(mutual_friend(res.data))\r\n        })\r\n    }catch(err){\r\n        console.log(err,'err');\r\n    }\r\n\r\n}\r\n\r\nexport const GetFollowerUser = (username, config) => async dispatch =>{\r\n   \r\n    try{\r\n        await axios.get(`https://kmotiour.pythonanywhere.com/profile/follower/${username}`,config).then(res =>{\r\n            // console.log(res.data, 'followwwwwwwwww');\r\n            dispatch(followerUser(res.data))\r\n        })\r\n    }catch(err){\r\n        console.log(err,'err');\r\n    }\r\n\r\n}\r\n\r\nexport const GetFollowingUser = (username, config) => async dispatch =>{\r\n\r\n    try{\r\n        await axios.get(`https://kmotiour.pythonanywhere.com/profile/following/${username}`,config).then(res =>{\r\n            console.log(res.data, 'folloing');\r\n            dispatch(followingUser(res.data))\r\n        })\r\n    }catch(err){\r\n        console.log(err,'err');\r\n    }\r\n\r\n}\r\n\r\n\r\n","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\forgetPassword\\ForgetPasswor.js",["302","303","304","305"],"import React, {useState, useEffect} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {Link} from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport './forgetPasswor.css'\r\nimport {SendResetEmail} from '../../store/actions/Auth'\r\nimport {useHistory, useParams } from 'react-router-dom';\r\nimport {useDispatch, useSelector} from 'react-redux'\r\n\r\n// allert \r\nimport Alert from '@material-ui/lab/Alert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function ForgetPassword() {\r\n\r\n\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n\r\n  const emailSendSuccess = useSelector(state => state.auth.emailSendSuccess)\r\n  const emailSendFailed = useSelector(state => state.auth.emailSendFailed)\r\n\r\n  const [email, setEmail] = useState()\r\n  const [sendEmailSuccess, setSendEmailSuccess] = useState(false)\r\n\r\n  const config = { headers: { \r\n    'Content-Type':'application/json',\r\n  }}\r\n\r\n\r\n  const HandleSendEmail = (e) =>{\r\n    e.preventDefault()\r\n    dispatch(SendResetEmail(email, config))\r\n  }\r\n\r\nuseEffect(() => {\r\n\r\n  {emailSendSuccess === \"OK\" && setEmail('')}\r\n  {emailSendSuccess === \"OK\" && setSendEmailSuccess(true)}\r\n\r\n}, [emailSendSuccess])\r\n\r\n  return (\r\n    <div className=\"login\">\r\n    <div className=\"tag\">\r\n        <h2>U-Profile.com</h2>\r\n      </div>\r\n      <div>\r\n\r\n      <Collapse in={sendEmailSuccess}>\r\n        <Alert\r\n          action={\r\n            <IconButton\r\n              aria-label=\"close\"\r\n              color=\"inherit\"\r\n              size=\"small\"\r\n              onClick={() => {\r\n                setSendEmailSuccess(false);\r\n              }}\r\n            >\r\n              <CloseIcon fontSize=\"inherit\" />\r\n            </IconButton>\r\n          }\r\n        >\r\n        Email send successfully, Check you'r email to reset password\r\n        </Alert>\r\n      </Collapse>\r\n\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Enter you'r Email Address\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            value={email}\r\n            autoFocus\r\n            onChange={e => setEmail(e.target.value.trim())}\r\n          />\r\n          <span style={{color:'red'}} >{emailSendFailed && emailSendFailed}</span>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={ e => HandleSendEmail(e)}\r\n          >\r\n            Submit\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link to=\"/login\" variant=\"body2\">\r\n                Go back to Login.\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n      </Box>\r\n    </Container>\r\n    </div>\r\n    </div>\r\n  );\r\n}","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\Home\\Home.js",["306","307","308","309","310","311","312"],"import React, { useState, useEffect } from 'react'\r\nimport Sidebar from \"./sidebar/Sidebar\";\r\nimport Feed from \"./Feed/Feed\";\r\nimport Widgets from \"./widgets/Widgets\";\r\nimport Nav from '../../component/Nav'\r\nimport './Home.css'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {GetPostList} from '../../store/actions/PostCrud'\r\nimport {LoggedUserInfo} from '../../store/actions/UserProfile'\r\nimport {REMOVE_NOTIFICATION_LIST} from '../../store/actions/ActionTypes'\r\nimport {VerifyJwtToken} from '../../store/actions/Auth'\r\n\r\n\r\n\r\n\r\nfunction Home(props) {\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n  \r\n\r\n    const access = localStorage.getItem('access_token')\r\n\r\n    const config = { headers: { \r\n      'Content-Type':'application/json',\r\n      'Authorization': \"Bearer \" + localStorage.getItem('access_token')\r\n    }}\r\n  \r\n\r\n    useEffect(() =>{\r\n\r\n        dispatch(VerifyJwtToken())\r\n\r\n        {access && dispatch(LoggedUserInfo(config))}\r\n        \r\n      },[])\r\n\r\n      useEffect(()=>{\r\n\r\n        checkAuthenticatin()\r\n        \r\n      },[])\r\n\r\n      const checkAuthenticatin =()=>{\r\n        const access_token = localStorage.getItem('access_token')\r\n        if(!access_token){\r\n          history.push({\r\n            pathname: '/login',\r\n            state: { detail: 'session expired, Try to login again' }\r\n          })\r\n        }\r\n      }\r\n    \r\n\r\n    const loggedinUser = useSelector(state => state.user.loggedinUserInfo)\r\n    return (\r\n        <div className='flex-row'>\r\n          <div>\r\n                <Nav />\r\n          </div>\r\n        <div className=\"home\">\r\n\r\n           {/* sidebar */}\r\n           <div className='slider'>\r\n             <Sidebar />\r\n            </div>    \r\n\r\n            {/* feed */}\r\n            <div className='feed'>\r\n            <Feed />\r\n            </div>\r\n\r\n            {/* widgets */}\r\n            <div className='widgets'>\r\n            <Widgets />\r\n            </div>\r\n\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\Login\\Login.js",["313","314","315","316"],"import React, {useState, useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport {Link} from 'react-router-dom'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n// allert \r\nimport Alert from '@material-ui/lab/Alert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n// end allert \r\n\r\nimport './login.css'\r\nimport {UserLogin} from '../../store/actions/Auth'\r\nimport {useHistory, useParams } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(0),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(2, 0, 1),\r\n  },\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\n\r\nexport default function Login() {\r\n  const classes = useStyles();\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const accessToken = useSelector(state => state.auth.access_token)\r\n  const loginError = useSelector(state => state.auth.login_error)\r\n\r\n  const [openAlert, setOpenAlert] = React.useState(false);\r\n  let cmMessage = null\r\n  if (history.location.state){\r\n    cmMessage=history.location.state.detail\r\n  }\r\n\r\n  const [loginInfo, setLoginInfo] = useState({\r\n    email:'',\r\n    password:''\r\n  })\r\n\r\n  const HandleInput = (e) =>{\r\n    setLoginInfo(prevState =>({\r\n      ...prevState,\r\n      [e.target.name]:e.target.value\r\n    }))\r\n  }\r\n\r\n  const HandleSubmit = (e) =>{\r\n    e.preventDefault()\r\n    const {email, password} = loginInfo\r\n    dispatch(UserLogin(email, password))\r\n    goToHome()\r\n\r\n  }\r\n  async function goToHome (){\r\n    await new Promise((resolve) => setTimeout(() => { \r\n        const access_token = localStorage.getItem('access_token') \r\n        if(access_token){\r\n            history.push('/')\r\n        }\r\n      \r\n    }, 1000))\r\n}\r\nuseEffect(() =>{\r\n  showAlert()\r\n},[cmMessage])\r\n\r\nasync function showAlert (){\r\n  await new Promise((resolve) => setTimeout(() => { \r\n      if(cmMessage){\r\n        setOpenAlert(true)\r\n      }\r\n    \r\n  }, 1000))\r\n}\r\n\r\n\r\n  return (\r\n      <div className=\"login\">\r\n          <div className=\"tag\">\r\n              <h2>U-Profile.com</h2>\r\n            </div>\r\n          <div className=\"allert\">\r\n          <Collapse in={openAlert}>\r\n        <Alert\r\n          action={\r\n            <IconButton\r\n              aria-label=\"close\"\r\n              color=\"inherit\"\r\n              size=\"small\"\r\n              onClick={() => {\r\n                setOpenAlert(false);\r\n              }}\r\n            >\r\n              <CloseIcon fontSize=\"inherit\" />\r\n            </IconButton>\r\n          }\r\n        >\r\n          {cmMessage}\r\n        </Alert>\r\n      </Collapse>\r\n          </div>\r\n\r\n          <div className=\"login-body\">\r\n          <div className='logo'>\r\n            <img src=\"https://icdn2.digitaltrends.com/image/digitaltrends/social-media-history-large-header-768x768.png\" alt=\"Italian Trulli\" />\r\n          </div>\r\n          <div  className='form'>\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            onChange={e=> HandleInput(e)}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={e=> HandleInput(e)}\r\n          />\r\n          {loginError && <span style={{color:'red'}}>{loginError}, provide you'r correct email and password.</span>}<br/>\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={HandleSubmit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link to=\"/forgetpassword\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link to='/singup' variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      \r\n    </Container>\r\n    </div>\r\n    </div>\r\n    </div>\r\n  );\r\n}","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\profilePage\\ProfilePage.js",["317","318"],"import React, {useEffect, useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport ProfileInfo from './profileInfo/ProfileInfo'\r\nimport ProfilePost from './profilePost/profilePost'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport {useHistory, useParams} from 'react-router-dom'\r\nimport {VerifyJwtToken} from '../../store/actions/Auth'\r\nimport {GetFollowerUser, GetFollowingUser, UserProfile} from '../../store/actions/UserProfile'\r\nimport {GetUserWonPostList} from '../../store/actions/PostCrud'\r\nimport Follower from './FollowerAndGallery/Follower'\r\nimport Following from './FollowerAndGallery/Following'\r\nimport Gallery from './FollowerAndGallery/gallery'\r\nimport UserInformation from './profilePost/UserInformation'\r\n\r\nimport Nav from '../../component/Nav'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n        width:'100%',\r\n        ['@media (max-width: 920px)']: { // eslint-disable-line no-useless-computed-key\r\n            width: '100%',\r\n            \r\n          },\r\n    },\r\n    profileInfo:{\r\n        width:'100%',\r\n        margin:0,\r\n        padding:0,\r\n        \r\n       \r\n    },\r\n    profilePost:{\r\n        width:'100%',\r\n        margin:0,\r\n        padding:0,\r\n        marginTop:20,\r\n       \r\n       \r\n    }\r\n  })\r\n)\r\n\r\nfunction ProfilePage() {\r\n\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const {username} = useParams()\r\n    const [openGallery, setOpenGalley] = useState(false) \r\n    const [openFollwoing, setOpenFollwoing] = useState(false)\r\n    const [openFollower, setOpenFollower] = useState(false)\r\n    const [openTimeline, setOpenTimeline] = useState(true)\r\n    const [openAbout, setOpenAbout] = useState(false)\r\n    const followers = useSelector(state => state.user.followerUser)\r\n    const followingUser = useSelector(state => state.user.followingUser)\r\n    const userWonPost = useSelector(state => state.post.UserWonPost)\r\n    const userProfile = useSelector(state => state.user.userProfile)\r\n   \r\n    const config = { headers: {'Authorization': \"Bearer \" + localStorage.getItem('access_token')}}\r\n    useEffect(()=>{\r\n        dispatch(VerifyJwtToken(config))\r\n        \r\n        \r\n        dispatch(GetUserWonPostList(username, config))\r\n        dispatch(UserProfile(username, config))\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        checkAuthenticatin()\r\n    },[])\r\n\r\n    const HandleOpenGallery=()=>{\r\n        setOpenGalley(true)\r\n        setOpenFollwoing(false)\r\n        setOpenFollower(false)\r\n        setOpenTimeline(false)\r\n        setOpenAbout(false)\r\n\r\n    }\r\n    const HandleOpenFollwoing=()=>{\r\n        dispatch(GetFollowingUser(username, config))\r\n        setOpenGalley(false)\r\n        setOpenFollwoing(true)\r\n        setOpenFollower(false)\r\n        setOpenTimeline(false)\r\n        setOpenAbout(false)\r\n       \r\n        \r\n    }\r\n    const HandleOpenFollower=()=>{\r\n        dispatch(GetFollowerUser(username, config ))\r\n        setOpenGalley(false)\r\n        setOpenFollwoing(false)\r\n        setOpenFollower(true)\r\n        setOpenTimeline(false)\r\n        setOpenAbout(false)\r\n        \r\n    }\r\n    const HandleOpenTimeline=()=>{\r\n        setOpenGalley(false)\r\n        setOpenFollwoing(false)\r\n        setOpenFollower(false)\r\n        setOpenTimeline(true)\r\n        setOpenAbout(false)\r\n    }\r\n    const HandleOpenAbout =()=>{\r\n        setOpenGalley(false)\r\n        setOpenFollwoing(false)\r\n        setOpenFollower(false)\r\n        setOpenTimeline(false)\r\n        setOpenAbout(true)\r\n    }\r\n\r\n\r\n    const checkAuthenticatin =()=>{\r\n        const access_token = localStorage.getItem('access_token')\r\n        if(!access_token){\r\n            history.push({\r\n                pathname: '/login',\r\n                state: { detail: 'session expired, Try to login again' }\r\n              })\r\n        }\r\n      }\r\n    return (\r\n        <div className={classes.root}>\r\n            <Nav />\r\n\r\n\r\n            {/* profile info */}\r\n            <div className={classes.profileInfo}>\r\n            <ProfileInfo openTimelineOpen={HandleOpenTimeline} opneFollowers={HandleOpenFollower} opneFollowing={HandleOpenFollwoing} opneGallery={HandleOpenGallery} openAbout={HandleOpenAbout}/>\r\n            </div>\r\n            \r\n            {/*  */}\r\n            <div className={classes.profilePost}>\r\n            {openTimeline && <ProfilePost  />}\r\n            {openFollower && <Follower  followers={followers} userProfile={userProfile} />}\r\n            {openFollwoing && <Following following={followingUser} userProfile={userProfile} />}\r\n            {openGallery && <Gallery  useWonPost={userWonPost} userProfile={userProfile} />}\r\n            {openAbout && <UserInformation  userInfo={userProfile}/> }\r\n            </div>\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfilePage\r\n","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\Singup\\singup.js",["319","320"],"import React, {useState, useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n// import Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport './singup.css'\r\nimport {Registration} from '../../store/actions/Auth'\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(0),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(0),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(0),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(0, 0, 1),\r\n  },\r\n}));\r\n\r\nexport default function Singup() {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const registrationError = useSelector(state=> state.auth.registration_error)\r\n  const regConfirmation = useSelector(state=>state.auth.registration_confirmation)\r\n  // console.log(registrationError.email);\r\n  const [registrationInfo, setRegistrationInfo] = useState({\r\n    email:'',\r\n    username:'',\r\n    password:'',\r\n    password2:''\r\n  })\r\n\r\n  const HandleInput = (e) =>{\r\n    setRegistrationInfo(prevState =>({\r\n      ...prevState,\r\n      [e.target.name]:e.target.value\r\n    }))\r\n  }\r\n\r\n  const HandleSubmit = (e) =>{\r\n    e.preventDefault()\r\n    const {email, username, password, password2} = registrationInfo\r\n    dispatch(Registration(email.trim(), username.trim(), password, password2))\r\n  \r\n\r\n  }\r\n\r\n  useEffect(()=>{\r\n    goToLogin()\r\n  },[regConfirmation])\r\n \r\n  async function goToLogin (){\r\n    await new Promise((resolve) => setTimeout(() => { \r\n        if(regConfirmation){\r\n            history.push({\r\n              pathname: '/login',\r\n              state: { detail: \"You have successfully complete you'r registration.Try to login you'r account\" }\r\n            })\r\n        }\r\n      \r\n    }, 1000))\r\n\r\n}\r\n\r\n\r\n\r\n  return (\r\n      <div className=\"login\">\r\n          <div className=\"tag\">\r\n              <h2>U-Profile.com</h2>\r\n            </div>\r\n          <div className=\"login-body\">\r\n          <div className='logo'>\r\n            <img src=\"https://icdn2.digitaltrends.com/image/digitaltrends/social-media-history-large-header-768x768.png\" alt=\"Italian Trulli\" />\r\n          </div>\r\n          <div  className='form'>\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign Up\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            onChange={e=> HandleInput(e)}\r\n          />\r\n          {registrationError &&  registrationError.email && <span style={{color:'red'}}>{registrationError.email}</span>}\r\n        \r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"username\"\r\n            label=\"username\"\r\n            type=\"username\"\r\n            id=\"username\"\r\n            onChange={e=> HandleInput(e)}\r\n          />\r\n          {registrationError &&  registrationError.username && <span style={{color:'red'}}>{registrationError.username}</span>}\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={e=> HandleInput(e)}\r\n          />\r\n          {registrationError &&  registrationError.password1 && <span style={{color:'red'}}>{registrationError.password1}</span>}\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password2\"\r\n            label=\"Confirm Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={e=> HandleInput(e)}\r\n          />\r\n          {registrationError &&  registrationError.password2 && <span style={{color:'red'}}>{registrationError.password2}</span>}<br/>\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={HandleSubmit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item>\r\n              <Link to='/login' variant=\"body2\">\r\n                {\"Already have an account\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      \r\n    </Container>\r\n    </div>\r\n    </div>\r\n    </div>\r\n  );\r\n}","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\component\\notification\\NotificationList.js",["321","322","323"],"import React from \"react\";\r\nimport {\r\n  fade,\r\n  makeStyles,\r\n  Theme,\r\n  createStyles,\r\n} from \"@material-ui/core/styles\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    small: {\r\n      marginTop: \"4px\",\r\n      width: theme.spacing(5),\r\n      height: theme.spacing(5),\r\n    },\r\n    notification: {\r\n      display: \"flex\",\r\n      width: \"100%\",\r\n      maxHeight:\"360px\"\r\n    },\r\n    unseenNotification:{\r\n        backgroundColor:'pink'\r\n    },\r\n    name: {\r\n      fontFamily: \"Sans-serif\",\r\n      fontSize: \"14px\",\r\n      marginTop: \"5px\",\r\n      fontWeight: \"500px\",\r\n      marginLeft: \"5px\",\r\n    },\r\n    detail: {\r\n      fontFamily: \"Sans-serif\",\r\n      fontSize: \"12px\",\r\n      marginTop: \"8px\",\r\n      fontWeight: \"500\",\r\n      marginLeft: \"5px\",\r\n    },\r\n    image: {\r\n      width: \"40px\",\r\n      height: \"40px\",\r\n      borderRadius: \"5px\",\r\n      marginLeft:'auto'\r\n    },\r\n    notify:{\r\n        width:'100%'\r\n    },\r\n    postContent:{\r\n        fontFamily: \"Sans-serif\",\r\n        fontSize: \"12px\",\r\n        fontWeight: \"500\",\r\n        marginLeft:'10px',\r\n    },\r\n    date:{\r\n        marginLeft:'5px',\r\n        fontSize:'11px',\r\n        marginTop:'5px'\r\n    }\r\n  })\r\n);\r\n\r\nfunction Notification({ notify }) {\r\n\r\n  const classes = useStyles();\r\n  const history =  useHistory()\r\n  let notification = null;\r\n\r\n  const handleShowUserPorfile = (username) =>{\r\n    checkAuthenticatin()\r\n    history.push(`/profile/${username}`)\r\n\r\n   \r\n  }\r\n\r\n  const handleShowPost = (postId) =>{\r\n    checkAuthenticatin()\r\n    history.push(`/post/${postId}`)\r\n\r\n   \r\n  }\r\n\r\n  const checkAuthenticatin =()=>{\r\n    const access_token = localStorage.getItem('access_token')\r\n    if(!access_token){\r\n      history.push({\r\n        pathname: '/login',\r\n        state: { detail: 'session expired, Try to login again' }\r\n      })\r\n    }\r\n  }\r\n\r\n  if (notify.Notification_type === 1) {\r\n    notification = (\r\n      <div className={notify.is_seen? classes.notification : classes.unseenNotification } onClick={() =>handleShowPost(notify.post.id)}>\r\n        <Avatar\r\n          alt=\"Remy Sharp\"\r\n          src={notify.sender.profile.image}\r\n          className={classes.small}\r\n        />\r\n\r\n        <div style={{ display: \"flex\", width: \"320px\", flexDirection: \"column\" }}>\r\n          <div style={{ display: \"flex\" }}>\r\n            <p className={classes.name}>\r\n              {notify.sender.full_name !== \"None None\"\r\n                ? notify.sender.full_name\r\n                : notify.sender.username}{\" \"}\r\n            </p>\r\n            <p className={classes.detail}>Likes your post </p>\r\n            <p className={classes.date}>{notify.date}</p>  \r\n          </div>\r\n            <span className={classes.postContent} style={{marginRight:\"auto\"}}>\r\n                {notify.post.content && notify.post.content.substr(0, 20)}\r\n            </span>\r\n        </div>\r\n        <div className={classes.image}>\r\n          {notify.post.image && <img src={notify.post.image} className={classes.image} />}\r\n        </div>\r\n      </div>\r\n    );\r\n  }else if(notify.Notification_type === 2){\r\n      notification = (\r\n        <div className={classes.notification} onClick={() =>handleShowPost(notify.post.id)} >\r\n        <Avatar\r\n          alt=\"Remy Sharp\"\r\n          src={notify.sender.profile.image}\r\n          className={classes.small}\r\n        />\r\n\r\n        <div style={{ display: \"flex\", width: \"320px\", flexDirection: \"column\" }}>\r\n          <div style={{ display: \"flex\" }}>\r\n            <p className={classes.name}>\r\n              {notify.sender.full_name !== \"None None\"\r\n                ? notify.sender.full_name\r\n                : notify.sender.username}{\" \"}\r\n            </p>\r\n            <p className={classes.detail}>Comment your post </p>\r\n            <p className={classes.date}>{notify.date}</p>\r\n          </div>\r\n            <span className={classes.postContent} style={{marginRight:\"auto\"}}>\r\n                {notify.text_preview && notify.text_preview.substr(0, 20)}\r\n            </span>\r\n        </div>\r\n        <div className={classes.image}>\r\n          {notify.post.image && <img src={notify.post.image} className={classes.image} />}\r\n        </div>\r\n      </div>\r\n      )\r\n\r\n  }else if(notify.Notification_type === 3){\r\n    notification = (\r\n      <div className={classes.notification} onClick={() =>handleShowUserPorfile(notify.sender.username)}>\r\n      <Avatar\r\n        alt=\"Remy Sharp\"\r\n        src={notify.sender.profile.image}\r\n        className={classes.small}\r\n      />\r\n\r\n      <div style={{ display: \"flex\", width: \"320px\", flexDirection: \"column\" }}>\r\n        <div style={{ display: \"flex\" }}>\r\n          <p className={classes.name}>\r\n            {notify.sender.full_name !== \"None None\"\r\n              ? notify.sender.full_name\r\n              : notify.sender.username}{\" \"}\r\n          </p>\r\n          <p className={classes.detail}>Started following you </p>\r\n          <p className={classes.date}>{notify.date}</p>\r\n        </div>\r\n          <span className={classes.postContent} style={{marginRight:\"auto\"}}>\r\n              {notify.text_preview && notify.text_preview.substr(0, 20)}\r\n          </span>\r\n      </div>\r\n      \r\n    </div>\r\n    )\r\n\r\n}  \r\n\r\n\r\n  return <div className={classes.notify}>{notification}</div>;\r\n}\r\n\r\nexport default Notification;\r\n","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\store\\actions\\PostCrud.js",["324","325","326"],"import {GET_POST_START, GET_POST_SUCCESS, SHARE_POST_SUCCESS, GET_USER_WON_POST_SUCCESS, GET_SINGLE_POST} from './ActionTypes'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const GetPostStart = () =>({\r\n    type:GET_POST_START\r\n})\r\nexport const GetPostSuccess = (posts) =>({\r\n    type:GET_POST_SUCCESS,\r\n    posts:posts\r\n})\r\nexport const SharePostSuccess = (shareInfo) =>(\r\n    console.log(shareInfo,'helloooo'),\r\n    {\r\n    \r\n    type:GET_USER_WON_POST_SUCCESS,\r\n    shareInfo:shareInfo\r\n}\r\n)\r\n\r\nexport const UserWonPost = (posts) =>(\r\n    {\r\n    type: GET_USER_WON_POST_SUCCESS,\r\n    userWonPost : posts\r\n})\r\n\r\nexport const getSinglePost = (post) =>(\r\n    {\r\n        type:GET_SINGLE_POST,\r\n        post:post\r\n    }\r\n)\r\n\r\nexport const GetPostList = (config) => async dispatch => {\r\n\r\n    try{\r\n        dispatch(GetPostStart)\r\n        axios.get('https://kmotiour.pythonanywhere.com/post/list/',config).then(res =>{\r\n                \r\n                dispatch(GetPostSuccess(res.data))\r\n        }\r\n        )\r\n    }catch(err){\r\n        console.log(err);\r\n    }\r\n\r\n}\r\n\r\nexport const CreatePost = (data, config) => async dispatch =>{\r\n\r\n    try{\r\n        axios.post('https://kmotiour.pythonanywhere.com/post/create/',data, config).then(res =>{\r\n           \r\n            dispatch(GetPostList(config))\r\n        }).catch(function (error){\r\n            if (error.response){\r\n                console.log(error.response.data.detail);\r\n            }\r\n        })\r\n    }catch(e){\r\n        console.log(e);\r\n    }\r\n}\r\n\r\nexport const LikePost = (id, username, config) => async dispatch =>{\r\n\r\n    try{\r\n        axios.get(`https://kmotiour.pythonanywhere.com/post/like/${id}`, config).then(res =>{\r\n           \r\n            dispatch(GetPostList(config))\r\n            dispatch(GetSinglePost(id, config))\r\n            dispatch(GetUserWonPostList(username,  config))\r\n        }).catch(function (error){\r\n            if (error.response){\r\n                console.log(error.response.data.detail);\r\n            }\r\n        })\r\n    }catch(e){\r\n        console.log(e);\r\n    }\r\n}\r\n\r\nexport const CommentPost = (id, username, data, config) => async dispatch =>{\r\n    console.log(id, data.get('comment'), config);\r\n    try{\r\n        axios.post(`https://kmotiour.pythonanywhere.com/post/comment/${id}`, data, config).then(res =>{\r\n           \r\n            dispatch(GetPostList(config))\r\n            dispatch(GetSinglePost(id, config))\r\n            dispatch(GetUserWonPostList(username,  config))\r\n        }).catch(function (error){\r\n            if (error.response){\r\n                console.log(error.response.data.detail);\r\n            }\r\n        })\r\n    }catch(e){\r\n        console.log(e);\r\n    }\r\n}\r\n\r\nexport const CommentUpdate = (id, username, data, config) => async dispatch =>{\r\n    console.log(id, data.get('comment'), config);\r\n    try{\r\n        axios.put(`https://kmotiour.pythonanywhere.com/post/comment/rud/${id}`, data, config).then(res =>{\r\n            \r\n            dispatch(GetPostList(config))\r\n            dispatch(GetSinglePost(id, config))\r\n            dispatch(GetUserWonPostList(username,  config))\r\n        }).catch(function (error){\r\n            if (error.response){\r\n                console.log(error.response.data.detail);\r\n            }\r\n        })\r\n    }catch(e){\r\n        console.log(e);\r\n    }\r\n}\r\nexport const CommentDelete = (id, username, config) => async dispatch =>{\r\n    try{\r\n        axios.delete(`https://kmotiour.pythonanywhere.com/post/comment/rud/${id}`, config).then(res =>{\r\n            \r\n            dispatch(GetPostList(config))\r\n            dispatch(GetSinglePost(id, config))\r\n            dispatch(GetUserWonPostList(username,  config))\r\n        }).catch(function (error){\r\n            if (error.response){\r\n                console.log(error.response.data.detail);\r\n            }\r\n        })\r\n    }catch(e){\r\n        console.log(e);\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const ChangePrivacy = (id, username, data, config) => async dispatch =>{\r\n    console.log(data.get('privacy'),'privacy');\r\n    try{\r\n        axios.put(`https://kmotiour.pythonanywhere.com/post/detail/${id}`, data, config).then(res =>{\r\n            \r\n            dispatch(GetPostList(config))\r\n            dispatch(GetSinglePost(id, config))\r\n            dispatch(GetUserWonPostList(username,  config))\r\n        }).catch(function (error){\r\n            if (error.response){\r\n                console.log(error.response.data.detail);\r\n            }\r\n        })\r\n    }catch(e){\r\n        console.log(e);\r\n    }\r\n}\r\n\r\n\r\nexport const SharePost = (id, username, data, config) => async dispatch =>{\r\n    console.log(data.get('sharePostContent'));\r\n    try{\r\n        axios.post(`https://kmotiour.pythonanywhere.com/post/rePost/${id}`, data, config).then(res =>{\r\n           \r\n            \r\n            localStorage.setItem('RePost', res.data.RePost)\r\n            dispatch(GetPostList(config))\r\n            dispatch(GetSinglePost(id, config))\r\n            dispatch(GetUserWonPostList(username, config))\r\n        }).catch(function (error){\r\n            if (error.response){\r\n                console.log(error.response.data.detail);\r\n            }\r\n        })\r\n    }catch(e){\r\n        console.log(e);\r\n    }\r\n}\r\n\r\nexport const EditPost = (id, username, data, config) => async dispatch =>{\r\n   \r\n    try{\r\n        axios.put(`https://kmotiour.pythonanywhere.com/post/detail/${id}`, data, config).then(res =>{\r\n           \r\n            localStorage.setItem('updated','success')\r\n            dispatch(GetPostList(config))\r\n            dispatch(GetSinglePost(id, config))\r\n            dispatch(GetUserWonPostList(username, config))\r\n        }).catch(function (error){\r\n            if (error.response){\r\n                console.log(error.response.data.detail);\r\n                localStorage.setItem('updated','failed')\r\n            }\r\n        })\r\n    }catch(e){\r\n        console.log(e);\r\n    }\r\n}\r\nexport const DeletePosts = (id, username, config) => async dispatch =>{\r\n    try{\r\n        axios.delete(`https://kmotiour.pythonanywhere.com/post/detail/${id}`, config).then(res =>{\r\n           \r\n    \r\n            localStorage.setItem('deleted','Deleted')\r\n            dispatch(GetPostList(config))\r\n            dispatch(GetSinglePost(id, config))\r\n           {username && dispatch(GetUserWonPostList(username, config))}\r\n        }).catch(function (error){\r\n            if (error.response){\r\n                console.log(error.response.data.detail);\r\n                localStorage.setItem('deleted','failed')\r\n            }\r\n        })\r\n    }catch(e){\r\n        console.log(e);\r\n    }\r\n}\r\n\r\n\r\nexport const GetUserWonPostList = (username, config) => async dispatch => {\r\n\r\n    try{\r\n        axios.get(`https://kmotiour.pythonanywhere.com/post/${username}`, config).then(res =>{\r\n                \r\n                dispatch(UserWonPost(res.data))\r\n        }\r\n        )\r\n    }catch(err){\r\n        console.log(err);\r\n    }\r\n\r\n}\r\n\r\nexport const GetSinglePost = (id, config) => async dispatch => {\r\n\r\n    try{\r\n        axios.get(`https://kmotiour.pythonanywhere.com/post/detail/${id}`, config).then(res =>{\r\n                \r\n                dispatch(getSinglePost(res.data))\r\n        }\r\n        )\r\n    }catch(err){\r\n        console.log(err);\r\n    }\r\n\r\n}\r\n\r\n","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\profilePage\\FollowerAndGallery\\gallery.js",["327","328"],"import React from 'react'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n\r\n    gallery:{\r\n        marginTop:50,\r\n        width:'80%',\r\n        margin:'auto',\r\n    },\r\n    timeline:{\r\n        width:'80%',\r\n        marginTop:20,\r\n    },\r\n    Title:{\r\n        fontSize:40,\r\n        borderBottom:'2px solid  #EBECED'\r\n    },\r\n    timeLinePicture:{\r\n        display:'flex',\r\n        flexWrap:'wrap'\r\n    },\r\n    timelineimage:{\r\n        width:200,\r\n        height:200,\r\n        margin:10,\r\n        borderRadius:10,\r\n    }\r\n  }))\r\n\r\nfunction Gallery({useWonPost, userProfile}) {\r\n\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <div className={classes.gallery}>\r\n\r\n            {/* profile picture */}\r\n            <div>\r\n                <div className={classes.Title}>\r\n                    Profile picture\r\n                </div>\r\n                <div className={classes.timeLinePicture}>\r\n                    <span> {userProfile && <a href={userProfile.profile.image}><img className={classes.timelineimage} src={userProfile.profile.image}/> </a>}</span>\r\n                    \r\n                </div>\r\n           \r\n\r\n            </div>\r\n\r\n            {/* Timeline picture */}\r\n            <div className={classes.timeline}>\r\n                <div className={classes.Title}>\r\n                    Timeline picture\r\n                </div>\r\n                <div className={classes.timeLinePicture}>\r\n                {useWonPost.length!==0 && useWonPost.map(post=>(\r\n                    \r\n                  <span> {post.image && <a href={post.image}><img className={classes.timelineimage} src={post.image}/> </a>}</span>\r\n                ))\r\n                    \r\n                    \r\n                    }\r\n                </div>\r\n           \r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Gallery\r\n","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\Home\\Feed\\Feed.js",["329","330","331"],"import React, {useState, useEffect} from \"react\";\r\nimport TweetBox from \"./TweetBox/TweetBox\";\r\nimport Post from './Post/Post'\r\nimport \"./Feed.css\";\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {GetPostList} from '../../../store/actions/PostCrud'\r\nimport {NotificationCount} from '../../../store/actions/Utils'\r\nimport Media from './Post/LoadPost'\r\nimport RecomendUser from './recomendedUser/RecomendedUser'\r\n\r\nfunction Feed() {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const [posts, setPosts] = useState([\r\n    \r\n  ])\r\n\r\n  const config = { headers: { \r\n    'Content-Type':'application/json',\r\n    'Authorization': \"Bearer \" + localStorage.getItem('access_token')\r\n  }}\r\n  \r\n  useEffect(()=>{\r\n    dispatch(NotificationCount(config))\r\n    dispatch(GetPostList(config))\r\n\r\n},[])\r\nconst allPost = useSelector(state => state.post.allPost)\r\n  \r\n\r\n \r\n  const userposts = allPost.map(post=>(\r\n    <Post \r\n      key={post.id}\r\n      id={post.id}\r\n      parent={post.parent}\r\n      user={post.user} \r\n      content ={post.content}\r\n      image={post.image}\r\n      privacy={post.privacy}\r\n      is_retweet={post.is_retweet}\r\n      is_saved={post.is_saved}\r\n      likes={post.likes}\r\n      postComment = {post.postComment}\r\n      timestamp = {post.timestamp}\r\n      is_liked = {post.is_liked}\r\n      shared_user = {post.shared_user}\r\n      />\r\n  ))\r\n  return (\r\n    <div className=\"feed\">\r\n      {/* Header */}\r\n      <div className=\"feed-header\">\r\n        <h2>Home</h2>\r\n      </div>\r\n\r\n      {/* tweetbox */}\r\n      \r\n      <TweetBox />\r\n\r\n      <div className=\"recomendedUser\">\r\n      <RecomendUser className=\"rec\"/>\r\n      </div>\r\n\r\n      {/* posts */}\r\n      <div className=\"post\">\r\n     {allPost.length !==0 ? userposts : (<Media />) }\r\n      </div>    \r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Feed;\r\n","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\profilePage\\FollowerAndGallery\\Follower.js",["332","333"],"import React from 'react'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {useParams, NavLink} from 'react-router-dom'  \r\nimport { Avatar } from \"@material-ui/core\";\r\nimport Button from '@material-ui/core/Button';\r\nimport {UserFollow} from '../../../store/actions/UserProfile'\r\nimport Link from '@material-ui/core/Link';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n      follower:{\r\n          width:'50%',\r\n          maxWidth:700,\r\n          margin:'auto',\r\n          marginTop:50,\r\n          marginBottom:100,\r\n          borderLeft:'1px solid #EBECED',\r\n          borderRight:'1px solid #EBECED',\r\n          ['@media (max-width: 990px)']: { // eslint-disable-line no-useless-computed-key\r\n            \r\n           width:550,\r\n            \r\n          },\r\n          ['@media (max-width: 600px)']: { // eslint-disable-line no-useless-computed-key\r\n            \r\n            width: '100%',\r\n            \r\n          },\r\n      },\r\n      title:{\r\n          fontSize:40,\r\n          textAlign:'center',\r\n          \r\n      },\r\n      userList:{\r\n          display:'flex',\r\n          flexWrap:'wrap',\r\n          marginTop:30,\r\n        \r\n         \r\n          \r\n      },\r\n      userListItem:{\r\n          display:'flex',\r\n          width:'45%',\r\n          padding:10,\r\n          ['@media (max-width: 450px)']: { // eslint-disable-line no-useless-computed-key\r\n            \r\n            width: '100%',\r\n            marginLeft:20,\r\n            marginRight:20,\r\n          },\r\n          \r\n      },\r\n      avater:{\r\n        width:theme.spacing(7),\r\n        height:theme.spacing(7)\r\n      },\r\n      followButton:{\r\n          width:90,\r\n          height:35,\r\n          marginLeft:'auto'\r\n      }\r\n  }))\r\n\r\nfunction Follower({followers, userProfile}) {\r\n    const classes = useStyles()\r\n    const dispatch =  useDispatch()\r\n\r\n    const config = { headers: {'Authorization': \"Bearer \" + localStorage.getItem('access_token')}}\r\n    const FollowOrUnfollow  = (username) =>{\r\n\r\n        dispatch(UserFollow(username, userProfile.username, config))\r\n    }\r\n\r\n    return (\r\n        <div className={classes.follower}>\r\n            <div className={classes.title}>\r\n                Followers\r\n            </div>\r\n            <div className={classes.userList} >\r\n                {followers.length!==0  && followers.map(user =>(\r\n                    <div className={classes.userListItem}>\r\n                        <Avatar src={user.profile.image} className={classes.avater}/> &nbsp;\r\n                        <Link component={NavLink}  underline=\"none\"  to={`/profile/${user.username }`}>\r\n                           {user.full_name !=='None None' ? user.full_name: user.username}\r\n                        </Link>\r\n                           <Button onClick={()=> FollowOrUnfollow(user.username)} className={classes.followButton} variant=\"outlined\" color=\"primary\">{user.is_following? 'UnFollow':'Follow'}  </Button>\r\n                    </div>\r\n                ))}\r\n                \r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Follower\r\n","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\profilePage\\FollowerAndGallery\\Following.js",["334","335","336"],"import React from 'react'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {useParams, NavLink} from 'react-router-dom'  \r\nimport { Avatar } from \"@material-ui/core\";\r\nimport Button from '@material-ui/core/Button';\r\nimport {UserFollow} from '../../../store/actions/UserProfile'\r\nimport Link from '@material-ui/core/Link';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n      follower:{\r\n          width:'50%',\r\n          maxWidth:700,\r\n          margin:'auto',\r\n          marginTop:50,\r\n          marginBottom:100,\r\n          borderLeft:'1px solid #EBECED',\r\n          borderRight:'1px solid #EBECED',\r\n          ['@media (max-width: 990px)']: { // eslint-disable-line no-useless-computed-key\r\n            \r\n           width:550,\r\n            \r\n          },\r\n          ['@media (max-width: 600px)']: { // eslint-disable-line no-useless-computed-key\r\n            \r\n            width: '100%',\r\n            \r\n          },\r\n      },\r\n      title:{\r\n          fontSize:40,\r\n          textAlign:'center',\r\n          \r\n      },\r\n      userList:{\r\n          display:'flex',\r\n          flexWrap:'wrap',\r\n          marginTop:30,\r\n        \r\n         \r\n          \r\n      },\r\n      userListItem:{\r\n          display:'flex',\r\n          width:'45%',\r\n          padding:10,\r\n          ['@media (max-width: 450px)']: { // eslint-disable-line no-useless-computed-key\r\n            \r\n            width: '100%',\r\n            marginLeft:20,\r\n            marginRight:20,\r\n          },\r\n          \r\n      },\r\n      avater:{\r\n        width:theme.spacing(7),\r\n        height:theme.spacing(7)\r\n      },\r\n      followButton:{\r\n          width:90,\r\n          height:35,\r\n          marginLeft:'auto'\r\n      }\r\n  }))\r\n\r\nfunction Following({following, userProfile}) {\r\n    const classes = useStyles()\r\n    const dispatch =  useDispatch()\r\n\r\n    const config = { headers: {'Authorization': \"Bearer \" + localStorage.getItem('access_token')}}\r\n    const FollowOrUnfollow  = (username) =>{\r\n        dispatch(UserFollow(username, userProfile.username, config))\r\n    }\r\n\r\n    return (\r\n        <div className={classes.follower}>\r\n            <div className={classes.title}>\r\n                Following user\r\n            </div>\r\n            <div className={classes.userList} >\r\n                {following.length!=0 && following.map(user =>(\r\n                    <div className={classes.userListItem}>\r\n                        <Avatar src={user.profile.image} className={classes.avater}/> &nbsp;\r\n                        <Link component={NavLink}  underline=\"none\"  to={`/profile/${user.username }`}>\r\n                           {user.full_name !=='None None' ? user.full_name: user.username}\r\n                        </Link>\r\n                           \r\n                           <Button onClick={()=> FollowOrUnfollow(user.username)} className={classes.followButton} variant=\"outlined\" color=\"primary\">{user.is_following? 'UnFollow':'Follow'}  </Button>\r\n                    </div>\r\n                ))}\r\n                \r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Following\r\n","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\Home\\widgets\\Widgets.js",["337","338","339"],"import React,{useEffect, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport {useDispatch,  useSelector} from 'react-redux'\r\nimport {RecomendedUser, UserFollow, MutualFriend} from '../../../store/actions/UserProfile'\r\nimport {NotificationCount} from '../../../store/actions/Utils'\r\nimport {REMOVE_MUTUAL_FRIEND} from '../../../store/actions/ActionTypes'\r\nimport UserList from '../Feed/Post/userList/UserList'\r\nimport {useParams, NavLink} from 'react-router-dom' \r\nimport Link from '@material-ui/core/Link';\r\n\r\nimport \"./Widgets.css\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 91,\r\n    maxHeight:200,\r\n    margin:5,\r\n  },\r\n  media: {\r\n    height: 60,\r\n  },\r\n  username:{\r\n    fontSize:'10px',\r\n    fontWeight:'bolder',\r\n    color:'black'\r\n  },\r\n  mutualFriend:{\r\n    cursor:'pointer',\r\n    fontSize:'10px',\r\n    color:'rgb(46, 46, 45)',\r\n    marginLeft:'5px',\r\n    marginTop:'10px',\r\n    marginBottom:'-25px',\r\n    \"&:hover\":{\r\n      borderBottom:'1px solid grey',\r\n      color:'rgb(125, 37, 37)',\r\n      \r\n    },\r\n  },\r\n  flex:{\r\n     display:'flex',\r\n     flexDirection:'column', \r\n\r\n\r\n      \r\n  },\r\n  cardTopArea:{\r\n    height:'110px',\r\n  },\r\n  followButton:{\r\n    marginTop:'20px',\r\n   \r\n  },\r\n  \r\n});\r\n\r\nfunction Widgets() {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch()\r\n  const recomendedUser = useSelector(state => state.user.recomendedUser)\r\n  const mutualFriend = useSelector(state => state.user.mutualFriend)\r\n  const config = { headers: { \r\n    'Content-Type':'application/json',\r\n    'Authorization': \"Bearer \" + localStorage.getItem('access_token')\r\n  }}\r\n\r\n\r\n  useEffect(()=>{\r\n    dispatch(NotificationCount(config))\r\n    dispatch(RecomendedUser(config))\r\n  },[])\r\n\r\n  const HandleUserFollow = (username) =>{\r\n        dispatch(UserFollow(username, username, config))\r\n  }\r\n\r\n  const RefreshRecomendedUser = () =>{\r\n    dispatch(RecomendedUser(config))\r\n  }\r\n\r\n  const HnadleMutualFriend = (id) =>{\r\n    console.log(id,'id');\r\n    dispatch(MutualFriend(id, config))\r\n  }\r\n  const RemoveMutualFriend = () =>{\r\n    dispatch({\r\n      type: REMOVE_MUTUAL_FRIEND\r\n    })\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"widgets\">\r\n      <div className=\"Top\" style={{display:'flex', justifyContent:'space-around'}}>\r\n        <h3>Pepole may you know</h3> \r\n        <RefreshIcon style={{cursor:'pointer', color:'blue'}} onClick={RefreshRecomendedUser} />\r\n      </div>   \r\n      <br/>\r\n       <div className=\"\" style={{display:'flex', flexWrap:'wrap'}}>\r\n       \r\n       {recomendedUser.length !==0 && (recomendedUser.map(user =>(\r\n\r\n         <Card className={classes.root}>\r\n          <Link component={NavLink}  underline=\"none\"  to={`/profile/${user.username }`}>\r\n         <CardActionArea className={classes.cardTopArea}>\r\n           <CardMedia\r\n             className={classes.media}\r\n             image={user.profile.image}\r\n             title=''\r\n           />\r\n           <CardContent>\r\n           {user.full_name ==='None None' ? (\r\n             <Typography gutterBottom className={classes.username} >\r\n             { user.username}\r\n             </Typography>):(\r\n             <Typography   color=\"textSecondary\" component=\"p\" className={classes.username}>\r\n               {user.full_name}\r\n             </Typography>)}\r\n             \r\n           </CardContent>\r\n         </CardActionArea>\r\n         </Link>\r\n\r\n         {user.mutual_friends!==0 && <Typography color=\"textSecondary\" component=\"p\" c>\r\n              <p className={classes.mutualFriend} onClick={() => HnadleMutualFriend(user.id)} > {user.mutual_friends} Mutual friend </p>\r\n          {mutualFriend.length !==0 && (<UserList opene={true} UserList={mutualFriend} closeUserList={RemoveMutualFriend} typeOfUser=\"Mutual Friend\" from=\"mutualFriend\"/>)}\r\n         </Typography>}\r\n\r\n         <CardActions className={classes.flex}>\r\n           <Button className={classes.followButton} size=\"small\" color=\"primary\" onClick={()=> HandleUserFollow(user.username)}>\r\n             Follow\r\n           </Button>\r\n           \r\n         </CardActions>\r\n       </Card>\r\n\r\n       )))}\r\n        \r\n    \r\n    </div>\r\n       \r\n        \r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Widgets;\r\n","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\Home\\sidebar\\Sidebar.js",["340","341"],"import React from 'react'\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport NotificationsNoneIcon from '@material-ui/icons/Notifications';\r\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\r\nimport ListAltIcon from '@material-ui/icons/ListAlt';\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport SidebarOptions from './SidebarOptions'\r\nimport { Button } from '@material-ui/core';\r\nimport './Sidebar.css'\r\n\r\n\r\nfunction Sidebar() {\r\n    return (\r\n        <div className=\"sidebar\">\r\n             {/* twitter icon */} \r\n\r\n            {/* sidebarOptions */}\r\n            <SidebarOptions active Icon={HomeIcon} text=\"Home\"/>\r\n            <SidebarOptions Icon={SearchIcon} text=\"Explore\"/>\r\n            <SidebarOptions Icon={NotificationsNoneIcon} text=\"Notifications\"/>\r\n            <SidebarOptions Icon={MailOutlineIcon} text=\"Mail\"/>\r\n            <SidebarOptions Icon={BookmarkBorderIcon} text=\"Bookmark\"/>\r\n            <SidebarOptions Icon={ListAltIcon} text=\"List\"/>\r\n            <SidebarOptions Icon={PermIdentityIcon} text=\"Profile\"/>\r\n            <SidebarOptions Icon={MoreHorizIcon} text=\"more\"/>\r\n\r\n            \r\n            {/* button */}\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar;\r\n","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\profilePage\\profilePost\\profilePost.js",["342","343"],"import React,{useEffect} from 'react'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Post from '../../Home/Feed/Post/Post'\r\nimport Media from '../../Home/Feed/Post/LoadPost'\r\nimport UserInformation from './UserInformation'\r\nimport DemoGallery from './DemoGallery'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {GetPostList, GetUserWonPostList} from '../../../store/actions/PostCrud'\r\nimport {UserProfile} from '../../../store/actions/UserProfile'\r\nimport {useParams} from 'react-router-dom'\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n   \r\n    profilePosts:{\r\n        width:'100%',\r\n        display:'flex',\r\n        margin:'auto',\r\n        \r\n\r\n    },\r\n    userInfo:{\r\n        flex:1,\r\n        ['@media (max-width: 990px)']: { // eslint-disable-line no-useless-computed-key\r\n            display: 'none',\r\n            \r\n            \r\n          },\r\n    },\r\n    userPost:{\r\n        width:'100%',\r\n        flex:2,\r\n        borderLeft:'1px solid #EBECED',\r\n        borderRight:'1px solid #EBECED',\r\n    },\r\n    DemoGallery:{\r\n        flex:1,\r\n        ['@media (max-width: 990px)']: { // eslint-disable-line no-useless-computed-key\r\n            display: 'none',\r\n            \r\n          },\r\n        \r\n    },\r\n  })\r\n)\r\n\r\n\r\n\r\n\r\n\r\nfunction ProfilePost() {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const allPost = useSelector(state => state.post.UserWonPost)\r\n    const userProfile = useSelector(state => state.user.userProfile)\r\n    const {username} = useParams()\r\n    const config = { headers: {'Authorization': \"Bearer \" + localStorage.getItem('access_token')}}\r\n\r\n    useEffect(()=>{\r\n      dispatch(GetUserWonPostList(username, config))\r\n      dispatch(UserProfile(username, config))\r\n  \r\n  },[])\r\n    \r\n    const userposts = allPost && allPost.map(post=>(\r\n        <Post \r\n          key={post.id}\r\n          id={post.id}\r\n          parent={post.parent}\r\n          user={post.user} \r\n          content ={post.content}\r\n          image={post.image}\r\n          privacy={post.privacy}\r\n          is_retweet={post.is_retweet}\r\n          is_saved={post.is_saved}\r\n          likes={post.likes}\r\n          postComment = {post.postComment}\r\n          timestamp = {post.timestamp}\r\n          is_liked = {post.is_liked}\r\n          shared_user = {post.shared_user}\r\n          username={username}\r\n          />\r\n      ))\r\n    return (\r\n        <div className={classes.profilePosts}>\r\n            <div className={classes.userInfo}> \r\n           <UserInformation userInfo={userProfile} />\r\n            </div>\r\n\r\n            <div className={classes.userPost}>\r\n            {allPost && allPost.length !==0 ? userposts : (<Media />) }\r\n            </div>\r\n\r\n            <div className={classes.DemoGallery}>\r\n            <DemoGallery usePost ={allPost} userInfo={userProfile}/>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfilePost\r\n","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\profilePage\\profileInfo\\ProfileInfo.js",["344","345"],"import React, {useEffect} from 'react'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {useParams} from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport {UserProfile, UserFollow} from '../../../store/actions/UserProfile'\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n\r\n   \r\n    \r\n    coverPic:{\r\n        minWidth:'55%', \r\n        maxWidth:'60%',\r\n        margin:'auto',\r\n        ['@media (max-width: 920px)']: { // eslint-disable-line no-useless-computed-key\r\n            width: '90%',\r\n            maxWidth:'90%',\r\n            \r\n          },  \r\n    },\r\n\r\n    UserInfo:{\r\n        width:'70%',\r\n        maxWidth:'800px',\r\n        height:'50px',\r\n        backgroundColor:'rgb(245, 245, 245)',\r\n        justifyContent:'space-between',\r\n        margin:'auto',\r\n        display:'flex',\r\n       \r\n        alignItems:'center',\r\n        ['@media (max-width: 920px)']: { // eslint-disable-line no-useless-computed-key\r\n            \r\n            width: '100%',\r\n            \r\n          },\r\n    },\r\n    UserInfo2:{\r\n        width:'70%',\r\n        maxWidth:'800px',\r\n        height:'50px',\r\n        backgroundColor:'rgb(245, 245, 245)',\r\n        justifyContent:'center',\r\n        margin:'auto',\r\n        display:'flex',\r\n       \r\n        alignItems:'center',\r\n        ['@media (max-width: 920px)']: { // eslint-disable-line no-useless-computed-key\r\n            \r\n            width: '100%',\r\n            \r\n            \r\n          },\r\n    },\r\n    large: {\r\n        width: theme.spacing(15),\r\n        height: theme.spacing(15),\r\n        marginLeft:20,\r\n        marginTop:-80,\r\n        ['@media (max-width: 600px)']: { // eslint-disable-line no-useless-computed-key\r\n            width: '100px',\r\n            height: '100px',\r\n            \r\n          },\r\n      },\r\n      flex:{\r\n        display:'flex'\r\n      },\r\n      menusItems:{\r\n          marginRight:15,\r\n          padding:3,\r\n          cursor:'pointer',\r\n          '&:hover':{\r\n              borderBottom:'.5px solid rgb(64, 81, 181)'\r\n          },\r\n          ['@media (max-width: 500px)']: { // eslint-disable-line no-useless-computed-key\r\n            marginRight:8,\r\n            fontSize:13,\r\n            \r\n          },\r\n      },\r\n      follow:{\r\n          marginRight:50,\r\n          \r\n          ['@media (max-width: 500px)']: { // eslint-disable-line no-useless-computed-key\r\n            marginRight:20,\r\n            \r\n          },\r\n      },\r\n      userName:{\r\n          fontSize:22,\r\n          ['@media (max-width: 990px)']: { // eslint-disable-line no-useless-computed-key\r\n            fontSize:20,\r\n            \r\n          },\r\n      },\r\n\r\n      menusItemsAbout:{\r\n        marginRight:15,\r\n        padding:3,\r\n        cursor:'pointer',\r\n        '&:hover':{\r\n            borderBottom:'.5px solid rgb(64, 81, 181)'\r\n        },\r\n        ['@media (min-width: 990px)']: { // eslint-disable-line no-useless-computed-key\r\n            display:'none'\r\n            \r\n          },\r\n        ['@media (max-width: 500px)']: { // eslint-disable-line no-useless-computed-key\r\n            marginRight:8,\r\n            fontSize:13,\r\n            \r\n          },\r\n      },\r\n      image:{\r\n        maxHeight:'300px',\r\n        width:'100%',\r\n        ['@media (min-width: 1500px)']: { // eslint-disable-line no-useless-computed-key\r\n            maxHeight:'450px',\r\n          },\r\n          ['@media (max-width: 500px)']: { // eslint-disable-line no-useless-computed-key\r\n            maxHeight:'250px',\r\n          },\r\n      },\r\n      followButton:{\r\n          borderRadius:20,\r\n      }\r\n      \r\n      \r\n    \r\n  })\r\n)\r\n\r\nfunction ProfileInfo({openTimelineOpen, opneFollowers, opneFollowing, opneGallery, openAbout}) {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const {username} = useParams()\r\n    const loggedInUser = useSelector(state => state.user.loggedinUserInfo)\r\n    const userProfile = useSelector(state => state.user.userProfile)\r\n\r\n    const config = { headers: {'Authorization': \"Bearer \" + localStorage.getItem('access_token')}}\r\n    \r\n\r\n    useEffect(()=>{\r\n        dispatch(UserProfile(username, config))\r\n    },[])\r\n    \r\n    const FollowOrUnfollow  = () =>{\r\n        const profile=true \r\n        const username = userProfile.username\r\n        dispatch(UserFollow(username, username, config,  profile,))\r\n    }\r\n    return (\r\n        <div className={classes.profileInfo}>\r\n\r\n            <div className={classes.coverPic}>\r\n                <img  className={classes.image}   \r\n                src={userProfile ? userProfile.profile.cover_picture : ''} /> \r\n            </div>\r\n            \r\n            <div className={classes.UserInfo}>\r\n\r\n                <div className={classes.flex}>\r\n                    <div>\r\n                        <Avatar src={userProfile ? userProfile.profile.image: ''} className={classes.large}/>\r\n                    </div>\r\n                    <div className={classes.userName}>\r\n                        {userProfile ? userProfile.full_name!=='None None' ? userProfile.full_name : userProfile.username :''}\r\n                    </div>\r\n                </div>\r\n\r\n                {loggedInUser && userProfile && loggedInUser.username!==userProfile.username && \r\n                <div className={classes.follow}>\r\n                    {userProfile && userProfile.profile.is_following ? <Button onClick={FollowOrUnfollow} className={classes.followButton}   variant=\"outlined\" color=\"primary\">Unfollow</Button> \r\n                    :\r\n                    <Button onClick={FollowOrUnfollow} className={classes.followButton} variant=\"outlined\" color=\"primary\">\r\n                    Follow </Button>}\r\n                </div>}\r\n\r\n            </div>\r\n\r\n\r\n            <div className={classes.UserInfo2}>\r\n\r\n                <div className={classes.menu}>\r\n                   \r\n                 <div className={classes.flex}>\r\n                 <p className={classes.menusItems} onClick={openTimelineOpen}> Timeline </p>\r\n\r\n                    <p className={classes.menusItems} onClick={opneFollowing}>Following ({userProfile && userProfile.profile.following})</p>\r\n\r\n                    <p className={classes.menusItems}  onClick={opneFollowers}>Follower ({userProfile && userProfile.profile.followed_by})</p>\r\n\r\n                    <p className={classes.menusItems} onClick={opneGallery}>Gallery</p>\r\n\r\n                    <p className={classes.menusItemsAbout} onClick={openAbout}>About</p>\r\n                   \r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo\r\n","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\Home\\sidebar\\SidebarOptions.js",[],"F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\Home\\Feed\\Post\\Post.js",["346","347","348","349","350","351","352","353","354","355"],"import React, {forwardRef, useState, useEffect} from \"react\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';   \r\nimport  VerifiedUserIcon  from \"@material-ui/icons/VerifiedUser\";\r\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport Button from '@material-ui/core/Button';\r\nimport PublicIcon from '@material-ui/icons/Public';\r\nimport RepeatIcon from '@material-ui/icons/Repeat';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\r\n\r\n// drop down import\r\nimport TextField from '@material-ui/core/TextField';\r\n//end drop down import\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {useHistory, NavLink} from 'react-router-dom'\r\nimport {REMOVE_POST_LIKED_USER, REMOVE_POST_SHARD_USER} from '../../../../store/actions/ActionTypes'\r\nimport {GetPostList, LikePost, CommentPost, ChangePrivacy} from '../../../../store/actions/PostCrud'\r\nimport {GetPostLikedUser, GetPostSharedUser, NotificationCount} from '../../../../store/actions/Utils'\r\nimport {VerifyJwtToken} from '../../../../store/actions/Auth'\r\n\r\nimport \"./Post.css\";\r\nimport { CommentTwoTone } from \"@material-ui/icons\";\r\nimport Comment from './comment/Comment'\r\nimport SharedPost from './sharePost/SharePost'\r\nimport EditPosts from './editPost/EditPost'\r\nimport DeletePost from './deletePost/DeletePost'\r\nimport UserList from './userList/UserList'\r\n\r\nimport Link from '@material-ui/core/Link';\r\n\r\n// dropdown style\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    large: {\r\n      width: theme.spacing(6),\r\n      height: theme.spacing(6),\r\n    },\r\n    small: {\r\n      width: theme.spacing(4),\r\n      height: theme.spacing(4),\r\n    },\r\n    text:{\r\n      width:'70%',\r\n    },\r\n    likes:{\r\n      cursor:'pointer',\r\n      '&:hover':{\r\n        borderBottom:' 1px solid black',\r\n        \r\n      }\r\n    },\r\n    image:{\r\n      width:'90%',\r\n      height:\"350px\", \r\n      marginLeft:'30px',\r\n      ['@media (max-width:490px)']: { // eslint-disable-line no-useless-computed-key\r\n        width: '98%',\r\n        marginLeft:'5px',\r\n      },\r\n        ['@media (max-width:800px)']: { // eslint-disable-line no-useless-computed-key\r\n          width: '98%',\r\n          marginLeft:'5px',\r\n        }\r\n\r\n    },\r\n    shareimage:{\r\n      width:'90%', \r\n      height:\"350px\",\r\n      marginLeft:'20px',\r\n      ['@media (max-width:490px)']: { // eslint-disable-line no-useless-computed-key\r\n        width: '100%',\r\n        marginLeft:'1px',\r\n      },\r\n\r\n      ['@media (min-width:661px), (max-width:800px)']: { // eslint-disable-line no-useless-computed-key\r\n        width: '100%',\r\n        marginLeft:'1px',\r\n      }\r\n\r\n    }\r\n    \r\n  }),\r\n);\r\n\r\nconst Privacyoptions = [\r\n  'public',\r\n  'friends',\r\n  'onlyme',\r\n];\r\nconst postOptions = [\r\n  'Edit',\r\n  'Delete',\r\n];\r\n// end dropdown style\r\n\r\n\r\n\r\nconst Post  = forwardRef(({id, user, parent, content, image, privacy, is_retweet, is_saved, likes, postComment, timestamp, is_liked, shared_user, username }, ref) =>{\r\n\r\n\r\n  // drop down\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const loggedInUser = useSelector(state => state.user.loggedinUserInfo)\r\n  const postLikedUsers = useSelector(state => state.post.postLikedUser)\r\n  const postSharedUsers =  useSelector(state => state.post.postSharedUser)\r\n  const [opneEditOption, setOpenEditOption] = useState(false)\r\n  const [opnePrivacyOption, setOpenPrivacyOption] = useState(false)\r\n  const [opneSharePost, setOpenSharePost] = useState(false)\r\n  const [openEditForm, setOpenEditForm] = React.useState(false)\r\n  const [openDeleteForm, setOpenDeleteForm] = React.useState(false)\r\n  const [postComments, setPostComments] = useState('');\r\n  const number_of_comment = postComment && postComment.length\r\n  const [commentOpen, setCommentOpen] = useState(false)\r\n  const loggedin_user_info = useSelector(state=> state.user.loggedinUserInfo)\r\n  const shared_users =shared_user && shared_user.length\r\n  const config = { headers: { \r\n    'Content-Type':'application/json',\r\n    'Authorization': \"Bearer \" + localStorage.getItem('access_token')\r\n  }}\r\n\r\n  useEffect(() => {\r\n    dispatch(NotificationCount(config))\r\n  }, [])\r\n\r\n\r\n\r\n  const commentControl = () =>{\r\n    dispatch(NotificationCount(config))\r\n    setCommentOpen(!commentOpen)\r\n\r\n  }\r\n\r\n  const HandleLikePost = () =>{\r\n    \r\n    dispatch(VerifyJwtToken())\r\n    checkAuthenticatin()\r\n    dispatch(LikePost(id, username, config))\r\n\r\n    dispatch(NotificationCount(config))\r\n\r\n  }\r\n  const HandleCommetPost = (e, id) =>{\r\n    \r\n    dispatch(VerifyJwtToken())\r\n    checkAuthenticatin()\r\n    if(e.code==='Enter'){\r\n      const formData = new FormData()\r\n      formData.append('comment', postComments)\r\n      dispatch(CommentPost(id, username, formData, config))\r\n      setPostComments('')\r\n    }\r\n    dispatch(NotificationCount(config))\r\n    \r\n  }\r\n\r\n  const HandlePrivacyChange =(id, option) =>{\r\n    \r\n    dispatch(VerifyJwtToken())\r\n    checkAuthenticatin()\r\n    let formData = new FormData()\r\n    formData.append('privacy', option)\r\n    dispatch(ChangePrivacy(id, username, formData, config))\r\n    dispatch(NotificationCount(config))\r\n      \r\n    \r\n  }\r\n\r\n  const HandleShareOpen = () =>{\r\n\r\n    setOpenSharePost(!opneSharePost)\r\n    dispatch(NotificationCount(config))\r\n  }\r\n\r\n  const  HandleEditOpen = (option) =>{\r\n\r\n    if (option==='Edit'){\r\n      setOpenEditForm(!openEditForm)\r\n    }else if(option==='Delete'){\r\n      setOpenDeleteForm(!openDeleteForm)\r\n    }    \r\n    dispatch(NotificationCount(config))\r\n}\r\n \r\n\r\n\r\n  const closeEditForm = () =>{\r\n    setOpenEditForm(!openEditForm)\r\n    dispatch(NotificationCount(config))\r\n  }\r\n\r\n  const closeDeleteForm = () =>{\r\n    setOpenDeleteForm(!openDeleteForm)\r\n    dispatch(NotificationCount(config))\r\n  }\r\n\r\n\r\n  // GET POST LIKED USER\r\n  const getPostLikedUserList = (id) =>{\r\n    dispatch(GetPostLikedUser(id, config))\r\n    dispatch(NotificationCount(config))\r\n  }\r\n   // REMOVE POST LIKED USER FROM REDUCER\r\n  const ClosePostLikedUserList = () =>{\r\n    \r\n    dispatch({\r\n      type:REMOVE_POST_LIKED_USER\r\n    })\r\n    dispatch(NotificationCount(config))\r\n  }\r\n\r\n  const getPostSharedUserList = (id) =>{\r\n    dispatch(GetPostSharedUser(id, config))\r\n    dispatch(NotificationCount(config))\r\n  }\r\n\r\n  const ClosePostSharedUserList = () =>{\r\n    dispatch({\r\n      type:REMOVE_POST_SHARD_USER\r\n    })\r\n    dispatch(NotificationCount(config))\r\n  }\r\n\r\n\r\n\r\n\r\n  const checkAuthenticatin =()=>{\r\n    const access_token = localStorage.getItem('access_token')\r\n    if(!access_token){\r\n      history.push({\r\n        pathname: '/login',\r\n        state: { detail: 'session expired, Try to login again' }\r\n      })\r\n    }\r\n  }\r\n\r\n \r\n  return (\r\n  \r\n    <div className=\"post\" ref={ref} onClick={() =>opneEditOption && setOpenEditOption(false)} >\r\n      {/* {opneEditOption === true && setOpenEditOption(false)} */}\r\n      {!parent ? (\r\n        \r\n      <div className=\"particular-post\" onClick={() =>opnePrivacyOption && setOpenPrivacyOption(false)}>\r\n        {/* Post header part begain */}\r\n        <div className='post-header'>\r\n        \r\n        <div className=\"post_avatar\">\r\n          <Avatar src={user && user.profile.image} className={classes.large}/>\r\n        </div>\r\n      \r\n        <div className=\"post__headerText\">\r\n        <Link component={NavLink}  underline=\"none\"  to={`/profile/${user.username }`}>\r\n            <h3>\r\n           \r\n               {user.full_name!=='None None'? user.full_name : user.username}\r\n                {/* {varified && <VerifiedUserIcon className=\"post_badge\" /> } */}\r\n                <span className=\"post_username\"> @{user.username} </span> \r\n                \r\n            </h3 >\r\n            </Link>\r\n            {timestamp}\r\n        \r\n        </div>\r\n        <div style={{marginLeft:'auto'}} className=\"nav\">\r\n       {loggedin_user_info &&  loggedin_user_info.username === user.username && <nav role=\"navigation\">\r\n                <ul>\r\n                  <li onClick={()=> setOpenEditOption(!opneEditOption)} ><h2>...</h2>\r\n                <ul class=\"dropdown\">\r\n                  {opneEditOption &&\r\n                    postOptions.map( (option) =>(\r\n                    <li onClick={e => HandleEditOpen(option)}  className=\"option\"><p>{option}</p></li>\r\n                    ))\r\n                  }\r\n                  \r\n                  \r\n                </ul>\r\n                  </li>\r\n                </ul>\r\n        </nav>}\r\n\r\n        {openEditForm && <EditPosts open={true} id={id} username={username} postUsername={user.username}\r\n                postUserFullname={user.full_name && user.full_name} postUserImage={user.profile.image} content={content} image={image} loggedInUsername={loggedin_user_info.full_name} loggedInUserImage={loggedin_user_info.profile.image}\r\n                hondleEditFormOpen={closeEditForm} />}\r\n        \r\n        {openDeleteForm && <DeletePost open={true} username={username} id={id}  hondleDeleteFormOpen={closeDeleteForm}/>}\r\n        </div>\r\n        </div>\r\n          {/* Post header part end */}\r\n        \r\n        {/* Post body part begain */}\r\n        <div className=\"post_body\">    \r\n          <div className=\"post__headerDescription\">\r\n            <p> {content} </p>\r\n            \r\n          </div>\r\n          \r\n          {image && <a href={image}> <img className={classes.image}   src={image} /> </a>}\r\n              \r\n        </div>\r\n        {/* Post body part end */}\r\n\r\n          {/* Post footer part begain */}\r\n          <div className=\"post_footer\">\r\n          \r\n          <div className=\"likes\" >\r\n            {is_liked ?<FavoriteIcon onClick={id =>HandleLikePost(id)} fontSize=\"samll\" style={{color:'blue', cursor:'pointer'}}/> : <FavoriteIcon onClick={id =>HandleLikePost(id)}  fontSize=\"samll\" style={{ cursor:'pointer'}}/> } &nbsp;\r\n             <span className={classes.likes} onClick={()=> getPostLikedUserList(id)}>{likes}</span>\r\n             {postLikedUsers.length !==0 && <UserList opene={true} id={id}  UserList={postLikedUsers} closeUserList={ClosePostLikedUserList} typeOfUser=\"Liked Users\" from=\"likes\"/>}\r\n          </div>\r\n\r\n          <div className=\"comments\" style={{display:'flex'}}>\r\n                <ChatBubbleOutlineIcon fontSize=\"samll\" style={{cursor:'pointer'}} onClick={commentControl}/> &nbsp;{number_of_comment}\r\n          </div>\r\n              {/* privracy begain */}\r\n          <div className=\"privacy\"> \r\n               <nav role=\"navigation\">\r\n                <ul>\r\n                 <li> \r\n                   <div onClick={() => setOpenPrivacyOption(!opnePrivacyOption)} style={{display:'flex',marginTop:'-10px'}}> \r\n                   <PublicIcon fontSize=\"samll\" aria-haspopup=\"true\"\r\n                  aria-controls=\"lock-menu\"\r\n                  aria-label=\"when device is locked\"\r\n                  style={{cursor:'pointer'}}\r\n                    /> &nbsp;<p> {privacy}</p>\r\n                </div>\r\n                {loggedin_user_info && loggedin_user_info.username === user.username && <ul class=\"dropdown\">\r\n                  \r\n                  {opnePrivacyOption &&( <div onClick={() =>setOpenPrivacyOption(!opnePrivacyOption)}>\r\n                  {Privacyoptions.map( (option) =>(\r\n                    <li onClick={e => HandlePrivacyChange(id, option)}  className=\"option\"><p>{option}</p></li>\r\n                  ))} </div>)\r\n                    }\r\n\r\n                </ul>}\r\n                  </li>\r\n                </ul>\r\n                </nav>\r\n                \r\n        </div>\r\n              {/* privracy end */}\r\n              <div className=\"shared\" style={{display:'flex', cursor:'pointer'}}>\r\n               \r\n                <ShareIcon onClick={HandleShareOpen} fontSize=\"default\"/>&nbsp;\r\n               \r\n               <span onClick={() => getPostSharedUserList(id)}> {shared_users} share</span>\r\n                {postSharedUsers.length !==0 && <UserList id={() => id} opene={true} UserList={postSharedUsers} closeUserList={ClosePostSharedUserList} typeOfUser=\"Who share this post\" from=\"shared\"/>}\r\n                \r\n                {opneSharePost && (\r\n                <SharedPost open={true} username={username} id={id} postUsername={user.username}\r\n                postUserFullname={user.full_name && user.full_name} postUserImage={user.profile.image} content={content} image={image} loggedInUserUsername={loggedin_user_info.username} loggedInUserFullname={loggedin_user_info.full_name} loggedInUserImage={loggedin_user_info.profile.image}\r\n                hondleShareOpen={HandleShareOpen}\r\n                />)}\r\n                </div>\r\n          </div>\r\n           {/* Post footer part end */}\r\n          \r\n          {/* Comment section */}\r\n          {commentOpen &&\r\n        <div className='comment-section'> \r\n        <h2 style={{marginLeft:'15px'}}>Commnets</h2>\r\n          \r\n            {postComment && postComment.map(comments => (\r\n             <Comment username={username} comment={comments} />\r\n              \r\n            ))}\r\n          \r\n          <div className=\"comment-input\">\r\n          <Avatar  src={ loggedInUser && loggedInUser.profile.image} className={classes.small} style={{marginRight:'10px'}}/> \r\n          <TextField className={classes.text} onKeyDown={e =>HandleCommetPost(e, id)} onChange={e => setPostComments(e.target.value)} value={postComments}  placeholder=\"What's you'r mind ?\"/>\r\n          </div>\r\n\r\n\r\n        </div>\r\n        \r\n        }\r\n        {/* Comment section end*/}\r\n\r\n      </div>\r\n\r\n      ):(\r\n\r\n      <div className=\"particular-post\" onClick={() =>opnePrivacyOption && setOpenPrivacyOption(false)}>\r\n        {/* share post part */}\r\n        {/* Post header part begain */}\r\n        <div className='post-header'>\r\n        <div className=\"post_avatar\">\r\n          <Avatar src={user.profile.image}/>\r\n        </div>\r\n      \r\n        <div className=\"post__headerText\">\r\n            <h3>\r\n            <Link component={NavLink}  underline=\"none\"  to={`/profile/${user.username }`}>\r\n               {user.full_name!=='None None'? user.full_name : user.username}\r\n               </Link>\r\n                {/* {varified && <VerifiedUserIcon className=\"post_badge\" /> } */}\r\n                <span className=\"post_username\"> shared </span> \r\n                <Link component={NavLink}  underline=\"none\"  to={`/profile/${parent.user.username }`}>\r\n               {parent.user.username}'s </Link> post\r\n\r\n            </h3 >\r\n            {timestamp}\r\n        </div>\r\n        {/* post edit options begain */}\r\n        <div style={{marginLeft:'auto'}}>\r\n        {loggedin_user_info &&  loggedin_user_info.username === user.username && <nav role=\"navigation\">\r\n                <ul>\r\n                  <li onClick={()=> setOpenEditOption(!opneEditOption)} ><h2>...</h2>\r\n                <ul class=\"dropdown\">\r\n                  {opneEditOption &&\r\n                    postOptions.map( (option) =>(\r\n                    <li onClick={e => HandleEditOpen(option)}  className=\"option\"><p>{option}</p></li>\r\n                    ))\r\n                  }\r\n                  \r\n                  \r\n                </ul>\r\n                  </li>\r\n                </ul>\r\n        </nav>}\r\n        {openEditForm && <EditPosts username={username} open={true} id={id} parent={parent} postUsername={parent.user.username} postUserFullname={parent.user.full_name} postUserImage={parent.user.profile.image} content={content} image={parent.image} loggedInUsername={loggedin_user_info && loggedin_user_info.full_name} loggedInUserImage={loggedin_user_info && loggedin_user_info.profile.image} hondleEditFormOpen={closeEditForm} />}\r\n\r\n        {openDeleteForm && <DeletePost open={true} username={username} id={id}  hondleDeleteFormOpen={closeDeleteForm}/>}\r\n        \r\n      </div>\r\n      {/* post edit options ended */}\r\n\r\n        </div>\r\n         {/* Post header part ended */}\r\n         {/* Post body part begain */}\r\n        <div className=\"post_body\">    \r\n          <div className=\"post__headerDescription\">\r\n            <p> \r\n               {content}</p>\r\n          </div>\r\n\r\n          {/* parent post  */}\r\n          <div style={{width:'100%',  height:'auto'}}> \r\n          <div className=\"particular-shared-post\">\r\n        <div className='post-header'>\r\n        <div className=\"post_avatar\">\r\n          <Avatar src={parent.user.profile.image}/>\r\n        </div>\r\n      \r\n        <div className=\"post__headerText\">\r\n        <Link component={NavLink}  underline=\"none\"  to={`/profile/${parent.user.username }`}>\r\n            <h3>{parent.user.full_name !=='None None' ? parent.user.full_name : parent.user.username}\r\n                {/* {varified && <VerifiedUserIcon className=\"post_badge\" /> } */}\r\n                <span className=\"post_username\"> @{parent.user.username}</span> \r\n\r\n            </h3 >\r\n            </Link>\r\n            {parent.timestamp}\r\n        </div>\r\n        </div>\r\n        <div className=\"post_body\">    \r\n          <div className=\"post__headerDescription\">\r\n            <p>  {parent.content}</p>\r\n          \r\n          </div>\r\n          {parent.image && <a href={parent.image}> <img className={classes.shareimage}   src={parent.image} /> </a>}\r\n          \r\n              \r\n        </div>\r\n\r\n\r\n      </div>\r\n\r\n          </div>\r\n          {/* parent post  end */}\r\n              \r\n       \r\n        </div>\r\n        {/* Post body part ended */}\r\n\r\n        {/* Post fotter part begain */}\r\n          <div className=\"post_footer\">\r\n              \r\n              {/* Like post */}\r\n              <div className=\"likes\">\r\n              {is_liked ?<FavoriteIcon onClick={id =>HandleLikePost(id)} fontSize=\"samll\" style={{color:'blue', cursor:'pointer'}}/> : <FavoriteIcon onClick={id =>HandleLikePost(id)} fontSize=\"samll\" style={{cursor:'pointer'}}/> }&nbsp; \r\n              <span className={classes.likes} onClick={()=> getPostLikedUserList(id)}>{likes}</span>\r\n              {postLikedUsers.length !==0 && (<UserList id={id}  opene={true} UserList={postLikedUsers} closeUserList={ClosePostLikedUserList} typeOfUser=\"Liked Users\" from=\"likes\" />)}\r\n              </div>\r\n                \r\n              {/* comment post */}\r\n              <div className=\"comments\" style={{display:'flex'}}>\r\n              <ChatBubbleOutlineIcon fontSize=\"samll\" style={{cursor:'pointer'}} onClick={commentControl}/> &nbsp;{number_of_comment}\r\n              </div>\r\n\r\n               {/* Post privacy part begain */}\r\n              <div className=\"privacy\"> \r\n              <nav role=\"navigation\">\r\n                <ul>\r\n                <li  >\r\n                <div onClick={() => setOpenPrivacyOption(!opnePrivacyOption)} style={{display:'flex',marginTop:'-10px'}}> \r\n                   <PublicIcon fontSize=\"samll\" aria-haspopup=\"true\"\r\n                  aria-controls=\"lock-menu\"\r\n                  aria-label=\"when device is locked\"\r\n                  style={{cursor:'pointer'}}\r\n                    /> &nbsp;<p> {privacy}</p>\r\n                </div>\r\n                <ul class=\"dropdown\">\r\n                  \r\n                  {loggedin_user_info &&  loggedin_user_info.username === user.username && <ul class=\"dropdown\">\r\n                  \r\n                  {opnePrivacyOption &&( <div onClick={() =>setOpenPrivacyOption(!opnePrivacyOption)}>\r\n                  {Privacyoptions.map( (option) =>(\r\n                    <li onClick={e => HandlePrivacyChange(id, option)}  className=\"option\"><p>{option}</p></li>\r\n                  ))} </div>)\r\n                    }\r\n\r\n                </ul>}\r\n                </ul>\r\n                </li>\r\n                </ul>\r\n        </nav>\r\n         \r\n      \r\n      </div>\r\n\r\n      {/* Post privacy part  */}\r\n              <div className=\"shared\" style={{display:'flex', cursor:'pointer'}}>\r\n                <ShareIcon onClick={() => setOpenSharePost(!opneSharePost)} fontSize=\"default\"/> &nbsp; {shared_users} share\r\n              \r\n                {opneSharePost && (<SharedPost open={true} username={username} id={id} postUserFullname={parent.user.full_name} postUsername={parent.user.username} postUserImage={parent.user.profile.image} content={parent.content} image={parent.image} loggedInUserUsername={loggedin_user_info.username} loggedInUserFullname={loggedin_user_info.full_name} loggedInUserImage={loggedin_user_info && loggedin_user_info.profile.image} hondleShareOpen={HandleShareOpen} \r\n                \r\n                /> )}\r\n\r\n              </div>\r\n          </div>\r\n          {/* Post body part ended */}\r\n\r\n          {/* Comment section */}\r\n          {commentOpen &&\r\n        <div className='comment-section'> \r\n        <h2 style={{marginLeft:'15px'}}>Commnets</h2>\r\n        {postComment && postComment.map(comments => (\r\n              <Comment username={username}  comment={comments} />\r\n              \r\n            ))}\r\n  \r\n          <div className=\"comment-input\">\r\n          <Avatar src={ loggedInUser && loggedInUser.profile.image} className={classes.small} style={{marginRight:'10px'}}/> \r\n          <TextField onKeyDown={e =>HandleCommetPost(e, id)}className={classes.text} onChange={e => setPostComments(e.target.value)} value={postComments}  placeholder=\"What's you'r mind ?\"/>\r\n          </div>\r\n        </div>}\r\n        {/* Comment section end*/}\r\n\r\n      </div>)}\r\n\r\n\r\n    </div>\r\n  );\r\n})\r\n\r\nexport default Post;\r\n","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\Home\\Feed\\TweetBox\\TweetBox.js",["356","357","358","359","360","361","362","363"],"import { Avatar, Button } from \"@material-ui/core\";\r\nimport React,{useState, useEffect} from \"react\";\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\r\nimport {useHistory} from 'react-router-dom'\r\nimport {CreatePost} from '../../../../store/actions/PostCrud'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {CheckAuthentication} from '../../../../CheckAuthentication'\r\nimport {VerifyJwtToken} from '../../../../store/actions/Auth'\r\nimport {NotificationCount} from '../../../../store/actions/Utils'\r\nimport \"./TweetBox.css\";\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    large: {\r\n      width: theme.spacing(5),\r\n      height: theme.spacing(5),\r\n    },\r\n    small: {\r\n      width: theme.spacing(4),\r\n      height: theme.spacing(4),\r\n    },\r\n  }),\r\n);\r\n\r\nfunction TweetBox() {\r\n\r\n  const classes = useStyles();\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const [postContent, setPostContent] = useState('')\r\n  const [tweetImage, setTweetImage]=useState('')\r\n  const [picture, setPicture] = useState(null);\r\n  const [imgData, setImgData] = useState(null);\r\n\r\n  const config = { headers: { \r\n    'Content-Type':'application/json',\r\n    'Authorization': \"Bearer \" + localStorage.getItem('access_token')\r\n  }}\r\n\r\n  useEffect(() => {\r\n   dispatch(NotificationCount(config))\r\n  }, [])\r\n\r\n\r\n  const onChangePicture = e => {\r\n\r\n    if (e.target.files[0]) {\r\n      setPicture(e.target.files[0]);\r\n      const reader = new FileReader();\r\n      reader.addEventListener(\"load\", () => {\r\n        setImgData(reader.result);\r\n      });\r\n      reader.readAsDataURL(e.target.files[0]);\r\n    }\r\n  };\r\n  function sendTweet(e){\r\n    e.preventDefault()\r\n\r\n    \r\n  }\r\n  const HandleCancleImage = () =>{\r\n    setImgData(null)\r\n    setPicture(null)\r\n  }\r\n\r\n  const HandelCreaatePost = (e) =>{\r\n    dispatch(VerifyJwtToken())\r\n    e.preventDefault()\r\n    checkAuthenticatin()\r\n    const config = { headers: { \r\n      'Content-Type':'application/json',\r\n      'Authorization': \"Bearer \" + localStorage.getItem('access_token')\r\n    }}\r\n      let formData = new FormData();\r\n      formData.append(\"content\", postContent);\r\n    if(picture){\r\n      formData.append(\"image\", picture);\r\n    }\r\n    dispatch(CreatePost(formData, config))\r\n\r\n    setPicture(null)\r\n    setImgData(null)\r\n    setPostContent('')\r\n  }\r\n  \r\n  const checkAuthenticatin =()=>{\r\n    const access_token = localStorage.getItem('access_token')\r\n    if(!access_token){\r\n      history.push({\r\n        pathname: '/login',\r\n        state: { detail: 'session expired, Try to login again' }\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"TweetBox\">\r\n      <form>\r\n        <div>\r\n          \r\n          <textarea\r\n            className=\"textarea\"\r\n            placeholder=\"What's happening ?\"\r\n            value={postContent}\r\n            onChange={(e) => setPostContent(e.target.value)}\r\n          ></textarea>\r\n        </div>\r\n\r\n        <input type=\"file\" id=\"upload\" hidden onChange={onChangePicture}/>\r\n        <label for=\"upload\"  className=\"Label\">Upload picture</label>\r\n        {/* Cross icont on image */}\r\n        <div style={{marginLeft:'auto', marginRight:'70px', marginTop:'30px', zIndex:'1'}}>{picture && <CancelIcon style={{color:'rgb(161, 166, 162)', cursor:'pointer',}} onClick={HandleCancleImage} className={classes.large} />}</div>\r\n        {/* Show load  image */}\r\n        {picture && <img src={imgData}  style={{width:'80%', maxHeight:'400px', margin:'auto', borderRadius:'5%', marginTop:'-60px'}}/>}\r\n        \r\n        <div>\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            className=\"TweetBox--Button\"\r\n            color=\"primary\"\r\n            onClick={HandelCreaatePost}\r\n          >\r\n            Post\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TweetBox;\r\n","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\Home\\Feed\\Post\\LoadPost.js",["364","365","366","367","368","369","370"],"import React,{useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport {NotificationCount} from '../../../../store/actions/Utils'\r\nimport {useDispatch} from 'react-redux'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    \r\n    minWidth:'100%',\r\n    margin: theme.spacing(2),\r\n    marginTop:'40px',\r\n    marginBottom:'20px'\r\n  },\r\n  media: {\r\n    height: 190,\r\n  },\r\n}));\r\n\r\nconst config = { headers: {'Authorization': \"Bearer \" + localStorage.getItem('access_token')}}\r\nfunction Media(props) {\r\n  const dispatch = useDispatch()\r\n  const { loading = false } = props;\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    dispatch(NotificationCount(config))\r\n  }, [])\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardHeader\r\n        avatar={\r\n          \r\n            <Skeleton animation=\"wave\" variant=\"circle\" width={40} height={40} />\r\n         \r\n        }\r\n        \r\n        title={\r\n         \r\n            <Skeleton animation=\"wave\" height={10} width=\"80%\" style={{ marginBottom: 6 }} />\r\n         \r\n        }\r\n        subheader={<Skeleton animation=\"wave\" height={10} width=\"40%\" /> }\r\n      />\r\n      \r\n        <Skeleton animation=\"wave\" variant=\"rect\" className={classes.media} />\r\n       \r\n\r\n      <CardContent>\r\n        \r\n          <React.Fragment>\r\n            <Skeleton animation=\"wave\" height={10} style={{ marginBottom: 6 }} />\r\n            <Skeleton animation=\"wave\" height={10} width=\"80%\" />\r\n          </React.Fragment>\r\n    \r\n          \r\n        \r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nMedia.propTypes = {\r\n  loading: PropTypes.bool,\r\n};\r\n\r\nexport default function Facebook() {\r\n  return (\r\n    <div style={{minWidth:'90%', margin:'auto'}}>\r\n      <Media loading />\r\n      <Media />\r\n    </div>\r\n  );\r\n}","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\profilePage\\profilePost\\DemoGallery.js",["371","372","373","374","375","376","377"],"import React, {useEffect} from 'react'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { Avatar } from \"@material-ui/core\";\r\n\r\nimport { BorderBottom } from '@material-ui/icons';\r\nimport {GetFollowerUser} from '../../../store/actions/UserProfile'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {useParams, NavLink} from 'react-router-dom'  \r\nimport Link from '@material-ui/core/Link';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root:{\r\n        margin:'10px',\r\n        marginTop:'50px',\r\n        border:0,\r\n        borderRadius:'10px',\r\n        paddingBottom:'10px',\r\n        backgroundColor:'rgb(240, 242, 245)',\r\n        maxWidth:'80%',\r\n        margin:'auto'\r\n\r\n\r\n    },\r\n    root2:{\r\n        margin:'10px',\r\n        marginTop:'10px',\r\n        border:0,\r\n        borderRadius:'10px',\r\n        paddingBottom:'10px',\r\n        backgroundColor:'rgb(240, 242, 245)',\r\n        maxWidth:'80%',\r\n        margin:'auto'\r\n\r\n\r\n    },\r\n    heading:{\r\n        // textAlign:'center',\r\n        marginLeft:'8%',\r\n        marginRight:'5%',\r\n        marginTop:'5%',\r\n        fontSize:'20px',\r\n        borderBottom:'2px solid rgb(200, 200, 200)',\r\n        maxWidth:'90%',\r\n    },\r\n    gallery:{\r\n       \r\n        marginLeft:'8%',\r\n        marginTop:10,\r\n        margin:20,\r\n        display:'flex',\r\n        flex:'wrap',\r\n        \r\n    },\r\n    sociallink:{\r\n        marginLeft:'8%',\r\n        marginTop:10,\r\n        margin:20,\r\n        \r\n    },\r\n    icon:{\r\n        color:'rgb(63, 81, 181)',\r\n    },\r\n    image:{\r\n        width:50,\r\n        height:50,\r\n        margin:5,\r\n        borderRadius:10,\r\n\r\n    },\r\n    avater:{\r\n        width:theme.spacing(5),\r\n        height:theme.spacing(5)\r\n    }\r\n    \r\n\r\n\r\n  })\r\n)\r\n\r\n\r\n\r\nfunction DemoGallery({usePost, userInfo}) {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const follower = useSelector(state => state.user.followerUser)\r\n    const config = { headers: {'Authorization': \"Bearer \" + localStorage.getItem('access_token')}}\r\n    useEffect(()=>{\r\n       {userInfo && dispatch(GetFollowerUser(userInfo.username, config))}\r\n    },[userInfo])\r\n    \r\n    return (\r\n        <div>\r\n            <div className={classes.root}>\r\n                <div className={classes.heading} > \r\n                   Recent Picture\r\n                </div>\r\n\r\n                {/* UserInfo */}\r\n                <div className={classes.gallery}>\r\n                    {usePost && usePost.slice(0, 5).map(post =>(\r\n                       <span>{post.image && <a href={post.image}>   <img className={classes.image} src={post.image} /> </a>} </span>\r\n                    ))}\r\n                \r\n                </div>\r\n            </div>\r\n\r\n            {/* social links */}\r\n            <div className={classes.root2}>\r\n                <div className={classes.heading} > \r\n                    Followers\r\n                </div>\r\n                <div className={classes.sociallink}>\r\n                   {follower && follower.slice(0,5).map(user =>(\r\n                       <div style={{display:'flex'}}>\r\n                            \r\n                           <Avatar src={user.profile.image} className={classes.avater}/> &nbsp;\r\n                           <Link component={NavLink}  underline=\"none\"  to={`/profile/${user.username }`}>\r\n                           {user.full_name !=='None None' ? user.full_name: user.username}\r\n                           </Link>\r\n                       </div>\r\n\r\n                   ))} \r\n                   \r\n                \r\n                </div>\r\n            </div>\r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DemoGallery\r\n","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\profilePage\\profilePost\\UserInformation.js",["378","379","380","381","382","383","384"],"import React from 'react'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\r\nimport BusinessCenterIcon from '@material-ui/icons/BusinessCenter';\r\nimport EmojiPeopleIcon from '@material-ui/icons/EmojiPeople';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ContactPhoneIcon from '@material-ui/icons/ContactPhone';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport { BorderBottom } from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root:{\r\n        margin:'10px',\r\n        marginTop:'50px',\r\n        border:0,\r\n        borderRadius:'10px',\r\n        paddingBottom:'10px',\r\n        backgroundColor:'rgb(240, 242, 245)',\r\n        maxWidth:'80%',\r\n        margin:'auto'\r\n\r\n\r\n    },\r\n    root2:{\r\n        margin:'10px',\r\n        marginTop:'10px',\r\n        border:0,\r\n        borderRadius:'10px',\r\n        paddingBottom:'10px',\r\n        backgroundColor:'rgb(240, 242, 245)',\r\n        maxWidth:'80%',\r\n        margin:'auto'\r\n\r\n\r\n    },\r\n    heading:{\r\n        // textAlign:'center',\r\n        marginLeft:'8%',\r\n        marginRight:'5%',\r\n        marginTop:'5%',\r\n        fontSize:'20px',\r\n        borderBottom:'2px solid rgb(200, 200, 200)',\r\n        maxWidth:'90%',\r\n    },\r\n    infoList:{\r\n        display:'flex',\r\n        marginLeft:'8%',\r\n        marginTop:10,\r\n        margin:20,\r\n    },\r\n    icon:{\r\n        color:'rgb(63, 81, 181)',\r\n    },\r\n    info:{\r\n        fontSize:15,\r\n        marginLeft:3,\r\n    },\r\n    social:{\r\n        marginLeft:'8%',\r\n        marginTop:10,\r\n        margin:10,\r\n        display:'flex',\r\n        height:'auto',\r\n        width:'80%',\r\n        backgroundColor:'rgb(63, 81, 181)',\r\n        borderRadius:10,\r\n        alignItems:'center',\r\n        justifyContent:'center',\r\n        color:'white',\r\n        cursor:'pointer',\r\n        padding:1,\r\n    },\r\n    socialLink:{\r\n        color:'white',\r\n        \r\n    }\r\n\r\n\r\n  })\r\n)\r\n\r\n\r\n\r\nfunction UserInformation({userInfo}) {\r\n    const classes = useStyles()\r\n    \r\n    return (\r\n        <div>\r\n            <div className={classes.root}>\r\n                <div className={classes.heading} > \r\n                    User info\r\n                </div>\r\n\r\n                {/* UserInfo */}\r\n                <div className={classes.infoList}>\r\n                <PermIdentityIcon className={classes.icon}/> \r\n                    <p className={classes.info}>{userInfo && userInfo.profile.bio}</p>\r\n                </div>\r\n\r\n                <div className={classes.infoList}>\r\n                <BusinessCenterIcon className={classes.icon}/> \r\n                <p className={classes.info}>{userInfo && userInfo.profile.occupations}</p>\r\n                </div>\r\n\r\n                <div className={classes.infoList}>\r\n                <EmojiPeopleIcon className={classes.icon}/> \r\n                <p className={classes.info}>{userInfo && userInfo.profile.gander}</p>\r\n                </div>\r\n\r\n                <div className={classes.infoList}>\r\n                <FavoriteIcon className={classes.icon}/>\r\n                <p className={classes.info}>{userInfo && userInfo.profile.relationship_status}</p>\r\n                </div>\r\n\r\n                <div className={classes.infoList}>\r\n                <ContactPhoneIcon className={classes.icon}/>\r\n                <p className={classes.info}>{userInfo && userInfo.profile.Phone}</p>\r\n                </div>\r\n                <div className={classes.infoList}>\r\n                <LocationOnIcon className={classes.icon}/>\r\n                <p className={classes.info}>{userInfo && userInfo.profile.location}</p>\r\n                </div>\r\n            </div>\r\n\r\n            {/* social links */}\r\n            <div className={classes.root2}>\r\n                <div className={classes.heading} > \r\n                    Social Links\r\n                </div>\r\n               {userInfo && userInfo.profile.facebook_Link &&  <div className={classes.social}>\r\n                <FacebookIcon /><a className={classes.socialLink} href={userInfo.profile.facebook_Link} target=\"_blank\"> Facebook </a>\r\n                </div>}\r\n\r\n                {userInfo && userInfo.profile.github_link && <div className={classes.social}>\r\n                <GitHubIcon /> <a className={classes.socialLink} href={userInfo.profile.github_link} target=\"_blank\"> GitHub </a>\r\n                </div> }\r\n\r\n                {userInfo && userInfo.profile.linkdin_link && <div className={classes.social}>\r\n                <LinkedInIcon /><a className={classes.socialLink} href={userInfo.profile.linkdin_link} target=\"_blank\"> LinkedIn </a>\r\n                </div>}\r\n                {userInfo && userInfo.profile.twitter_link &&\r\n                <div className={classes.social}>\r\n                <TwitterIcon />  <a className={classes.socialLink} href={userInfo.profile.twitter_link} target=\"_blank\"> Twitter </a>\r\n                </div>}\r\n            </div>\r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserInformation\r\n","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\Home\\Feed\\recomendedUser\\RecomendedUser.js",["385","386"],"import React,{useEffect, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport {useDispatch,  useSelector} from 'react-redux'\r\nimport {RecomendedUser, UserFollow, MutualFriend} from '../../../../store/actions/UserProfile'\r\nimport {REMOVE_MUTUAL_FRIEND} from '../../../../store/actions/ActionTypes'\r\nimport UserList from '../Post/userList/UserList'\r\n\r\nimport \"./RecomendedUser.css\";\r\nimport { NotificationCount } from '../../../../store/actions/Utils';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 91,\r\n    maxHeight:180,\r\n    margin:5,\r\n  },\r\n  media: {\r\n    height: 50,\r\n  },\r\n  username:{\r\n    fontSize:'10px',\r\n    fontWeight:'bolder',\r\n    color:'black'\r\n\r\n  },\r\n  mutualFriend:{\r\n    cursor:'pointer',\r\n    fontSize:'10px',\r\n    color:'rgb(46, 46, 45)',\r\n    marginTop:'5px',\r\n    margin:'auto',\r\n    marginLeft:'10px',\r\n    \"&:hover\":{\r\n      borderBottom:'1px solid grey',\r\n      color:'rgb(125, 37, 37)',\r\n      \r\n    },\r\n  },\r\n  flex:{\r\n     display:'flex',\r\n     flexDirection:'column', \r\n\r\n  \r\n\r\n      \r\n  },\r\n  followButton:{\r\n    marginTop:'20px',\r\n   \r\n  },\r\n  cardTopArea:{\r\n    height:'100px',\r\n  }\r\n  \r\n});\r\n\r\nfunction RecomendUser() {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch()\r\n  const recomendedUser = useSelector(state => state.user.recomendedUser)\r\n  const mutualFriend = useSelector(state => state.user.mutualFriend)\r\n  const config = { headers: { \r\n    'Content-Type':'application/json',\r\n    'Authorization': \"Bearer \" + localStorage.getItem('access_token')\r\n  }}\r\n\r\n  useEffect(()=>{\r\n    dispatch(NotificationCount(config))\r\n    dispatch(RecomendedUser(config))\r\n  },[])\r\n\r\n  const HandleUserFollow = (username) =>{\r\n        dispatch(UserFollow(username, config))\r\n  }\r\n\r\n  const RefreshRecomendedUser = () =>{\r\n    dispatch(RecomendedUser(config))\r\n  }\r\n\r\n  const HnadleMutualFriend = (id) =>{\r\n    console.log(id,'id');\r\n    dispatch(MutualFriend(id, config))\r\n  }\r\n  const RemoveMutualFriend = () =>{\r\n    dispatch({\r\n      type: REMOVE_MUTUAL_FRIEND\r\n    })\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"recomended\">\r\n      <div className=\"Top\" style={{display:'flex', justifyContent:'space-around'}}>\r\n        <h3>Pepole you may know</h3> \r\n        <RefreshIcon style={{cursor:'pointer', color:'blue'}} onClick={RefreshRecomendedUser} />\r\n      </div>   \r\n      <br/>\r\n       <div className=\"card\" style={{display:'flex'}}>\r\n       \r\n       {recomendedUser.length !==0 && (recomendedUser.map(user =>(\r\n\r\n         <Card className={classes.root}>\r\n         <CardActionArea className={classes.cardTopArea}>\r\n           <CardMedia\r\n             className={classes.media}\r\n             image={user.profile.image}\r\n             title=''\r\n           />\r\n           <CardContent>\r\n           {user.full_name ==='None None' ? (\r\n             <Typography gutterBottom className={classes.username} >\r\n             { user.username}\r\n             </Typography>):(\r\n             <Typography   color=\"textSecondary\" component=\"p\" className={classes.username}>\r\n               {user.full_name}\r\n             </Typography>)}\r\n             \r\n           </CardContent>\r\n         </CardActionArea>\r\n\r\n         {user.mutual_friends!==0 && <Typography color=\"textSecondary\" component=\"p\" c>\r\n              <p className={classes.mutualFriend} onClick={() => HnadleMutualFriend(user.id)} > Mutual friend {user.mutual_friends}</p>\r\n          {mutualFriend.length !==0 && (<UserList opene={true} UserList={mutualFriend} closeUserList={RemoveMutualFriend} typeOfUser=\"Mutual Friend\" from=\"mutualFriend\"/>)}\r\n         </Typography>}\r\n\r\n         <CardActions className={classes.flex}>\r\n         \r\n\r\n           <Button size=\"small\" color=\"primary\" onClick={()=> HandleUserFollow(user.username)} className={user.mutual_friends=== 0 ? classes.followButton : classes.nothing}>\r\n             Follow\r\n           </Button>\r\n           \r\n         </CardActions>\r\n       </Card>\r\n\r\n       )))}\r\n        \r\n    \r\n    </div>\r\n       \r\n        \r\n      </div>\r\n  );\r\n}\r\n\r\nexport default RecomendUser;\r\n","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\Home\\Feed\\Post\\userList\\UserList.js",["387","388","389"],"import React,{useEffect} from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Button from '@material-ui/core/Button';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport { makeStyles,createStyles, Theme } from '@material-ui/core/styles';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport {useDispatch,  useSelector} from 'react-redux'\r\nimport {REMOVE_MUTUAL_FRIEND} from '../../../../../store/actions/ActionTypes'\r\nimport {NotificationCount} from '../../../../../store/actions/Utils'\r\n\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nconst useStyles = makeStyles((theme: Theme)=>\r\ncreateStyles({\r\n    title:{\r\n        borderBottom:'1px solid rgb(64, 81, 181)',\r\n        display:'flex'\r\n    },\r\n    large: {\r\n        width: theme.spacing(6),\r\n        height: theme.spacing(6),\r\n        \r\n      },\r\n    body:{\r\n        padding:'20px 50px 5px 50px',  \r\n        display:'flex'\r\n    },\r\n    userList:{\r\n      marginRight:'100px',\r\n      display:'flex'\r\n    },\r\n    button:{\r\n        marginLeft:'auto'\r\n    },\r\n    DeleteIcon:{\r\n        width: theme.spacing(6),\r\n        height: theme.spacing(6),\r\n        color:'rgb(161, 166, 162)',\r\n        cursor:'pointer', \r\n        marginLeft:'auto'\r\n    }\r\n\r\n\r\n}))\r\nexport default function UserList({id, opene, UserList, closeUserList, typeOfUser, from}) {\r\n  console.log(id,'post id');\r\n  const [open, setOpen] = React.useState(opene);\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n\r\n  const config = { headers: { \r\n    'Content-Type':'application/json',\r\n    'Authorization': \"Bearer \" + localStorage.getItem('access_token')\r\n  }}\r\n\r\n  useEffect(()=>{\r\n    dispatch(NotificationCount(config))\r\n  },[])\r\n\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    closeUserList()\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      \r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      > \r\n        <div className={classes.title}>\r\n          <DialogTitle  id=\"alert-dialog-slide-title\">{typeOfUser}</DialogTitle>\r\n        \r\n        <CancelIcon  onClick={handleClose} className={classes.DeleteIcon} />\r\n        </div>\r\n          {UserList.map(user=>(\r\n              <div  className={classes.body}>\r\n                <div className={classes.userList}>\r\n                <Avatar src={user.profile.image} className={classes.large}/>&nbsp;&nbsp;\r\n                {user.full_name !=='None None' ? user.full_name: user.username}\r\n                </div>\r\n                \r\n                <Button color=\"primary\" className={classes.button}>\r\n                 {from!=='mutualFriend'? <span>{user.is_following ? 'Following' : 'Unknown'}</span>: <sapn>following</sapn>}\r\n                </Button>\r\n              </div>\r\n\r\n          ))}\r\n        \r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\CheckAuthentication.js",[],"F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\Home\\Feed\\Post\\deletePost\\DeletePost.js",["390","391","392","393","394","395"],"import React,{useState, useEffect} from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'; \r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport {useHistory} from 'react-router-dom'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {VerifyJwtToken} from '../../../../../store/actions/Auth'\r\nimport {DeletePosts} from '../../../../../store/actions/PostCrud'\r\nimport {NotificationCount} from '../../../../../store/actions/Utils'\r\nimport SnackBer from '../sharePost/SnackBer'\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n        title:{\r\n            borderBottom:'2px solid rgb(64, 81, 181)',\r\n            textAlign:'center'\r\n\r\n        },\r\n        deletePost:{\r\n            padding:'50px'\r\n        },\r\n        buttons:{\r\n            margin:'auto'\r\n        }\r\n   \r\n  }))\r\n\r\nexport default function DeletePost({open, username, id, hondleDeleteFormOpen}) {\r\n    console.log('hello from delete form');\r\n    const classes = useStyles()\r\n    const history = useHistory()\r\n    const dispatch  = useDispatch()\r\n    const deleteInfo = localStorage.getItem('deleted')\r\n    const [formOpen, setFormOpen] = React.useState(open); \r\n    const [newImage, setNewImge] = useState(null)\r\n    const [imgData, setImgData] = useState(null);\r\n\r\n    const config = { headers: { \r\n      'Content-Type':'application/json',\r\n      'Authorization': \"Bearer \" + localStorage.getItem('access_token')\r\n      }}\r\n\r\n    useEffect(()=>{\r\n      dispatch(NotificationCount(config))\r\n    },[])\r\n\r\n    const handleClose = () => {\r\n\r\n        setFormOpen(false);\r\n        localStorage.removeItem('deleted')\r\n        hondleDeleteFormOpen()\r\n\r\n    };\r\n\r\n    const HandlePostDelete =() =>{\r\n        dispatch(VerifyJwtToken())\r\n        checkAuthenticatin()  \r\n        dispatch(DeletePosts(id, username, config))\r\n        closeDialogg()\r\n  }\r\n\r\n \r\n  async function closeDialogg (){\r\n    await new Promise((resolve) => setTimeout(() => { \r\n          setFormOpen(false)\r\n          localStorage.removeItem('deleted')\r\n          hondleDeleteFormOpen()\r\n    \r\n    }, 4000))\r\n  }\r\n  \r\n \r\n  const checkAuthenticatin =()=>{\r\n    const access_token = localStorage.getItem('access_token')\r\n    if(!access_token){\r\n      history.push({\r\n        pathname: '/login',\r\n        state: { detail: 'session expired, Try to login again' }\r\n      })\r\n    }\r\n  }\r\n\r\n \r\n\r\n\r\n\r\n  return (\r\n    <div className='editPost'>\r\n        <Dialog\r\n            className='sharePostForm'\r\n            open={formOpen}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={handleClose}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n\r\n        <div className={classes.deletePost}>\r\n            <h3 className={classes.title}>Delete Post</h3><br/>\r\n            <p>You Realy want to delete this post</p>\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n      \r\n        \r\n\r\n        <DialogActions className={classes.buttons}>\r\n          <Button onClick={handleClose} color=\"primary\" >\r\n            Cancle\r\n          </Button>\r\n          <Button onClick={HandlePostDelete} color=\"primary\" variant=\"contained\">\r\n            Delete\r\n          </Button>\r\n          {deleteInfo!==null && <SnackBer open={true} success_info={deleteInfo} />}\r\n        </DialogActions>\r\n       \r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\Home\\Feed\\Post\\sharePost\\SharePost.js",["396","397","398","399"],"import React,{useState, useEffect} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport {useHistory} from 'react-router-dom'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {VerifyJwtToken} from '../../../../../store/actions/Auth'\r\nimport {SharePost} from '../../../../../store/actions/PostCrud'\r\nimport {NotificationCount} from '../../../../../store/actions/Utils'\r\nimport './SharePost.css'\r\nimport SnackBer from './SnackBer'\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"down\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function SharedPost(props) {\r\n    const history = useHistory()\r\n    const dispatch  = useDispatch()\r\n    const sharePostInfo = localStorage.getItem('RePost')\r\n    const [open, setOpen] = React.useState(props.open);\r\n    const [sharePostContent, setSharepostContent] = useState('')\r\n    \r\n    const config = { headers: { \r\n      'Content-Type':'application/json',\r\n      'Authorization': \"Bearer \" + localStorage.getItem('access_token')\r\n      }}\r\n      \r\n    useEffect(()=>{\r\n      dispatch(NotificationCount(config))\r\n    },[])\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        localStorage.removeItem('RePost')\r\n        props.hondleShareOpen()\r\n    };\r\n\r\n    const HandleSharePost =() =>{\r\n        dispatch(VerifyJwtToken())\r\n        checkAuthenticatin()\r\n        let formData = new FormData()\r\n        formData.append('sharePostContent', sharePostContent)\r\n        dispatch(SharePost(props.id, props.username, formData, config))\r\n        setSharepostContent('')\r\n        closeDialog()\r\n  }\r\n\r\n \r\nasync function closeDialog (){\r\n  await new Promise((resolve) => setTimeout(() => { \r\n      setOpen(false)\r\n      localStorage.removeItem('RePost')\r\n      props.hondleShareOpen()\r\n  \r\n  }, 4000))\r\n}\r\n \r\n  const checkAuthenticatin =()=>{\r\n    const access_token = localStorage.getItem('access_token')\r\n    if(!access_token){\r\n      history.push({\r\n        pathname: '/login',\r\n        state: { detail: 'session expired, Try to login again' }\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\nconsole.log(props.loggedInUsername, props.id);\r\n  return (\r\n    <div className='sharePostForm'>\r\n      <Dialog\r\n         className='sharePostForm'\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n          <div className=\"particular-post\">\r\n         <div className='post-header'>\r\n        <div className=\"post_avatar\">\r\n          <Avatar src={props.loggedInUserImage}/>\r\n        </div>\r\n      \r\n        <div className=\"post__headerText\">\r\n            <h3> {props.loggedInUserFullname !=='None None'? props.loggedInUserFullname: props.loggedInUserUsername}\r\n                \r\n                <span className=\"post_username\"> shareed </span> \r\n               {/* {parent.user.username} post */}{props.postUsername}'s post\r\n            </h3 >\r\n            {/* {timestamp.substr(0,10)} {timestamp.substr(10,6)} */}\r\n        </div>\r\n        </div>\r\n         {/* Post header part ended */}\r\n         {/* Post body part begain */}\r\n        <div className=\"post_body\">    \r\n          <div className=\"post__headerDescription\">\r\n          <textarea\r\n            className=\"Textarea\"\r\n            placeholder=\"What's your mind ?\"\r\n            value={sharePostContent}\r\n            onChange={(e) => setSharepostContent(e.target.value)}\r\n          ></textarea>\r\n          </div>\r\n\r\n          {/* parent post  */}\r\n          <div style={{width:'100%',  height:'auto'}}> \r\n          <div className=\"particular-shared-post\">\r\n        <div className='post-header'>\r\n        <div className=\"post_avatar\">\r\n          <Avatar src={props.postUserImage}/>\r\n        </div>\r\n      \r\n        <div className=\"post__headerText\">\r\n            <h3>{props.postUserFullname !=='None None' ? props.postUserFullname: props.postUsername }\r\n            \r\n                <span className=\"post_username\"> @  {props.postUsername}</span> \r\n\r\n            </h3 >\r\n        </div>\r\n        </div>\r\n        <div className=\"post_body\">    \r\n          <div className=\"post__headerDescription\">\r\n            <p>  {props.content} </p>\r\n          \r\n          </div>\r\n          {/* {parent.image && <img style={{width:'80%', height:\"350px\", marginLeft:'30px'}}  src={parent.image} /> } */} \r\n          {props.image && (<img style={{width:'70%', height:\"250px\", marginLeft:'30px'}}  src={props.image} />)}\r\n              \r\n        </div>\r\n      </div>\r\n      <DialogActions className=\"buttons\">\r\n          <Button onClick={handleClose} color=\"primary\" >\r\n            Cancle\r\n          </Button>\r\n          <Button onClick={HandleSharePost} color=\"primary\" variant=\"contained\">\r\n            share\r\n          </Button>\r\n          {sharePostInfo!==null && <SnackBer open={true} success_info={sharePostInfo} />}\r\n        </DialogActions>\r\n        </div>\r\n        </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n       \r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\Home\\Feed\\Post\\editPost\\EditPost.js",["400","401","402","403","404","405","406"],"import React,{useState, useEffect} from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'; \r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport {useHistory} from 'react-router-dom'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {VerifyJwtToken} from '../../../../../store/actions/Auth'\r\nimport {NotificationCount} from '../../../../../store/actions/Utils'\r\nimport {EditPost} from '../../../../../store/actions/PostCrud'\r\nimport './editPost.css'\r\nimport SnackBer from '../sharePost/SnackBer'\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    large: {\r\n        width: theme.spacing(6),\r\n        height: theme.spacing(6),\r\n      },\r\n    semiLarge:{\r\n        width: theme.spacing(5),\r\n        height: theme.spacing(5),\r\n        color:'rgb(161, 166, 162)',\r\n        cursor:'pointer',\r\n        zIndex:'1',\r\n    },\r\n    cancelIcon:{\r\n        cursor:'pointer', \r\n        marginLeft:'75%', \r\n        marginBottom:'-10px', \r\n        zIndex:'1',\r\n    \r\n    \r\n    },\r\n    img:{\r\n        width:'90%',\r\n        height:\"300px\", \r\n        marginLeft:'30px', \r\n        \r\n    }\r\n  }))\r\n\r\nexport default function EditPosts({open, id, username, parent, postUsername, postUserFullname, postUserImage, content, image, loggedInUsername, loggedInUserImage, hondleEditFormOpen}) {\r\n  console.log(id, 'shared');\r\n    const classes = useStyles()\r\n    const history = useHistory()\r\n    const dispatch  = useDispatch()\r\n    const editInfo = localStorage.getItem('updated')\r\n    const [formOpen, setFormOpen] = React.useState(open); \r\n    const [editContent, setEditContent] = useState(content)\r\n    const [postImage, setPostImage] = useState(image)\r\n    const [newImage, setNewImge] = useState(null)\r\n    const [imgData, setImgData] = useState(null);\r\n    console.log(editInfo,'edit info');\r\n\r\n// load image\r\nconst config = { headers: { \r\n  'Content-Type':'application/json',\r\n  'Authorization': \"Bearer \" + localStorage.getItem('access_token')\r\n  }}\r\n\r\n  useEffect(()=>{\r\n    dispatch(NotificationCount(config))\r\n  },[])\r\n\r\n\r\n  const onChangePicture = (e) => {\r\n    if (e.target.files[0]) {\r\n        setNewImge(e.target.files[0]);\r\n        const reader = new FileReader();\r\n        reader.addEventListener(\"load\", () => {\r\n        setImgData(reader.result);\r\n      });\r\n      reader.readAsDataURL(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n\r\n    const handleClose = () => {\r\n        setFormOpen(false);\r\n        localStorage.removeItem('updated')\r\n        hondleEditFormOpen()\r\n\r\n    };\r\n\r\n    const HandlePostEdit =() =>{\r\n        dispatch(VerifyJwtToken())\r\n        checkAuthenticatin()  \r\n        \r\n        let formData = new FormData()\r\n        if(editContent){\r\n            formData.append('content', editContent)\r\n        }\r\n\r\n        if(newImage){\r\n            formData.append('image', newImage)\r\n        }\r\n        console.log(formData.get('content'));\r\n        console.log(formData.get('image'));\r\n\r\n        dispatch(EditPost(id, username, formData, config))\r\n\r\n        closeDialog()\r\n  }\r\n\r\n \r\nasync function closeDialog (){\r\n  await new Promise((resolve) => setTimeout(() => { \r\n        setFormOpen(false)\r\n        localStorage.removeItem('updated')\r\n        hondleEditFormOpen()\r\n  \r\n  }, 4000))\r\n}\r\n\r\n \r\n  const checkAuthenticatin =()=>{\r\n    const access_token = localStorage.getItem('access_token')\r\n    if(!access_token){\r\n      history.push({\r\n        pathname: '/login',\r\n        state: { detail: 'session expired, Try to login again' }\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className='editPost'>\r\n      <Dialog\r\n         className='sharePostForm'\r\n        open={formOpen}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n\r\n\r\n\r\n\r\n\r\n\r\n        {!parent ? (\r\n        <div className=\"particular-post\">\r\n        {/* Post header part begain */}\r\n        <div className='post-header'>\r\n        \r\n        <div className=\"post_avatar\">\r\n          <Avatar src={postUserImage} className={classes.large}/>\r\n        </div>\r\n      \r\n        <div className=\"post__headerText\">\r\n            <h3> {postUserFullname!=='None None'? postUserFullname : postUsername}\r\n                {/* {varified && <VerifiedUserIcon className=\"post_badge\" /> } */}\r\n                <span className=\"post_username\"> @{postUsername} </span> \r\n\r\n            </h3 >\r\n        \r\n        </div>\r\n        </div>\r\n          {/* Post header part end */}\r\n        \r\n        {/* Post body part begain */}\r\n        <div className=\"post_body\">    \r\n          <div className=\"post__headerDescription\">\r\n          <textarea\r\n            autoFocus\r\n            className=\"Textarea\"\r\n            placeholder=\"What's your mind ?\"\r\n            value={editContent}\r\n            onChange={(e) => setEditContent(e.target.value)}\r\n          ></textarea>\r\n            \r\n          </div>\r\n          <label style={{width:'150px'}} className=\"Label\">Add / Change Image</label> &nbsp;\r\n          <input type=\"file\" id=\"upload\" onChange={onChangePicture}/><br/><br/>\r\n          {postImage && (<img  className={classes.img} src={imgData ? imgData :postImage} />  )}\r\n              \r\n        </div>\r\n        </div>\r\n        ):(\r\n\r\n        \r\n          <div className=\"particular-post\">\r\n         <div className='post-header'>\r\n        <div className=\"post_avatar\">\r\n          <Avatar src={loggedInUserImage}/>\r\n        </div>\r\n      \r\n        <div className=\"post__headerText\">\r\n            <h3> {loggedInUsername}\r\n                \r\n                <span className=\"post_username\"> shareed </span> \r\n               {/* {parent.user.username} post */}{postUsername}'s post\r\n            </h3 >\r\n            {/* {timestamp.substr(0,10)} {timestamp.substr(10,6)} */}\r\n        </div>\r\n        </div>\r\n         {/* Post header part ended */}\r\n         {/* Post body part begain */}\r\n        <div className=\"post_body\">    \r\n          <div className=\"post__headerDescription\">\r\n          <textarea\r\n            autoFocus\r\n            className=\"Textarea\"\r\n            placeholder=\"What's your mind ?\"\r\n            value={editContent}\r\n            onChange={(e) => setEditContent(e.target.value)}\r\n          ></textarea>\r\n          </div>\r\n\r\n          {/* parent post  */}\r\n          <div style={{width:'100%',  height:'auto'}}> \r\n          <div className=\"particular-shared-post\">\r\n        <div className='post-header'>\r\n        <div className=\"post_avatar\">\r\n          <Avatar src={postUserImage}/>\r\n        </div>\r\n      \r\n        <div className=\"post__headerText\">\r\n            <h3>{postUserFullname}\r\n            \r\n                <span className=\"post_username\"> @  {postUsername}</span> \r\n\r\n            </h3 >\r\n        </div>\r\n        </div>\r\n        <div className=\"post_body\">    \r\n          <div className=\"post__headerDescription\">\r\n            <p>  {content} </p>\r\n          \r\n          </div>\r\n          {/* {parent.image && <img style={{width:'80%', height:\"350px\", marginLeft:'30px'}}  src={parent.image} /> } */} \r\n          <img style={{width:'70%', height:\"250px\", marginLeft:'30px'}}  src={image} />\r\n         \r\n        </div>\r\n        \r\n      </div>\r\n\r\n      \r\n        </div>\r\n        </div>\r\n        </div>\r\n        )}\r\n        \r\n            \r\n        \r\n\r\n        <DialogActions className=\"buttons\">\r\n          <Button onClick={handleClose} color=\"primary\" >\r\n            Cancle\r\n          </Button>\r\n          <Button onClick={HandlePostEdit} color=\"primary\" variant=\"contained\">\r\n            Update\r\n          </Button>\r\n          {editInfo!==null && <SnackBer open={true} success_info={editInfo} />}\r\n        </DialogActions>\r\n       \r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\Home\\Feed\\Post\\comment\\Comment.js",["407","408","409"],"import React, {useState, useEffect } from 'react'\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'; \r\nimport TextField from '@material-ui/core/TextField';\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {useHistory, NavLink} from 'react-router-dom'\r\nimport {VerifyJwtToken} from '../../../../../store/actions/Auth'\r\nimport {CommentUpdate, CommentDelete} from '../../../../../store/actions/PostCrud'\r\nimport {NotificationCount} from '../../../../../store/actions/Utils'\r\nimport Link from '@material-ui/core/Link';\r\n\r\nimport './Comment.css'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n\r\n    small: {\r\n      width: theme.spacing(4),\r\n      height: theme.spacing(4),\r\n    },\r\n    text:{\r\n        width:'100%',\r\n        \r\n      },\r\n    comment_body_edit:{\r\n        width: '100%',\r\n        height: 'auto',\r\n        padding: '5px',\r\n        marginLeft: '10px',\r\n        marginTop: '20px',\r\n        fontWeight: '400',\r\n        marginTop: '-5px',\r\n        backgroundColor: '#e0e0e0',\r\n        borderRadius: '10px',\r\n    },\r\n    comment_body:{\r\n        width: 'auto',\r\n        height: 'auto',\r\n        padding: '5px',\r\n        marginLeft: '10px',\r\n        marginTop: '20px',\r\n        fontWeight: '400',\r\n        marginTop: '-5px',\r\n        backgroundColor: '#e0e0e0',\r\n        borderRadius: '10px',\r\n\r\n    },\r\n    cancle_edit:{\r\n        marginTop:'35px', \r\n        color:'blue',\r\n        cursor:'pointer',\r\n        '&:hover': {\r\n            color: \"red\",\r\n         },\r\n\r\n    }\r\n  }),\r\n);\r\n\r\nconst CommentEditOptions = [\r\n    'Edit',\r\n    'Delete'\r\n]\r\n\r\n\r\nfunction Comment(props) {\r\n\r\n    const comment = props.comment\r\n\r\n    const classes = useStyles();\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const [openCommentEditOptin, setOpenCommentEditOption] = useState(false)\r\n    const [editCommentOption, setEditCommentOption] = useState('')\r\n    const [postComment, setPostComment] = useState(comment.comment)\r\n    const loggedin_user_info = useSelector(state=> state.user.loggedinUserInfo)\r\n    const config = { headers: { \r\n      'Content-Type':'application/json',\r\n      'Authorization': \"Bearer \" + localStorage.getItem('access_token')\r\n    }}\r\n\r\n    useEffect(() => {\r\n      \r\n     dispatch(NotificationCount(config))\r\n    }, [])\r\n\r\n    const HandleCommetPut = (e, id) =>{\r\n        dispatch(VerifyJwtToken())\r\n        checkAuthenticatin()\r\n        \r\n        if(e.code==='Enter'){\r\n          const formData = new FormData()\r\n          formData.append('comment', postComment)\r\n          dispatch(CommentUpdate(id, props.username,formData, config))\r\n          setEditCommentOption('')\r\n          setOpenCommentEditOption(false)\r\n        }   \r\n      }\r\n\r\n    const HandelSetOption = (option) =>{\r\n        dispatch(VerifyJwtToken())\r\n        checkAuthenticatin()\r\n        setEditCommentOption(option)\r\n        if(option ==='Delete'){\r\n            dispatch(CommentDelete(comment.id, props.username, config))\r\n            setEditCommentOption('')\r\n            setOpenCommentEditOption(false)\r\n        }\r\n    }\r\n\r\n    const HandleCommentEditOpen= () =>{\r\n        console.log('hello');\r\n        setEditCommentOption('')\r\n        setOpenCommentEditOption(false)\r\n\r\n    }\r\n    const checkAuthenticatin =()=>{\r\n        const access_token = localStorage.getItem('access_token')\r\n        if(!access_token){\r\n          history.push({\r\n            pathname: '/login',\r\n            state: { detail: 'session expired, Try to login again' }\r\n          })\r\n        }\r\n      }\r\n\r\n    return (\r\n     <div className='comment' onClick={() => openCommentEditOptin && setOpenCommentEditOption(false)}> \r\n\r\n      {/* comment  */}\r\n        <div className= 'comment-header'>\r\n        <Avatar src={comment.user && comment.user.profile.image} className={classes.small}/> \r\n      </div> \r\n      <div className={editCommentOption ==='Edit' ? classes.comment_body_edit : classes.comment_body}>\r\n      \r\n      {/* Comment user name */}\r\n        <div style={{display:'flex'}}>\r\n        <h4>\r\n        <Link component={NavLink}  underline=\"none\"  to={`/profile/${comment.user.username }`}>\r\n          {comment.user.full_name ? comment.user.username: comment.user.full_name}\r\n          </Link>\r\n          </h4> &nbsp; <p style={{ontSize:'13px', marginLeft:'auto'}}> </p>&nbsp;{comment.create_date}\r\n        </div>\r\n        \r\n          {/* Comment create fomr */}\r\n        <div>\r\n         {editCommentOption === 'Edit' ? (<TextField autoFocus className={classes.text} onKeyDown={e =>HandleCommetPut(e, comment.id)} onChange={e => setPostComment(e.target.value)} value={postComment}  placeholder=\"What's you'r mind ?\" spellCheck=\"true\"/>)  : comment.comment }\r\n        </div>\r\n        \r\n      </div>\r\n      <div>\r\n          {editCommentOption === 'Edit' && (<p className={classes.cancle_edit} onClick={()=>HandleCommentEditOpen()}>cancle</p>)}\r\n    </div>\r\n      \r\n\r\n      {/* Comment edit options */}\r\n      <div style={{marginLeft:'auto'}}>\r\n      {loggedin_user_info.username === comment.user.username && <nav role=\"navigation\">\r\n        <ul>\r\n          <li onClick={()=> setOpenCommentEditOption(!openCommentEditOptin)} ><h2>...</h2>\r\n        <ul class=\"dropdown\">\r\n          {openCommentEditOptin &&\r\n            CommentEditOptions.map( (option) =>(\r\n            <li onClick={e => HandelSetOption(option)}  className=\"option\"><p>{option}</p></li>\r\n            ))\r\n          }\r\n          \r\n          \r\n        </ul>\r\n          </li>\r\n        </ul>\r\n        </nav>}\r\n      </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Comment\r\n","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\Home\\Feed\\Post\\sharePost\\SnackBer.js",["410","411","412","413","414","415"],"import React,{useState, useEffect} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {REMOVE_PASSWORD_CHANGE_SUCCESS, REMOVE_USER_PROFILE_UPDATE_SUCCESS,REMOVE_RESET_EMAIL_CHANGED_SUCCESS, REMOVE_RESET_PASSSWORD_SUCCESS} from '../../../../../store/actions/ActionTypes'\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\r\n\r\n\r\nfunction SnackBer(props) {\r\n  \r\n    const dispatch = useDispatch()\r\n    const [state, setState] = React.useState({\r\n        snackBerOpen: false,\r\n        vertical: 'top',\r\n        horizontal: 'center',\r\n      });\r\n\r\n      const info = props.success_info\r\n      const {horizontal, vertical, snackBerOpen} = state;\r\n\r\n      useEffect(()=>{\r\n          setState({...state, snackBerOpen:props.open})\r\n      },[])\r\n\r\n      let confirmInfo = 'No comments'\r\n\r\n      if (props.success_info === 'True'){\r\n        confirmInfo=\"SuccessFully Shared\"\r\n        closeDialog()\r\n      }else if(props.success_info === 'success'){\r\n        confirmInfo=\"Successfully Updated\"\r\n        closeDialog()\r\n      }else if(props.success_info === 'Deleted'){\r\n        confirmInfo=\"Successfully Deleted\"\r\n        closeDialog()\r\n      }else if(props.success_info === 'False') {\r\n        confirmInfo=\"Already shared for today\"\r\n        closeDialog()\r\n      }else if(props.success_info === 'pass_changed') {\r\n        confirmInfo=\"Password Changed successfully\"\r\n        \r\n        closeDialog('pass')\r\n      }else if(props.success_info === 'profile_updated') {\r\n        confirmInfo=\"Profile updated successfully\"\r\n        \r\n        closeDialog('prof')\r\n      }\r\n      else if(props.success_info === 'OK') {\r\n        confirmInfo=\"Password Reset successfully, Try To Login Again\"\r\n        \r\n        closeDialog('res')\r\n      }\r\n      const handleOpen = () =>{\r\n        setState({ ...state, snackBerOpen: true });\r\n      }\r\n\r\n      async function closeDialog (dis){\r\n        await new Promise((resolve) => setTimeout(() => { \r\n            setState({ ...state, snackBerOpen: false });  \r\n            dis === 'pass' && dispatch({\r\n              type:REMOVE_PASSWORD_CHANGE_SUCCESS,\r\n              \r\n            })  \r\n            dis === 'prof' && dispatch({\r\n              type:REMOVE_USER_PROFILE_UPDATE_SUCCESS\r\n            })\r\n            dis === 'res' && dispatch({\r\n              type:REMOVE_RESET_EMAIL_CHANGED_SUCCESS\r\n            })\r\n            dis === 'res' && dispatch({\r\n              type:REMOVE_RESET_PASSSWORD_SUCCESS\r\n            })\r\n        }, 2000))\r\n      }\r\n\r\n  \r\n    \r\n    return (\r\n        <div>\r\n                <Snackbar\r\n                    anchorOrigin={{ vertical, horizontal }}\r\n                    open={snackBerOpen}\r\n                    key={vertical + horizontal}>\r\n                      \r\n                      <SnackbarContent\r\n                        aria-describedby=\"message-id2\"\r\n                        // className={classes.snackbarStyleViaNestedContent}\r\n\r\n                        style={props.success_info === 'False' ? {backgroundColor:'rgb(71, 73, 82)'}: {backgroundColor:'green'}}\r\n                        message={\r\n                          <span id=\"message-id2\">\r\n                            <div>{confirmInfo}</div>\r\n                          </span>\r\n                      }\r\n                      />\r\n                    </Snackbar>\r\n                \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SnackBer\r\n","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\profileSettings\\UpdateProfileInfo.js",["416","417","418","419"],"import React, {useEffect, useState} from 'react'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Nav from '../../component/Nav'\r\nimport ProfileSettings from './ProfileSettings'\r\nimport ChangePassword from './ChangePassword'\r\nimport ChangeProfilePicture from './ChangeProfilePicture'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {UserProfile, UserFollow, LoggedUserInfo} from '../../store/actions/UserProfile'\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n      root:{\r\n        display:'flex',\r\n        flexDirection:'column'\r\n      },\r\n\r\n      body:{\r\n        display:'flex',\r\n        \r\n        ['@media (max-width: 920px)']: { // eslint-disable-line no-useless-computed-key\r\n            flexDirection: 'column',    \r\n          },\r\n      },\r\n\r\n      sideNav:{\r\n          flex:.7,\r\n          display:'flex',\r\n\r\n       \r\n          paddingTop:15,\r\n          borderRight:'2px solid #EBECED',\r\n          ['@media (min-width: 921px)']: { // eslint-disable-line no-useless-computed-key\r\n            flexDirection: 'column',\r\n          },\r\n          \r\n          ['@media (max-width: 600px)']: { // eslint-disable-line no-useless-computed-key\r\n           \r\n            flexDirection: 'column',\r\n            paddingBottom:10,  \r\n          },\r\n      },\r\n\r\n      UpdateInfo:{\r\n          flex:2,\r\n          width:'100%',\r\n          borderLeft:'2px solid #EBECED',\r\n      },\r\n\r\n      button:{\r\n          width:200,\r\n          margin:10,\r\n          ['@media (min-width: 920px)']: { // eslint-disable-line no-useless-computed-key\r\n            marginLeft:'auto', \r\n          },\r\n          \r\n          ['@media (max-width: 600px)']: { // eslint-disable-line no-useless-computed-key \r\n            margin:'auto',\r\n            marginTop:8,\r\n          },\r\n      },\r\n  })\r\n)\r\n\r\nfunction UpdateProfileInfo() {\r\n\r\n    const classes = useStyles() \r\n    const dispatch = useDispatch()\r\n    const loggedInUser = useSelector(state => state.user.loggedinUserInfo)\r\n    const userProfile = useSelector(state => state.user.userProfile)\r\n    const [openProfileSettings, setOpenProfileSettings]=useState(true)\r\n    const [openProfilePictureChange, setOpenProfilePictureChange]=useState(false)\r\n    const [openChangePassword, setOpenChangePassword]=useState(false)\r\n\r\n    const config = { headers: {'Authorization': \"Bearer \" + localStorage.getItem('access_token')}}\r\n\r\n    useEffect(()=>{\r\n        dispatch(LoggedUserInfo(config))\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n       {loggedInUser && dispatch(UserProfile( loggedInUser.username, config)) } \r\n    },[loggedInUser])\r\n\r\n    const handleOpenChangePassowrdForm = () =>{\r\n        setOpenChangePassword(true)\r\n        setOpenProfileSettings(false)\r\n        setOpenProfilePictureChange(false)\r\n    }\r\n    const handleOpenProfileSettings = () =>{\r\n        setOpenChangePassword(false)\r\n        setOpenProfilePictureChange(false)\r\n        setOpenProfileSettings(true)\r\n    }\r\n\r\n    const handleOpenProfilePricturChange = () =>{\r\n      setOpenChangePassword(false)\r\n      setOpenProfileSettings(false)\r\n      setOpenProfilePictureChange(true)\r\n  }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Nav />\r\n            <div className={classes.body}>\r\n            <div className={classes.sideNav}>\r\n              \r\n                <Button onClick={handleOpenProfileSettings} className={classes.button} variant=\"contained\" color=\"primary\">\r\n                   profile info\r\n                </Button>\r\n                <Button onClick={handleOpenProfilePricturChange} className={classes.button} variant=\"contained\" color=\"primary\">\r\n                       profile picture\r\n                </Button>\r\n                <Button onClick={handleOpenChangePassowrdForm} className={classes.button} variant=\"contained\" color=\"primary\">\r\n                     Change password\r\n                </Button>\r\n              \r\n\r\n            </div>\r\n            <div className={classes.UpdateInfo}>\r\n               {openProfileSettings && userProfile && <ProfileSettings  userInfo={userProfile} />}\r\n              { openChangePassword &&  < ChangePassword />}\r\n              {openProfilePictureChange && <ChangeProfilePicture  userInfo={userProfile}/>}\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateProfileInfo\r\n","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\profileSettings\\ProfileSettings.js",["420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438"],"import React, {useState, useEffect} from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport {UserProfile, UserFollow, LoggedUserInfo, EditUserProfile} from '../../store/actions/UserProfile'\r\nimport { Button } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport SnackBer from '../Home/Feed/Post/sharePost/SnackBer'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\ncreateStyles({\r\n    root:{\r\n      display:'flex',\r\n      flexDirection:'column',\r\n      justifyContent:'center',\r\n      justifyItems:'center',\r\n      justifySelf:'center',\r\n      margin:'auto',\r\n      width:'100%',\r\n      paddingTop:20,\r\n      \r\n      \r\n    },\r\n    \r\n    forms:{\r\n        marginBottom:10,\r\n    },\r\n      title:{\r\n          width:'100%',\r\n          textAlign:'center',\r\n          fontSize:40,\r\n          marginBottom:10,\r\n          paddingBottom:5,\r\n          borderBottom:'2px solid #EBECED'\r\n      },\r\n    editButton:{\r\n        backgroundColor:'rgb(66, 129, 245)', float:'right', marginRight:20,\r\n    },\r\n    lavelName:{\r\n        marginBottom:10,\r\n    }\r\n\r\n})\r\n)\r\n\r\nexport default function ProfileSettings({userInfo}) {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const loggedInUser = useSelector(state => state.user.loggedinUserInfo)\r\n    const ProfileUpdateError = useSelector(state => state.user.userUpdateFail)\r\n    const ProfileUpdateSuccess = useSelector(state => state.user.userUpdateSuccess)\r\n\r\n    \r\n\r\n    const [openEdit, setOpenEdit] = useState(false)\r\n\r\n    const [profileInfo, setProfileInfo] = useState({\r\n       first_name: userInfo.profile.first_name,\r\n       Last_name: userInfo.profile.Last_name,\r\n       bio : userInfo.profile.bio,\r\n       occupation: userInfo.profile.occupations,\r\n       gander : userInfo.profile.gander,\r\n       relationship_status: userInfo.profile.relationship_status,\r\n       location:userInfo.profile.location,\r\n       phone: userInfo.profile.Phone,\r\n       facebook_Link: userInfo.profile.facebook_Link,\r\n       twitter_link: userInfo.profile.twitter_link,\r\n       linkdin_link: userInfo.profile.linkdin_link,\r\n       github_link: userInfo.profile.github_link, \r\n    })\r\n    console.log(profileInfo.github_link, 'githubbbb');\r\n    const config = { headers: { \r\n        'Content-Type':'application/json',\r\n        'Authorization': \"Bearer \" + localStorage.getItem('access_token')\r\n      }}\r\n    useEffect(()=>{\r\n        dispatch(LoggedUserInfo(config))\r\n    },[])\r\n\r\n    const HandleUpdatePost = ()=>{\r\n     \r\n        let formData = new FormData();\r\n       { formData.append(\"first_name\", profileInfo.first_name); }\r\n        {profileInfo.Last_name !==null &&  formData.append(\"Last_name\", profileInfo.Last_name); }\r\n        {profileInfo.bio  !==null && formData.append(\"bio\", profileInfo.bio); }\r\n        {profileInfo.occupation !==null  && formData.append(\"occupations\", profileInfo.occupation);}\r\n        {profileInfo.gander !==null  && formData.append(\"gander\", profileInfo.gander); }\r\n        {profileInfo.relationship_status !==null  && formData.append(\"relationship_status\", profileInfo.relationship_status); }\r\n        {profileInfo.location !==null  && formData.append(\"location\", profileInfo.location); }\r\n        {profileInfo.phone !==null  && formData.append(\"Phone\", profileInfo.phone); }\r\n        {profileInfo.facebook_Link !==null  && formData.append(\"facebook_Link\", profileInfo.facebook_Link);}\r\n        {profileInfo.twitter_link !==null  && formData.append(\"twitter_link\", profileInfo.twitter_link); }\r\n        {profileInfo.linkdin_link !==null  && formData.append(\"linkdin_link\", profileInfo.linkdin_link); }\r\n        {profileInfo.github_link !==null  && formData.append(\"github_link\", profileInfo.github_link); }\r\n\r\n        dispatch(EditUserProfile(userInfo.profile.id, userInfo.username,  formData, config ))\r\n        \r\n    }\r\n\r\n    useEffect(()=>{\r\n      {ProfileUpdateSuccess===true && setOpenEdit(false)}\r\n\r\n  },[ProfileUpdateSuccess])\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{margin:'auto', width:'100%'}}>\r\n       <div className={classes.title}>\r\n            Profile Info\r\n        </div>  \r\n        <div style={{width:'100%'}}>\r\n       <Button onClick={()=> setOpenEdit(!openEdit)} className={classes.editButton} variant=\"contained\" color=\"primary\">\r\n            Edit Profile\r\n        </Button>\r\n        </div>\r\n\r\n      <div style={{ justifyContent:'center', display:'flex',flexWrap:'wrap',  width:'100%'}}>\r\n      \r\n\r\n          \r\n        <Grid   className={classes.forms} item xs={10} sm={4}   style={{marginRight:30}} >\r\n           {!openEdit && <p className={classes.lavelName}> First Name: {userInfo && userInfo.profile.first_name} </p>}\r\n          {openEdit && <TextField\r\n            id=\"first_name\"\r\n            name=\"first_name\"\r\n            label=\"First Name\"\r\n            value={profileInfo.first_name}\r\n            fullWidth\r\n            autoComplete=\"family-name\"\r\n            onChange={e => setProfileInfo({...profileInfo, [e.target.name]:e.target.value})}\r\n\r\n          />}\r\n        </Grid>\r\n\r\n            <Grid   className={classes.forms} item  sm={4} xs={10}>\r\n            {!openEdit && <p className={classes.lavelName}> Last Name: {userInfo && userInfo.profile.Last_name}</p>}\r\n           {openEdit && <TextField\r\n\r\n            id=\"Last_Name\"\r\n            name=\"Last_name\"\r\n            label=\"Last Name\"\r\n            value={profileInfo.Last_name}\r\n            fullWidth\r\n            autoComplete=\"family-name\"\r\n            onChange={e => setProfileInfo({...profileInfo, [e.target.name]:e.target.value})}\r\n          />}\r\n        </Grid>\r\n        <Grid   className={classes.forms} item  sm={9} xs={10}>\r\n        {!openEdit && <p> Bio: {userInfo && userInfo.profile.bio}</p>}\r\n        {openEdit && <TextField  value={profileInfo.bio} id=\"Bio\" name=\"bio\" label=\"Bio\" \r\n        onChange={e => setProfileInfo({...profileInfo, [e.target.name]:e.target.value})}\r\n        fullWidth />}\r\n        </Grid>\r\n        <Grid   className={classes.forms} item sm={9} xs={10}>\r\n        {!openEdit && <p className={classes.lavelName}> Occupations: {userInfo && userInfo.profile.occupations}</p>}\r\n           {openEdit && <TextField\r\n\r\n            id=\"occupation\"\r\n            name=\"occupation\"\r\n            label=\"Occupations\"\r\n            value={profileInfo.occupation}\r\n            fullWidth\r\n            autoComplete=\"shipping address-line1\"\r\n            onChange={e => setProfileInfo({...profileInfo, [e.target.name]:e.target.value})}\r\n          />}\r\n        </Grid>\r\n        <Grid   className={classes.forms} item sm={9} xs={10}>\r\n        {!openEdit && <p className={classes.lavelName}> Gander: {userInfo && userInfo.profile.gander}</p>}\r\n           {openEdit && <TextField\r\n            id=\"gander\"\r\n            name=\"gander\"\r\n            label=\"Gender\"\r\n            value={profileInfo.gander}\r\n            fullWidth\r\n            autoComplete=\"shipping address-line2\"\r\n            onChange={e => setProfileInfo({...profileInfo, [e.target.name]:e.target.value})}\r\n          />}\r\n        </Grid>\r\n        <Grid   className={classes.forms} item sm={9} xs={10}>\r\n        {!openEdit && <p className={classes.lavelName}> Relationship Status: {userInfo && userInfo.profile.relationship_status}</p>}\r\n           {openEdit && <TextField\r\n            id=\"relationship_status\"\r\n            name=\"relationship_status\"\r\n            label=\"Relationship Status\"\r\n            value={profileInfo.relationship_status}\r\n            fullWidth\r\n            autoComplete=\"shipping address-level2\"\r\n            onChange={e => setProfileInfo({...profileInfo, [e.target.name]:e.target.value})}\r\n          />}\r\n        </Grid>\r\n\r\n        <Grid   className={classes.forms} item  sm={9} xs={10}>\r\n        {!openEdit && <p className={classes.lavelName}>Location: {userInfo && userInfo.profile.location}</p>}\r\n           {openEdit && <TextField\r\n            id=\"location\"\r\n            name=\"location\"\r\n            label=\"Locatoin\"\r\n            value={profileInfo.location}\r\n            fullWidth\r\n            autoComplete=\"shipping postal-code\"\r\n            onChange={e => setProfileInfo({...profileInfo, [e.target.name]:e.target.value})}\r\n          />}\r\n        </Grid>\r\n        <Grid   className={classes.forms} item sm={9} xs={10}>\r\n        \r\n        {!openEdit && <p className={classes.lavelName}> Phone: {userInfo && userInfo.profile.Phone}</p>}\r\n           {openEdit && <TextField\r\n            value={profileInfo.phone}\r\n            id=\"phone\"\r\n            name=\"phone\"\r\n            label=\"Phone number\"\r\n            fullWidth\r\n            autoComplete=\"shipping country\"\r\n            onChange={e => setProfileInfo({...profileInfo, [e.target.name]:e.target.value})}\r\n          />}\r\n        </Grid>\r\n\r\n        <Grid   className={classes.forms} item sm={9} xs={10}>\r\n        {!openEdit && <p className={classes.lavelName}> Linkdin: {userInfo && userInfo.profile.linkdin_link}</p>}\r\n           {openEdit && <div> <TextField\r\n            id=\"linkdin_link\"\r\n            name=\"linkdin_link\"\r\n            label=\"Linkdin Profile\"\r\n            value={profileInfo.linkdin_link}\r\n            fullWidth\r\n            autoComplete=\"shipping country\"\r\n            onChange={e => setProfileInfo({...profileInfo, [e.target.name]:e.target.value})}\r\n          />\r\n          <span style={{color:'red'}}>{ProfileUpdateError && ProfileUpdateError.linkdin_link && ProfileUpdateError.linkdin_link.linkdin }</span>\r\n          </div>\r\n          }\r\n        </Grid>\r\n        <Grid   className={classes.forms} item sm={9} xs={10}>\r\n        {!openEdit && <p className={classes.lavelName}> GitHub: {userInfo && userInfo.profile.github_link}</p>}\r\n           {openEdit && <div><TextField\r\n            id=\"github_link\"\r\n            name=\"github_link\"\r\n            label=\"GitHub Profile\"\r\n            value={profileInfo.github_link}\r\n            fullWidth\r\n            autoComplete=\"shipping country\"\r\n            onChange={e => setProfileInfo({...profileInfo, [e.target.name]:e.target.value})}\r\n          />\r\n          <span style={{color:'red'}}>{ProfileUpdateError && ProfileUpdateError.github_link && ProfileUpdateError.github_link.github }</span>\r\n          </div>}\r\n        </Grid>\r\n\r\n        <Grid   className={classes.forms} item sm={9} xs={10}>\r\n        {!openEdit && <p className={classes.lavelName}> Facebook : {userInfo && userInfo.profile.facebook_Link} </p>}\r\n           {openEdit && <div> <TextField\r\n            id=\"facebook_Link\"\r\n            name=\"facebook_Link\"\r\n            label=\"Facebook profile\"\r\n            value={profileInfo.facebook_Link}\r\n            fullWidth\r\n            autoComplete=\"shipping country\"\r\n            onChange={e => setProfileInfo({...profileInfo, [e.target.name]:e.target.value})}\r\n          />\r\n          <span style={{color:'red'}}>{ProfileUpdateError && ProfileUpdateError.facebook_Link && ProfileUpdateError.facebook_Link.facebook }</span>\r\n          </div>}\r\n        </Grid>\r\n\r\n        <Grid   className={classes.forms} item sm={9} xs={10}>\r\n        {!openEdit && <p className={classes.lavelName}> Twitter : {userInfo && userInfo.profile.twitter_link}</p>}\r\n           {openEdit && <div><TextField\r\n            id=\"twitter_link\"\r\n            name=\"twitter_link\"\r\n            label=\"Twitter Profile\"\r\n            value={profileInfo.twitter_link}\r\n            fullWidth\r\n            autoComplete=\"shipping country\"\r\n            onChange={e => setProfileInfo({...profileInfo, [e.target.name]:e.target.value})}\r\n          />\r\n            <span style={{color:'red'}}>{ProfileUpdateError && ProfileUpdateError.twitter_link && ProfileUpdateError.twitter_link.twitter }</span>\r\n          </div>\r\n           }\r\n\r\n        </Grid>\r\n\r\n        <Grid className={classes.forms} item sm={9}  xs={12}  style={{marginBottom:40, marginTop:20,}}>\r\n        {openEdit &&<div> <Button onClick={()=> setOpenEdit(false)}  style={{backgroundColor:'rgb(171, 46, 38)', marginRight:10,}} variant=\"contained\" color=\"primary\">\r\n        cancle\r\n        </Button>\r\n\r\n        <Button onClick={HandleUpdatePost} style={{backgroundColor:'rgb(66, 129, 245)'}} variant=\"contained\" color=\"primary\">\r\n           \r\n           Update Profile\r\n        </Button>\r\n\r\n        </div>\r\n        \r\n        }\r\n        </Grid>\r\n        \r\n        {ProfileUpdateSuccess===true && <SnackBer open={true} success_info=\"profile_updated\"/>}\r\n        \r\n\r\n    </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\profileSettings\\ChangePassword.js",["439","440","441","442","443"],"import React, {useState, useEffect} from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { Button } from '@material-ui/core';\r\nimport {ChangeUserPassword} from '../../store/actions/Auth'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport SnackBer from '../Home/Feed/Post/sharePost/SnackBer'\r\nimport {useParams} from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\ncreateStyles({\r\n    root:{\r\n      display:'flex',\r\n      flexDirection:'column',\r\n      justifyContent:'center',\r\n      justifyItems:'center',\r\n      justifySelf:'center',\r\n      margin:'auto',\r\n      width:'100%',\r\n      paddingTop:20,\r\n      \r\n      \r\n    },\r\n    \r\n    forms:{\r\n        marginBottom:10,\r\n    },\r\n    title:{\r\n        width:'100%',\r\n        textAlign:'center',\r\n        fontSize:40,\r\n        marginBottom:10,\r\n        paddingBottom:5,\r\n        borderBottom:'2px solid #EBECED'\r\n    }\r\n\r\n})\r\n)\r\n\r\nexport default function ChangePassword() {\r\n\r\n    const classes = useStyles()\r\n    const dispatch=useDispatch()\r\n   \r\n    const error = useSelector(state => state.auth.passwordChange_error)\r\n    const success = useSelector(state => state.auth.passwordChange_Success)\r\n    const [oldPasswordRequired, setOldPasswordRequired] = useState(false)\r\n    const [newPasswordRequired, setNewPasswordRequired] = useState(false)\r\n    const [openSnackber, setOpenSnackber] = useState(false)\r\n\r\n    const [inputData, setInputData] = useState({\r\n        old_password:'',\r\n        new_password:''\r\n    })\r\n\r\n\r\n    const config = { headers: { \r\n        'Content-Type':'application/json',\r\n        'Authorization': \"Bearer \" + localStorage.getItem('access_token')\r\n      }}\r\n\r\n    const HandleChangePassword = () =>{\r\n\r\n        {inputData.old_password ==='' && setOldPasswordRequired(true)}\r\n        {inputData.new_password ==='' && setNewPasswordRequired(true)}\r\n        \r\n        if (inputData.old_password !=='' && inputData.new_password !==''){\r\n            let formData = new FormData();\r\n            formData.append('old_password', inputData.old_password)\r\n            formData.append('new_password', inputData.new_password)\r\n            dispatch(ChangeUserPassword(formData, config))\r\n        }\r\n        setInputData({\r\n            old_password:'',\r\n            new_password:''\r\n        })\r\n    }\r\n\r\n    \r\n\r\n   useEffect(()=>(\r\n     success!==null && setOpenSnackber(true)\r\n   ),[success])\r\n\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{margin:'auto', width:'100%'}}>\r\n       <div className={classes.title}>\r\n            Change Password\r\n        </div>  \r\n      <div style={{ justifyContent:'center', display:'flex',flexWrap:'wrap',  width:'100%'}}>\r\n        <Grid   className={classes.forms} item sm={9} xs={10}>\r\n          <TextField\r\n            required\r\n            id=\"country\"\r\n            name=\"oldPassword\"\r\n            label=\"Old Password\"\r\n            fullWidth\r\n            value={inputData.old_password}\r\n            autoComplete=\"shipping country\"\r\n            onChange={ e => setInputData({...inputData, old_password:e.target.value }) }\r\n          />\r\n          {oldPasswordRequired && <span style={{color:'red'}}>This is required</span>}\r\n          {error && <span style={{color:'red'}}>{error.old_password}</span>}\r\n        </Grid>\r\n        <Grid   className={classes.forms} item sm={9} xs={10}>\r\n          <TextField\r\n            required\r\n            id=\"country\"\r\n            name=\"newPassword\"\r\n            label=\"New Password\"\r\n            value={inputData.new_password}\r\n            fullWidth\r\n            autoComplete=\"shipping country\"\r\n            onChange={ e => setInputData({...inputData,new_password:e.target.value }) }\r\n          />\r\n          {newPasswordRequired && <span style={{color:'red'}}>This is required</span>}\r\n          {error && <span style={{color:'red'}}>{error.new_password}</span>}\r\n        </Grid>\r\n\r\n        <Grid className={classes.forms} item sm={9}  xs={12}  style={{marginBottom:40, marginTop:20,}}>\r\n        <Button onClick={HandleChangePassword} style={{backgroundColor:'rgb(66, 129, 245)'}} variant=\"contained\" color=\"primary\">\r\n            Change password\r\n        </Button>\r\n        </Grid>\r\n\r\n        {openSnackber && <SnackBer   open={true} success_info='pass_changed' />}\r\n\r\n    </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\profileSettings\\ChangeProfilePicture.js",["444","445","446","447","448","449","450","451","452"],"import React, {useEffect, useState} from 'react'\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {UserProfile, UserFollow, LoggedUserInfo, EditUserProfile} from '../../store/actions/UserProfile'\r\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\r\nimport SnackBer from '../Home/Feed/Post/sharePost/SnackBer'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n      root:{\r\n        display:'flex',\r\n        flexDirection:'column',\r\n       \r\n        \r\n      },\r\n\r\n      title:{\r\n        \r\n        textAlign:'center',\r\n        \r\n        fontSize:40,\r\n        marginBottom:10,\r\n        paddingBottom:5,\r\n        borderBottom:'2px solid #EBECED'\r\n    },\r\n\r\n      profile:{\r\n        //   backgroundColor:'red',\r\n       \r\n        backgroundColor:'rgb(240, 242, 245)',\r\n        paddingBottom:20,\r\n        marginBottom:20,\r\n      },\r\n\r\n      large: {\r\n        width: theme.spacing(20),\r\n        height: theme.spacing(20),\r\n        // marginLeft:20,\r\n        margin:'auto',\r\n        ['@media (max-width: 600px)']: { // eslint-disable-line no-useless-computed-key\r\n            width: '100px',\r\n            height: '100px',\r\n            \r\n          },\r\n      },\r\n\r\n      profilePicture:{\r\n          width:'100%',\r\n          margin:'auto',\r\n          position:'relative'\r\n      },\r\n\r\n      pTitle:{\r\n        fontSize:30,\r\n        paddingLeft:20,\r\n        color:'rgb(24, 85, 120)',\r\n        ['@media (max-width: 400px)']: {\r\n            marginBottom:20,\r\n        }\r\n      },\r\n\r\n      addIcon:{\r\n        width: theme.spacing(4),\r\n        height: theme.spacing(4),\r\n          width:'92%',\r\n          margin:'auto',\r\n          position:'absolute',\r\n          bottom:-10,\r\n          left:0,\r\n          color:'rgb(17, 82, 147)',\r\n          cursor:'pointer'\r\n      },\r\n\r\n      buttons:{\r\n        marginTop:10,\r\n        display:'flex',\r\n        justifyContent:'center'\r\n      },\r\n\r\n      button:{\r\n        marginLeft:8,\r\n      },\r\n\r\n      coverPicture:{\r\n\r\n          display:'flex',\r\n          flexDirection:'column',\r\n          marginTop:20,\r\n          marginBottom:100,\r\n          paddingTop:20,\r\n          paddingBottom:100,\r\n          backgroundColor:'rgb(240, 242, 245)',\r\n      },\r\n\r\n      coverPictureHeader:{\r\n          display:'flex',\r\n          justifyContent:'space-between',\r\n          marginRight:20,\r\n          ['@media (max-width: 430px)']: { // eslint-disable-line no-useless-computed-key\r\n            flexDirection:'column',\r\n            width:'70%',\r\n            margin:'auto'    \r\n          },\r\n      },\r\n\r\n      coverPictureBoddy:{\r\n          display:'flex',\r\n          marginTop:20,\r\n          margin:'auto'\r\n      },\r\n\r\n      coverPic:{\r\n          maxWidth:'70%',\r\n          maxHeight:400,\r\n          margin:'auto',\r\n          borderRadius:10,\r\n      },\r\n      CButton:{\r\n        display:'flex', marginTop:20, marginBottom:100, justifyContent:'center'\r\n      },\r\n      CUIcon:{\r\n          display:'flex',\r\n        backgroundColor:'rgb(63, 81, 181)',\r\n        cursor:'pointer',\r\n        color:'white',\r\n        padding:5,\r\n        borderRadius:5,\r\n      }\r\n     \r\n    })\r\n)\r\nfunction ChangeProfilePicture({userInfo}) {\r\n\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const [profilePicture, setProfilePicture] = useState(null);\r\n    const [profileImgData, setProfileImgData] = useState(null);\r\n    const [coverPicture, setCoverPicture] = useState(null);\r\n    const [coverImgData, setCoverImgData] = useState(null);\r\n    const ProfileUpdateSuccess = useSelector(state => state.user.userUpdateSuccess)\r\n\r\n    console.log('profile', ProfileUpdateSuccess);\r\n\r\n    const config = { headers: { \r\n        'Content-Type':'application/json',\r\n        'Authorization': \"Bearer \" + localStorage.getItem('access_token')\r\n      }}\r\n\r\n      useEffect(()=>{\r\n        if (ProfileUpdateSuccess === true){\r\n            setCoverImgData(null)\r\n            setCoverPicture(null)\r\n            setProfilePicture(null)\r\n            setProfileImgData(null)\r\n        } \r\n      },[ProfileUpdateSuccess])\r\n\r\n\r\n    const onChangeProfilePicture = e => {\r\n       \r\n        if (e.target.files[0]) {\r\n            setProfilePicture(e.target.files[0]);\r\n          const reader = new FileReader();\r\n          reader.addEventListener(\"load\", () => {\r\n            setProfileImgData(reader.result);\r\n          });\r\n          reader.readAsDataURL(e.target.files[0]);\r\n        }\r\n      };\r\n\r\n      const ChangeCoverPicture = e => {\r\n        console.log('hello');\r\n        if (e.target.files[0]) {\r\n            setCoverPicture(e.target.files[0]);\r\n          const reader = new FileReader();\r\n          reader.addEventListener(\"load\", () => {\r\n            setCoverImgData(reader.result);\r\n          });\r\n          reader.readAsDataURL(e.target.files[0]);\r\n        }\r\n      };\r\n\r\n      const CancleProfilePicUpdate = () =>{\r\n        setProfileImgData(null)\r\n      }\r\n    \r\n    const CancleCoverPicUpdate = () =>{\r\n        setCoverImgData(null)\r\n      }\r\n\r\n\r\n      const HandleProfilePictureChange = () =>{\r\n        let formData = new FormData()\r\n        {profilePicture!==null && formData.append('image', profilePicture )}\r\n        dispatch(EditUserProfile(userInfo.profile.id, userInfo.username, formData, config))\r\n      }\r\n\r\n      const HandleCoverPictureChange = () =>{\r\n        let formData = new FormData()\r\n        {coverPicture!==null && formData.append('cover_picture', coverPicture )}\r\n        dispatch(EditUserProfile(userInfo.profile.id, userInfo.username, formData, config))\r\n      }\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n           <div className={classes.title}>\r\n                    Profile And Cover Picture \r\n            </div> \r\n\r\n            <div className={classes.profile}>\r\n               \r\n                <div className={classes.profilePicture}>\r\n                    <span className={classes.pTitle}>Profile Picture</span>\r\n                   {profileImgData===null ? <Avatar src={userInfo && userInfo.profile.image}  className={classes.large}/> :  <Avatar src={profileImgData}  className={classes.large}/>} \r\n                    \r\n                      <input type=\"file\" id=\"upload\" hidden onChange={onChangeProfilePicture}/>\r\n                      {profileImgData ===null &&<label  for=\"upload\" ><AddAPhotoIcon  className={classes.addIcon}/>\r\n                    </label>}\r\n\r\n                    {profileImgData!==null && <div className={classes.buttons}>\r\n                      <Button className={classes.button} \r\n                            style={{backgroundColor:'rgb(171, 46, 38)'}} variant=\"contained\" color=\"secondary\"\r\n                            onClick={CancleProfilePicUpdate}\r\n                            >\r\n                                Cancle\r\n                        </Button>\r\n                        <Button className={classes.button} \r\n                            style={{backgroundColor:'rgb(66, 129, 245)'}} variant=\"contained\" color=\"primary\"\r\n                            onClick={HandleProfilePictureChange}\r\n                            >\r\n                                Upload\r\n                        </Button> \r\n                    </div>}\r\n                </div>\r\n\r\n               \r\n                \r\n            </div>\r\n\r\n            <div className={classes.coverPicture}>\r\n\r\n                <div className={classes.coverPictureHeader}>\r\n                    <span className={classes.pTitle}>Cover Picture</span>\r\n\r\n                    <div className={classes.CUIcon}>\r\n                        <input type=\"file\" id=\"upload\"  style={{width:180}}  onChange={ChangeCoverPicture} />\r\n                        <label style={{cursor:'pointer'}}  for=\"upload\" > <AddAPhotoIcon />\r\n                        </label>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className={classes.coverPictureBoddy}>\r\n\r\n                {coverImgData === null ? <img src={userInfo && userInfo.profile.cover_picture} className={classes.coverPic} /> : <img src={coverImgData} className={classes.coverPic} />}\r\n\r\n                    \r\n\r\n                </div>\r\n               {coverImgData !==null &&  <div className={classes.CButton}>\r\n\r\n                    <Button className={classes.button}  style={{backgroundColor:'rgb(171, 46, 38)'}} variant=\"contained\" color=\"secondary\" onClick={CancleCoverPicUpdate}>\r\n                        Cancle\r\n                    </Button>\r\n\r\n                    <Button className={classes.button} style={{backgroundColor:'rgb(66, 129, 245)'}} variant=\"contained\" color=\"primary\"\r\n                     onClick={HandleCoverPictureChange}\r\n                    >\r\n                    Upload\r\n                    </Button>\r\n                    </div> }\r\n            </div>\r\n            {ProfileUpdateSuccess===true && <SnackBer open={true} success_info=\"profile_updated\"/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChangeProfilePicture\r\n","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\Home\\Feed\\Post\\singlePost\\SinglePost.js",["453","454"],"import React,{useEffect} from 'react'\r\nimport {GetSinglePost} from '../../../../../store/actions/PostCrud'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';   \r\nimport {useHistory, useParams} from 'react-router-dom'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport Media from '../LoadPost'\r\nimport Post from '../Post'\r\nimport Nav from '../../../../../component/Nav'\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n\r\n  createStyles({\r\n    root: {\r\n      width:'100%',\r\n    \r\n    },\r\n    post:{\r\n        display:'flex',\r\n        justifyContent:'center',\r\n        marginTop:40,\r\n        marginBottom:100,\r\n    }\r\n  })\r\n  )\r\n    \r\n\r\nfunction SinglePost() {\r\n\r\n    const classes = useStyles()\r\n    const {postId} =useParams()\r\n    const dispatch = useDispatch()\r\n    const singlePost = useSelector(state => state.post.singlePost)\r\n    const config = { headers: { \r\n        'Content-Type':'application/json',\r\n        'Authorization': \"Bearer \" + localStorage.getItem('access_token')\r\n      }}\r\n    useEffect(()=>{\r\n        dispatch(GetSinglePost(postId, config))\r\n    },[])\r\n\r\n    const userposts =singlePost!==null?\r\n        <Post \r\n          key={singlePost.id}\r\n          id={singlePost.id}\r\n          parent={singlePost.parent}\r\n          user={singlePost.user} \r\n          content ={singlePost.content}\r\n          image={singlePost.image}\r\n          privacy={singlePost.privacy}\r\n          is_retweet={singlePost.is_retweet}\r\n          is_saved={singlePost.is_saved}\r\n          likes={singlePost.likes}\r\n          postComment = {singlePost.postComment}\r\n          timestamp = {singlePost.timestamp}\r\n          is_liked = {singlePost.is_liked}\r\n          shared_user = {singlePost.shared_user}\r\n          />\r\n\r\n      :<Media />\r\n\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Nav />\r\n\r\n          \r\n            <div className={classes.post}>\r\n                {userposts}\r\n            </div>\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SinglePost\r\n","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\component\\notification\\NotificationForMobile.js",["455"],"import React, {useEffect} from 'react'\r\nimport {makeStyles, Theme, createStyles,} from \"@material-ui/core/styles\";\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {NotificationList} from '../../store/actions/Utils'\r\nimport Notification from './NotificationList'\r\nimport Nav from '../Nav'\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    small: {\r\n      marginTop: \"4px\",\r\n      width: theme.spacing(5),\r\n      height: theme.spacing(5),\r\n    },\r\n    notification:{\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        justifyContent:'center',\r\n        margin:'auto',\r\n        ['@media (min-width: 700px)']: { // eslint-disable-line no-useless-computed-key\r\n            maxWidth:'50%'\r\n            \r\n          },\r\n        ['@media (max-width: 990px)']: { // eslint-disable-line no-useless-computed-key\r\n            maxWidth:'80%'\r\n            \r\n          },\r\n\r\n          ['@media (max-width: 600px)']: { // eslint-disable-line no-useless-computed-key\r\n            Width:'95%'\r\n            \r\n          },\r\n    },\r\n   \r\n    navli:{\r\n      display:'flex',\r\n      width:'98%',\r\n      height:50,\r\n      '&:hover':{\r\n        backgroundColor:'rgb(214, 210, 210)'\r\n      }\r\n    },\r\n    noNotify:{\r\n        textAlign:'center',\r\n        marginTop:'50px',\r\n      color:'rgb(214, 210, 210)',\r\n      fontSize:'250%',\r\n    }\r\n\r\n\r\n\r\n    })\r\n)\r\n\r\n\r\nfunction NotificationForMobile() {\r\n\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const notifications = useSelector(state => state.user.notifications)\r\n\r\n    const config = { headers: { \r\n        'Content-Type':'application/json',\r\n        'Authorization': \"Bearer \" + localStorage.getItem('access_token')\r\n      }}\r\n\r\n    useEffect(() => {\r\n        dispatch(NotificationList(config))\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Nav />\r\n            <div className={classes.notification}>\r\n            \r\n             {notifications.length!==0 ? (notifications.map(notify=>(\r\n                   <li className={classes.navli}> <Notification notify={notify} key={notify.id}/> </li>))) : <span className={classes.noNotify}>no Notification yeat </span> }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotificationForMobile\r\n","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\component\\AutoCompletesearch.js",["456","457"],"\r\n\r\nimport React,{useState} from 'react'\r\nimport {SearchUser} from '../store/actions/Utils'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {history, useHistory} from 'react-router-dom'\r\n\r\n\r\nimport { ReactSearchAutocomplete } from 'react-search-autocomplete'\r\n\r\nfunction Playground() {\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const searchUser = useSelector(state => state.user.searchUserList)\r\n    const config = { headers: { \r\n        'Content-Type':'application/json',\r\n        'Authorization': \"Bearer \" + localStorage.getItem('access_token')\r\n      }}\r\n\r\n\r\n  const handleOnSearch = (string, results) => {\r\n    dispatch(SearchUser(string, config))\r\n  }\r\n\r\n  const handleOnSelect = (item) => {\r\n    // the item selected\r\n    history.push(`/profile/${item.username}`)\r\n  }\r\n\r\n  const handleOnFocus = () => {\r\n    console.log('Focused')\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <div style={{ width: 400 }}>\r\n          <ReactSearchAutocomplete\r\n            items={searchUser}\r\n            onSearch={handleOnSearch}\r\n            onSelect={handleOnSelect}\r\n            onFocus={handleOnFocus}\r\n            autoFocus\r\n          />\r\n        </div>\r\n      </header>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Playground","F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\component\\NotFound.js",[],"F:\\django-projects\\U-Profile--complete-social-site-with-django-react-and-redux\\frontend\\src\\containers\\forgetPassword\\ResetPassword.js",["458","459","460","461","462","463"],"import React, {useState, useEffect} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {Link} from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport './forgetPasswor.css'\r\nimport {PasswordResetConfirm} from '../../store/actions/Auth'\r\nimport {useHistory, useParams } from 'react-router-dom';\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport SnackBer from '../Home/Feed/Post/sharePost/SnackBer'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function ResetUserPassword() {\r\n\r\n\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const {token} = useParams()\r\n  const resetPasswordSuccess = useSelector(state => state.auth.resetPasswordSuccess)\r\n  const resetPasswordFailed = useSelector(state => state.auth.resetPasswordFailed)\r\n  const [tokenNull, setTokenNull] = useState(false)\r\n  const [newPasswordNull, setNewPasswordNull] = useState(false)\r\n  const [resetPasswordInfo, setResetPasswordInfo] = useState({\r\n      newPassword:''\r\n  })\r\n\r\n  const config = { headers: { \r\n    'Content-Type':'application/json',\r\n  }}\r\n\r\n\r\n  const HandleSendEmail = (e) =>{\r\n    e.preventDefault()\r\n    let formData = new FormData()\r\n    if( resetPasswordInfo.newPasswordNull===''){\r\n\r\n        {resetPasswordInfo.newPasswordNull===null && setNewPasswordNull(true)}\r\n\r\n    }else{\r\n\r\n        formData.append('token', token.trim())\r\n        formData.append('password', resetPasswordInfo.newPassword.trim())\r\n        dispatch(PasswordResetConfirm(formData, config))\r\n\r\n    }\r\n\r\n}\r\n\r\nuseEffect(() => {\r\n    {resetPasswordSuccess !==null && setResetPasswordInfo({token:'', newPassword:''})}\r\n}, [resetPasswordSuccess])\r\n\r\n  console.log(resetPasswordInfo);\r\n    return (\r\n    <div className=\"login\">\r\n    <div className=\"tag\">\r\n        <h2>U-Profile.com</h2>\r\n      </div>\r\n      <div>\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Get the token value from you'r email address\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          {/* <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"Token\"\r\n            label=\"Token from email\"\r\n            name=\"token\"\r\n            autoComplete=\"Token\"\r\n            autoFocus\r\n            value={resetPasswordInfo.token}\r\n            onChange={e => setResetPasswordInfo({...resetPasswordInfo, [e.target.name]:e.target.value.trim()})}\r\n          /> */}\r\n          <span style={{color:'red'}} >{resetPasswordFailed && resetPasswordFailed.status && 'Token is no longer avaiable, Try to send email again.'}</span>\r\n          \r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"Passowrd\"\r\n            label=\"New Password\"\r\n            name=\"newPassword\"\r\n            autoComplete=\"newPassword\"\r\n            value={resetPasswordInfo.newPassword}\r\n            autoFocus\r\n            onChange={e => setResetPasswordInfo({...resetPasswordInfo,[e.target.name]:e.target.value.trim()})}\r\n          />\r\n          <span style={{color:'red'}} >{resetPasswordFailed && resetPasswordFailed.password && resetPasswordFailed.password}</span>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={ e => HandleSendEmail(e)}\r\n          >\r\n            Reset Password\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link to=\"/login\" variant=\"body2\">\r\n                Go back to Login.\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n      </Box>\r\n    </Container>\r\n    {resetPasswordSuccess==='OK' && <SnackBer open={true} success_info={resetPasswordSuccess} />}\r\n    </div>\r\n    </div>\r\n  );\r\n}",{"ruleId":"464","replacedBy":"465"},{"ruleId":"466","replacedBy":"467"},{"ruleId":"468","severity":1,"message":"469","line":3,"column":49,"nodeType":"470","messageId":"471","endLine":3,"endColumn":53},{"ruleId":"468","severity":1,"message":"472","line":9,"column":8,"nodeType":"470","messageId":"471","endLine":9,"endColumn":11},{"ruleId":"468","severity":1,"message":"473","line":10,"column":8,"nodeType":"470","messageId":"471","endLine":10,"endColumn":11},{"ruleId":"468","severity":1,"message":"474","line":11,"column":8,"nodeType":"470","messageId":"471","endLine":11,"endColumn":11},{"ruleId":"468","severity":1,"message":"475","line":21,"column":9,"nodeType":"470","messageId":"471","endLine":21,"endColumn":26},{"ruleId":"468","severity":1,"message":"476","line":27,"column":9,"nodeType":"470","messageId":"471","endLine":27,"endColumn":20},{"ruleId":"468","severity":1,"message":"477","line":29,"column":9,"nodeType":"470","messageId":"471","endLine":29,"endColumn":16},{"ruleId":"478","severity":1,"message":"479","line":39,"column":5,"nodeType":"480","endLine":39,"endColumn":7,"suggestions":"481"},{"ruleId":"468","severity":1,"message":"482","line":1,"column":8,"nodeType":"470","messageId":"471","endLine":1,"endColumn":13},{"ruleId":"468","severity":1,"message":"483","line":4,"column":10,"nodeType":"470","messageId":"471","endLine":4,"endColumn":19},{"ruleId":"468","severity":1,"message":"484","line":4,"column":21,"nodeType":"470","messageId":"471","endLine":4,"endColumn":31},{"ruleId":"468","severity":1,"message":"485","line":5,"column":10,"nodeType":"470","messageId":"471","endLine":5,"endColumn":26},{"ruleId":"468","severity":1,"message":"482","line":1,"column":8,"nodeType":"470","messageId":"471","endLine":1,"endColumn":13},{"ruleId":"468","severity":1,"message":"486","line":3,"column":35,"nodeType":"470","messageId":"471","endLine":3,"endColumn":46},{"ruleId":"468","severity":1,"message":"487","line":3,"column":108,"nodeType":"470","messageId":"471","endLine":3,"endColumn":123},{"ruleId":"468","severity":1,"message":"488","line":3,"column":125,"nodeType":"470","messageId":"471","endLine":3,"endColumn":139},{"ruleId":"468","severity":1,"message":"489","line":3,"column":395,"nodeType":"470","messageId":"471","endLine":3,"endColumn":426},{"ruleId":"468","severity":1,"message":"483","line":5,"column":10,"nodeType":"470","messageId":"471","endLine":5,"endColumn":19},{"ruleId":"468","severity":1,"message":"484","line":5,"column":21,"nodeType":"470","messageId":"471","endLine":5,"endColumn":31},{"ruleId":"468","severity":1,"message":"490","line":38,"column":7,"nodeType":"470","messageId":"471","endLine":38,"endColumn":17},{"ruleId":"491","severity":1,"message":"492","line":55,"column":30,"nodeType":"493","messageId":"494","endLine":55,"endColumn":31},{"ruleId":"491","severity":1,"message":"492","line":77,"column":24,"nodeType":"493","messageId":"494","endLine":77,"endColumn":25},{"ruleId":"491","severity":1,"message":"492","line":86,"column":24,"nodeType":"493","messageId":"494","endLine":86,"endColumn":25},{"ruleId":"468","severity":1,"message":"482","line":1,"column":8,"nodeType":"470","messageId":"471","endLine":1,"endColumn":13},{"ruleId":"468","severity":1,"message":"483","line":4,"column":10,"nodeType":"470","messageId":"471","endLine":4,"endColumn":19},{"ruleId":"468","severity":1,"message":"484","line":4,"column":21,"nodeType":"470","messageId":"471","endLine":4,"endColumn":31},{"ruleId":"491","severity":1,"message":"492","line":30,"column":48,"nodeType":"493","messageId":"494","endLine":30,"endColumn":49},{"ruleId":"491","severity":1,"message":"492","line":76,"column":37,"nodeType":"493","messageId":"494","endLine":76,"endColumn":38},{"ruleId":"468","severity":1,"message":"495","line":8,"column":8,"nodeType":"470","messageId":"471","endLine":8,"endColumn":17},{"ruleId":"468","severity":1,"message":"496","line":14,"column":8,"nodeType":"470","messageId":"471","endLine":14,"endColumn":16},{"ruleId":"468","severity":1,"message":"497","line":24,"column":9,"nodeType":"470","messageId":"471","endLine":24,"endColumn":29},{"ruleId":"468","severity":1,"message":"498","line":24,"column":31,"nodeType":"470","messageId":"471","endLine":24,"endColumn":55},{"ruleId":"468","severity":1,"message":"499","line":26,"column":8,"nodeType":"470","messageId":"471","endLine":26,"endColumn":14},{"ruleId":"468","severity":1,"message":"476","line":168,"column":9,"nodeType":"470","messageId":"471","endLine":168,"endColumn":20},{"ruleId":"478","severity":1,"message":"479","line":188,"column":5,"nodeType":"480","endLine":188,"endColumn":7,"suggestions":"500"},{"ruleId":"468","severity":1,"message":"482","line":1,"column":8,"nodeType":"470","messageId":"471","endLine":1,"endColumn":13},{"ruleId":"468","severity":1,"message":"487","line":3,"column":108,"nodeType":"470","messageId":"471","endLine":3,"endColumn":123},{"ruleId":"468","severity":1,"message":"488","line":3,"column":125,"nodeType":"470","messageId":"471","endLine":3,"endColumn":139},{"ruleId":"468","severity":1,"message":"501","line":3,"column":141,"nodeType":"470","messageId":"471","endLine":3,"endColumn":157},{"ruleId":"491","severity":1,"message":"492","line":23,"column":42,"nodeType":"493","messageId":"494","endLine":23,"endColumn":43},{"ruleId":"491","severity":1,"message":"492","line":30,"column":28,"nodeType":"493","messageId":"494","endLine":30,"endColumn":29},{"ruleId":"491","severity":1,"message":"492","line":53,"column":38,"nodeType":"493","messageId":"494","endLine":53,"endColumn":39},{"ruleId":"468","severity":1,"message":"482","line":1,"column":8,"nodeType":"470","messageId":"471","endLine":1,"endColumn":13},{"ruleId":"468","severity":1,"message":"502","line":4,"column":10,"nodeType":"470","messageId":"471","endLine":4,"endColumn":24},{"ruleId":"468","severity":1,"message":"503","line":1,"column":16,"nodeType":"470","messageId":"471","endLine":1,"endColumn":24},{"ruleId":"468","severity":1,"message":"504","line":2,"column":9,"nodeType":"470","messageId":"471","endLine":2,"endColumn":20},{"ruleId":"468","severity":1,"message":"474","line":4,"column":8,"nodeType":"470","messageId":"471","endLine":4,"endColumn":11},{"ruleId":"468","severity":1,"message":"482","line":1,"column":12,"nodeType":"470","messageId":"471","endLine":1,"endColumn":17},{"ruleId":"491","severity":1,"message":"492","line":24,"column":34,"nodeType":"493","messageId":"494","endLine":24,"endColumn":35},{"ruleId":"505","severity":1,"message":"506","line":134,"column":12,"nodeType":"507","messageId":"508","endLine":134,"endColumn":64},{"ruleId":"468","severity":1,"message":"509","line":15,"column":21,"nodeType":"470","messageId":"471","endLine":15,"endColumn":30},{"ruleId":"468","severity":1,"message":"477","line":49,"column":9,"nodeType":"470","messageId":"471","endLine":49,"endColumn":16},{"ruleId":"505","severity":1,"message":"506","line":69,"column":3,"nodeType":"507","messageId":"508","endLine":69,"endColumn":46},{"ruleId":"505","severity":1,"message":"506","line":70,"column":3,"nodeType":"507","messageId":"508","endLine":70,"endColumn":59},{"ruleId":"468","severity":1,"message":"503","line":1,"column":17,"nodeType":"470","messageId":"471","endLine":1,"endColumn":25},{"ruleId":"468","severity":1,"message":"510","line":9,"column":9,"nodeType":"470","messageId":"471","endLine":9,"endColumn":20},{"ruleId":"468","severity":1,"message":"498","line":11,"column":9,"nodeType":"470","messageId":"471","endLine":11,"endColumn":33},{"ruleId":"505","severity":1,"message":"506","line":35,"column":9,"nodeType":"507","messageId":"508","endLine":35,"endColumn":53},{"ruleId":"478","severity":1,"message":"511","line":37,"column":9,"nodeType":"480","endLine":37,"endColumn":11,"suggestions":"512"},{"ruleId":"478","severity":1,"message":"513","line":43,"column":9,"nodeType":"480","endLine":43,"endColumn":11,"suggestions":"514"},{"ruleId":"468","severity":1,"message":"515","line":56,"column":11,"nodeType":"470","messageId":"471","endLine":56,"endColumn":23},{"ruleId":"468","severity":1,"message":"472","line":11,"column":8,"nodeType":"470","messageId":"471","endLine":11,"endColumn":11},{"ruleId":"468","severity":1,"message":"509","line":26,"column":21,"nodeType":"470","messageId":"471","endLine":26,"endColumn":30},{"ruleId":"468","severity":1,"message":"476","line":59,"column":9,"nodeType":"470","messageId":"471","endLine":59,"endColumn":20},{"ruleId":"478","severity":1,"message":"516","line":98,"column":3,"nodeType":"480","endLine":98,"endColumn":14,"suggestions":"517"},{"ruleId":"478","severity":1,"message":"518","line":67,"column":7,"nodeType":"480","endLine":67,"endColumn":9,"suggestions":"519"},{"ruleId":"478","severity":1,"message":"513","line":71,"column":7,"nodeType":"480","endLine":71,"endColumn":9,"suggestions":"520"},{"ruleId":"468","severity":1,"message":"521","line":18,"column":10,"nodeType":"470","messageId":"471","endLine":18,"endColumn":19},{"ruleId":"478","severity":1,"message":"522","line":82,"column":5,"nodeType":"480","endLine":82,"endColumn":22,"suggestions":"523"},{"ruleId":"468","severity":1,"message":"524","line":3,"column":3,"nodeType":"470","messageId":"471","endLine":3,"endColumn":7},{"ruleId":"525","severity":1,"message":"526","line":117,"column":33,"nodeType":"527","endLine":117,"endColumn":90},{"ruleId":"525","severity":1,"message":"526","line":145,"column":33,"nodeType":"527","endLine":145,"endColumn":90},{"ruleId":"468","severity":1,"message":"528","line":1,"column":43,"nodeType":"470","messageId":"471","endLine":1,"endColumn":61},{"ruleId":"491","severity":1,"message":"492","line":13,"column":38,"nodeType":"493","messageId":"494","endLine":13,"endColumn":39},{"ruleId":"505","severity":1,"message":"506","line":203,"column":12,"nodeType":"507","messageId":"508","endLine":203,"endColumn":72},{"ruleId":"525","severity":1,"message":"526","line":46,"column":80,"nodeType":"527","endLine":46,"endColumn":152},{"ruleId":"525","severity":1,"message":"526","line":61,"column":62,"nodeType":"527","endLine":61,"endColumn":119},{"ruleId":"468","severity":1,"message":"529","line":15,"column":10,"nodeType":"470","messageId":"471","endLine":15,"endColumn":15},{"ruleId":"468","severity":1,"message":"530","line":15,"column":17,"nodeType":"470","messageId":"471","endLine":15,"endColumn":25},{"ruleId":"478","severity":1,"message":"479","line":28,"column":3,"nodeType":"480","endLine":28,"endColumn":5,"suggestions":"531"},{"ruleId":"468","severity":1,"message":"532","line":3,"column":22,"nodeType":"470","messageId":"471","endLine":3,"endColumn":33},{"ruleId":"468","severity":1,"message":"509","line":4,"column":9,"nodeType":"470","messageId":"471","endLine":4,"endColumn":18},{"ruleId":"468","severity":1,"message":"532","line":3,"column":22,"nodeType":"470","messageId":"471","endLine":3,"endColumn":33},{"ruleId":"468","severity":1,"message":"509","line":4,"column":9,"nodeType":"470","messageId":"471","endLine":4,"endColumn":18},{"ruleId":"533","severity":1,"message":"534","line":82,"column":34,"nodeType":"535","messageId":"536","endLine":82,"endColumn":36},{"ruleId":"468","severity":1,"message":"503","line":1,"column":26,"nodeType":"470","messageId":"471","endLine":1,"endColumn":34},{"ruleId":"468","severity":1,"message":"509","line":16,"column":9,"nodeType":"470","messageId":"471","endLine":16,"endColumn":18},{"ruleId":"478","severity":1,"message":"479","line":79,"column":5,"nodeType":"480","endLine":79,"endColumn":7,"suggestions":"537"},{"ruleId":"468","severity":1,"message":"538","line":3,"column":8,"nodeType":"470","messageId":"471","endLine":3,"endColumn":19},{"ruleId":"468","severity":1,"message":"539","line":12,"column":10,"nodeType":"470","messageId":"471","endLine":12,"endColumn":16},{"ruleId":"468","severity":1,"message":"510","line":8,"column":9,"nodeType":"470","messageId":"471","endLine":8,"endColumn":20},{"ruleId":"478","severity":1,"message":"518","line":65,"column":5,"nodeType":"480","endLine":65,"endColumn":7,"suggestions":"540"},{"ruleId":"478","severity":1,"message":"518","line":151,"column":7,"nodeType":"480","endLine":151,"endColumn":9,"suggestions":"541"},{"ruleId":"525","severity":1,"message":"526","line":162,"column":17,"nodeType":"527","endLine":163,"endColumn":78},{"ruleId":"468","severity":1,"message":"542","line":4,"column":9,"nodeType":"470","messageId":"471","endLine":4,"endColumn":25},{"ruleId":"468","severity":1,"message":"539","line":7,"column":8,"nodeType":"470","messageId":"471","endLine":7,"endColumn":14},{"ruleId":"468","severity":1,"message":"543","line":9,"column":8,"nodeType":"470","messageId":"471","endLine":9,"endColumn":18},{"ruleId":"468","severity":1,"message":"544","line":11,"column":8,"nodeType":"470","messageId":"471","endLine":11,"endColumn":29},{"ruleId":"468","severity":1,"message":"545","line":12,"column":8,"nodeType":"470","messageId":"471","endLine":12,"endColumn":25},{"ruleId":"468","severity":1,"message":"510","line":20,"column":9,"nodeType":"470","messageId":"471","endLine":20,"endColumn":20},{"ruleId":"468","severity":1,"message":"546","line":25,"column":10,"nodeType":"470","messageId":"471","endLine":25,"endColumn":24},{"ruleId":"478","severity":1,"message":"479","line":131,"column":6,"nodeType":"480","endLine":131,"endColumn":8,"suggestions":"547"},{"ruleId":"525","severity":1,"message":"526","line":305,"column":38,"nodeType":"527","endLine":305,"endColumn":85},{"ruleId":"525","severity":1,"message":"526","line":468,"column":52,"nodeType":"527","endLine":468,"endColumn":111},{"ruleId":"468","severity":1,"message":"548","line":1,"column":10,"nodeType":"470","messageId":"471","endLine":1,"endColumn":16},{"ruleId":"468","severity":1,"message":"532","line":7,"column":22,"nodeType":"470","messageId":"471","endLine":7,"endColumn":33},{"ruleId":"468","severity":1,"message":"549","line":8,"column":9,"nodeType":"470","messageId":"471","endLine":8,"endColumn":28},{"ruleId":"468","severity":1,"message":"550","line":33,"column":10,"nodeType":"470","messageId":"471","endLine":33,"endColumn":20},{"ruleId":"468","severity":1,"message":"551","line":33,"column":22,"nodeType":"470","messageId":"471","endLine":33,"endColumn":35},{"ruleId":"478","severity":1,"message":"479","line":44,"column":6,"nodeType":"480","endLine":44,"endColumn":8,"suggestions":"552"},{"ruleId":"468","severity":1,"message":"553","line":58,"column":12,"nodeType":"470","messageId":"471","endLine":58,"endColumn":21},{"ruleId":"525","severity":1,"message":"526","line":119,"column":21,"nodeType":"527","endLine":119,"endColumn":136},{"ruleId":"468","severity":1,"message":"554","line":7,"column":8,"nodeType":"470","messageId":"471","endLine":7,"endColumn":17},{"ruleId":"468","severity":1,"message":"548","line":8,"column":8,"nodeType":"470","messageId":"471","endLine":8,"endColumn":14},{"ruleId":"468","severity":1,"message":"555","line":9,"column":8,"nodeType":"470","messageId":"471","endLine":9,"endColumn":18},{"ruleId":"468","severity":1,"message":"556","line":10,"column":8,"nodeType":"470","messageId":"471","endLine":10,"endColumn":18},{"ruleId":"468","severity":1,"message":"557","line":11,"column":8,"nodeType":"470","messageId":"471","endLine":11,"endColumn":20},{"ruleId":"468","severity":1,"message":"558","line":32,"column":11,"nodeType":"470","messageId":"471","endLine":32,"endColumn":18},{"ruleId":"478","severity":1,"message":"559","line":37,"column":6,"nodeType":"480","endLine":37,"endColumn":8,"suggestions":"560"},{"ruleId":"468","severity":1,"message":"561","line":5,"column":10,"nodeType":"470","messageId":"471","endLine":5,"endColumn":22},{"ruleId":"468","severity":1,"message":"509","line":8,"column":9,"nodeType":"470","messageId":"471","endLine":8,"endColumn":18},{"ruleId":"562","severity":1,"message":"563","line":21,"column":9,"nodeType":"564","messageId":"536","endLine":21,"endColumn":15},{"ruleId":"562","severity":1,"message":"563","line":33,"column":9,"nodeType":"564","messageId":"536","endLine":33,"endColumn":15},{"ruleId":"505","severity":1,"message":"506","line":89,"column":8,"nodeType":"507","messageId":"508","endLine":89,"endColumn":74},{"ruleId":"478","severity":1,"message":"479","line":90,"column":7,"nodeType":"480","endLine":90,"endColumn":17,"suggestions":"565"},{"ruleId":"525","severity":1,"message":"526","line":102,"column":69,"nodeType":"527","endLine":102,"endColumn":119},{"ruleId":"468","severity":1,"message":"561","line":13,"column":10,"nodeType":"470","messageId":"471","endLine":13,"endColumn":22},{"ruleId":"562","severity":1,"message":"563","line":25,"column":9,"nodeType":"564","messageId":"536","endLine":25,"endColumn":15},{"ruleId":"562","severity":1,"message":"563","line":37,"column":9,"nodeType":"564","messageId":"536","endLine":37,"endColumn":15},{"ruleId":"566","severity":1,"message":"567","line":136,"column":33,"nodeType":"527","endLine":136,"endColumn":121},{"ruleId":"566","severity":1,"message":"567","line":140,"column":32,"nodeType":"527","endLine":140,"endColumn":118},{"ruleId":"566","severity":1,"message":"567","line":144,"column":33,"nodeType":"527","endLine":144,"endColumn":120},{"ruleId":"566","severity":1,"message":"567","line":148,"column":34,"nodeType":"527","endLine":148,"endColumn":121},{"ruleId":"468","severity":1,"message":"503","line":1,"column":26,"nodeType":"470","messageId":"471","endLine":1,"endColumn":34},{"ruleId":"478","severity":1,"message":"479","line":78,"column":5,"nodeType":"480","endLine":78,"endColumn":7,"suggestions":"568"},{"ruleId":"468","severity":1,"message":"532","line":9,"column":23,"nodeType":"470","messageId":"471","endLine":9,"endColumn":34},{"ruleId":"468","severity":1,"message":"497","line":10,"column":9,"nodeType":"470","messageId":"471","endLine":10,"endColumn":29},{"ruleId":"478","severity":1,"message":"479","line":62,"column":5,"nodeType":"480","endLine":62,"endColumn":7,"suggestions":"569"},{"ruleId":"468","severity":1,"message":"532","line":8,"column":22,"nodeType":"470","messageId":"471","endLine":8,"endColumn":33},{"ruleId":"468","severity":1,"message":"570","line":41,"column":12,"nodeType":"470","messageId":"471","endLine":41,"endColumn":20},{"ruleId":"468","severity":1,"message":"571","line":41,"column":22,"nodeType":"470","messageId":"471","endLine":41,"endColumn":32},{"ruleId":"468","severity":1,"message":"572","line":42,"column":12,"nodeType":"470","messageId":"471","endLine":42,"endColumn":19},{"ruleId":"468","severity":1,"message":"573","line":42,"column":21,"nodeType":"470","messageId":"471","endLine":42,"endColumn":31},{"ruleId":"478","severity":1,"message":"479","line":51,"column":7,"nodeType":"480","endLine":51,"endColumn":9,"suggestions":"574"},{"ruleId":"468","severity":1,"message":"575","line":3,"column":8,"nodeType":"470","messageId":"471","endLine":3,"endColumn":16},{"ruleId":"468","severity":1,"message":"532","line":9,"column":22,"nodeType":"470","messageId":"471","endLine":9,"endColumn":33},{"ruleId":"478","severity":1,"message":"479","line":33,"column":7,"nodeType":"480","endLine":33,"endColumn":9,"suggestions":"576"},{"ruleId":"525","severity":1,"message":"526","line":136,"column":28,"nodeType":"527","endLine":136,"endColumn":111},{"ruleId":"468","severity":1,"message":"575","line":4,"column":8,"nodeType":"470","messageId":"471","endLine":4,"endColumn":16},{"ruleId":"468","severity":1,"message":"577","line":8,"column":8,"nodeType":"470","messageId":"471","endLine":8,"endColumn":18},{"ruleId":"468","severity":1,"message":"532","line":11,"column":22,"nodeType":"470","messageId":"471","endLine":11,"endColumn":33},{"ruleId":"468","severity":1,"message":"578","line":59,"column":23,"nodeType":"470","messageId":"471","endLine":59,"endColumn":35},{"ruleId":"478","severity":1,"message":"479","line":72,"column":5,"nodeType":"480","endLine":72,"endColumn":7,"suggestions":"579"},{"ruleId":"525","severity":1,"message":"526","line":190,"column":26,"nodeType":"527","endLine":190,"endColumn":93},{"ruleId":"525","severity":1,"message":"526","line":247,"column":11,"nodeType":"527","endLine":247,"endColumn":88},{"ruleId":"562","severity":1,"message":"580","line":32,"column":9,"nodeType":"564","messageId":"536","endLine":32,"endColumn":18},{"ruleId":"562","severity":1,"message":"580","line":43,"column":9,"nodeType":"564","messageId":"536","endLine":43,"endColumn":18},{"ruleId":"478","severity":1,"message":"479","line":85,"column":8,"nodeType":"480","endLine":85,"endColumn":10,"suggestions":"581"},{"ruleId":"468","severity":1,"message":"503","line":1,"column":15,"nodeType":"470","messageId":"471","endLine":1,"endColumn":23},{"ruleId":"468","severity":1,"message":"539","line":2,"column":8,"nodeType":"470","messageId":"471","endLine":2,"endColumn":14},{"ruleId":"468","severity":1,"message":"532","line":3,"column":23,"nodeType":"470","messageId":"471","endLine":3,"endColumn":34},{"ruleId":"468","severity":1,"message":"582","line":18,"column":13,"nodeType":"470","messageId":"471","endLine":18,"endColumn":17},{"ruleId":"478","severity":1,"message":"583","line":23,"column":9,"nodeType":"480","endLine":23,"endColumn":11,"suggestions":"584"},{"ruleId":"468","severity":1,"message":"585","line":53,"column":13,"nodeType":"470","messageId":"471","endLine":53,"endColumn":23},{"ruleId":"468","severity":1,"message":"586","line":9,"column":22,"nodeType":"470","messageId":"471","endLine":9,"endColumn":32},{"ruleId":"478","severity":1,"message":"479","line":81,"column":7,"nodeType":"480","endLine":81,"endColumn":9,"suggestions":"587"},{"ruleId":"505","severity":1,"message":"506","line":84,"column":8,"nodeType":"507","messageId":"508","endLine":84,"endColumn":80},{"ruleId":"478","severity":1,"message":"479","line":85,"column":7,"nodeType":"480","endLine":85,"endColumn":21,"suggestions":"588"},{"ruleId":"468","severity":1,"message":"555","line":3,"column":8,"nodeType":"470","messageId":"471","endLine":3,"endColumn":18},{"ruleId":"468","severity":1,"message":"589","line":5,"column":8,"nodeType":"470","messageId":"471","endLine":5,"endColumn":24},{"ruleId":"468","severity":1,"message":"590","line":7,"column":9,"nodeType":"470","messageId":"471","endLine":7,"endColumn":20},{"ruleId":"468","severity":1,"message":"586","line":7,"column":22,"nodeType":"470","messageId":"471","endLine":7,"endColumn":32},{"ruleId":"468","severity":1,"message":"591","line":51,"column":11,"nodeType":"470","messageId":"471","endLine":51,"endColumn":23},{"ruleId":"478","severity":1,"message":"479","line":80,"column":7,"nodeType":"480","endLine":80,"endColumn":9,"suggestions":"592"},{"ruleId":"505","severity":1,"message":"506","line":85,"column":8,"nodeType":"507","messageId":"508","endLine":85,"endColumn":66},{"ruleId":"505","severity":1,"message":"506","line":86,"column":9,"nodeType":"507","messageId":"508","endLine":86,"endColumn":98},{"ruleId":"505","severity":1,"message":"506","line":87,"column":9,"nodeType":"507","messageId":"508","endLine":87,"endColumn":80},{"ruleId":"505","severity":1,"message":"506","line":88,"column":9,"nodeType":"507","messageId":"508","endLine":88,"endColumn":101},{"ruleId":"505","severity":1,"message":"506","line":89,"column":9,"nodeType":"507","messageId":"508","endLine":89,"endColumn":89},{"ruleId":"505","severity":1,"message":"506","line":90,"column":9,"nodeType":"507","messageId":"508","endLine":90,"endColumn":128},{"ruleId":"505","severity":1,"message":"506","line":91,"column":9,"nodeType":"507","messageId":"508","endLine":91,"endColumn":95},{"ruleId":"505","severity":1,"message":"506","line":92,"column":9,"nodeType":"507","messageId":"508","endLine":92,"endColumn":86},{"ruleId":"505","severity":1,"message":"506","line":93,"column":9,"nodeType":"507","messageId":"508","endLine":93,"endColumn":109},{"ruleId":"505","severity":1,"message":"506","line":94,"column":9,"nodeType":"507","messageId":"508","endLine":94,"endColumn":107},{"ruleId":"505","severity":1,"message":"506","line":95,"column":9,"nodeType":"507","messageId":"508","endLine":95,"endColumn":107},{"ruleId":"505","severity":1,"message":"506","line":96,"column":9,"nodeType":"507","messageId":"508","endLine":96,"endColumn":104},{"ruleId":"505","severity":1,"message":"506","line":103,"column":7,"nodeType":"507","messageId":"508","endLine":103,"endColumn":58},{"ruleId":"468","severity":1,"message":"555","line":3,"column":8,"nodeType":"470","messageId":"471","endLine":3,"endColumn":18},{"ruleId":"468","severity":1,"message":"589","line":5,"column":8,"nodeType":"470","messageId":"471","endLine":5,"endColumn":24},{"ruleId":"468","severity":1,"message":"509","line":11,"column":9,"nodeType":"470","messageId":"471","endLine":11,"endColumn":18},{"ruleId":"505","severity":1,"message":"506","line":67,"column":9,"nodeType":"507","messageId":"508","endLine":67,"endColumn":71},{"ruleId":"505","severity":1,"message":"506","line":68,"column":9,"nodeType":"507","messageId":"508","endLine":68,"endColumn":71},{"ruleId":"468","severity":1,"message":"590","line":7,"column":9,"nodeType":"470","messageId":"471","endLine":7,"endColumn":20},{"ruleId":"468","severity":1,"message":"586","line":7,"column":22,"nodeType":"470","messageId":"471","endLine":7,"endColumn":32},{"ruleId":"468","severity":1,"message":"593","line":7,"column":34,"nodeType":"470","messageId":"471","endLine":7,"endColumn":48},{"ruleId":"594","severity":1,"message":"595","line":60,"column":9,"nodeType":"596","messageId":"597","endLine":62,"endColumn":10,"fix":"598"},{"ruleId":"562","severity":1,"message":"599","line":68,"column":11,"nodeType":"564","messageId":"536","endLine":68,"endColumn":16},{"ruleId":"505","severity":1,"message":"506","line":197,"column":9,"nodeType":"507","messageId":"508","endLine":197,"endColumn":77},{"ruleId":"505","severity":1,"message":"506","line":203,"column":9,"nodeType":"507","messageId":"508","endLine":203,"endColumn":81},{"ruleId":"525","severity":1,"message":"526","line":259,"column":42,"nodeType":"527","endLine":259,"endColumn":127},{"ruleId":"525","severity":1,"message":"526","line":259,"column":130,"nodeType":"527","endLine":259,"endColumn":185},{"ruleId":"468","severity":1,"message":"600","line":4,"column":9,"nodeType":"470","messageId":"471","endLine":4,"endColumn":19},{"ruleId":"478","severity":1,"message":"601","line":40,"column":7,"nodeType":"480","endLine":40,"endColumn":9,"suggestions":"602"},{"ruleId":"478","severity":1,"message":"479","line":70,"column":8,"nodeType":"480","endLine":70,"endColumn":10,"suggestions":"603"},{"ruleId":"468","severity":1,"message":"503","line":3,"column":15,"nodeType":"470","messageId":"471","endLine":3,"endColumn":23},{"ruleId":"468","severity":1,"message":"604","line":6,"column":9,"nodeType":"470","messageId":"471","endLine":6,"endColumn":16},{"ruleId":"468","severity":1,"message":"477","line":44,"column":9,"nodeType":"470","messageId":"471","endLine":44,"endColumn":16},{"ruleId":"468","severity":1,"message":"605","line":48,"column":10,"nodeType":"470","messageId":"471","endLine":48,"endColumn":19},{"ruleId":"468","severity":1,"message":"606","line":48,"column":21,"nodeType":"470","messageId":"471","endLine":48,"endColumn":33},{"ruleId":"468","severity":1,"message":"607","line":49,"column":10,"nodeType":"470","messageId":"471","endLine":49,"endColumn":25},{"ruleId":"505","severity":1,"message":"506","line":64,"column":9,"nodeType":"507","messageId":"508","endLine":64,"endColumn":79},{"ruleId":"505","severity":1,"message":"506","line":77,"column":5,"nodeType":"507","messageId":"508","endLine":77,"endColumn":87},"no-native-reassign",["608"],"no-negated-in-lhs",["609"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Box' is defined but never used.","'Fab' is defined but never used.","'Nav' is defined but never used.","'NotificationCount' is defined but never used.","'accessToken' is assigned a value but never used.","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'config' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["610"],"'React' is defined but never used.","'auth_fail' is defined but never used.","'auth_start' is defined but never used.","'GetPostLikedUser' is defined but never used.","'AUTH_LOGOUT' is defined but never used.","'CAHNGE_PASSWORD' is defined but never used.","'RESET_PASSWORD' is defined but never used.","'REMOVE_PASSSWORD_CHANGE_SUCCESS' is defined but never used.","'authLogout' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'InputBase' is defined but never used.","'MailIcon' is defined but never used.","'REMOVE_MUTUAL_FRIEND' is defined but never used.","'REMOVE_NOTIFICATION_LIST' is defined but never used.","'zIndex' is defined but never used.",["611"],"'VERIFY_JWT_TOKEN' is defined but never used.","'DataUsageSharp' is defined but never used.","'useState' is defined but never used.","'useDispatch' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'useParams' is defined but never used.","'GetPostList' is defined but never used.","React Hook useEffect has missing dependencies: 'access', 'config', and 'dispatch'. Either include them or remove the dependency array.",["612"],"React Hook useEffect has a missing dependency: 'checkAuthenticatin'. Either include it or remove the dependency array.",["613"],"'loggedinUser' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'showAlert'. Either include it or remove the dependency array.",["614"],"React Hook useEffect has missing dependencies: 'config', 'dispatch', and 'username'. Either include them or remove the dependency array.",["615"],["616"],"'Copyright' is defined but never used.","React Hook useEffect has a missing dependency: 'goToLogin'. Either include it or remove the dependency array.",["617"],"'fade' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'SHARE_POST_SUCCESS' is defined but never used.","'posts' is assigned a value but never used.","'setPosts' is assigned a value but never used.",["618"],"'useSelector' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["619"],"'TwitterIcon' is defined but never used.","'Button' is defined but never used.",["620"],["621"],"'VerifiedUserIcon' is defined but never used.","'RepeatIcon' is defined but never used.","'SupervisorAccountIcon' is defined but never used.","'PersonOutlineIcon' is defined but never used.","'CommentTwoTone' is defined but never used.",["622"],"'Avatar' is defined but never used.","'CheckAuthentication' is defined but never used.","'tweetImage' is assigned a value but never used.","'setTweetImage' is assigned a value but never used.",["623"],"'sendTweet' is defined but never used.","'CardMedia' is defined but never used.","'Typography' is defined but never used.","'IconButton' is defined but never used.","'MoreVertIcon' is defined but never used.","'loading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["624"],"'BorderBottom' is defined but never used.","no-dupe-keys","Duplicate key 'margin'.","ObjectExpression",["625"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener",["626"],["627"],"'newImage' is assigned a value but never used.","'setNewImge' is assigned a value but never used.","'imgData' is assigned a value but never used.","'setImgData' is assigned a value but never used.",["628"],"'Snackbar' is defined but never used.",["629"],"'CancelIcon' is defined but never used.","'setPostImage' is assigned a value but never used.",["630"],"Duplicate key 'marginTop'.",["631"],"'info' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.open' and 'state'. Either include them or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["632"],"'handleOpen' is assigned a value but never used.","'UserFollow' is defined but never used.",["633"],["634"],"'FormControlLabel' is defined but never used.","'UserProfile' is defined but never used.","'loggedInUser' is assigned a value but never used.",["635"],"'LoggedUserInfo' is defined but never used.","no-useless-computed-key","Unnecessarily computed property ['@media (max-width: 400px)'] found.","Property","unnecessarilyComputedProperty",{"range":"636","text":"637"},"Duplicate key 'width'.","'useHistory' is defined but never used.","React Hook useEffect has missing dependencies: 'config', 'dispatch', and 'postId'. Either include them or remove the dependency array.",["638"],["639"],"'history' is defined but never used.","'tokenNull' is assigned a value but never used.","'setTokenNull' is assigned a value but never used.","'newPasswordNull' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"640","fix":"641"},{"desc":"640","fix":"642"},{"desc":"643","fix":"644"},{"desc":"645","fix":"646"},{"desc":"647","fix":"648"},{"desc":"649","fix":"650"},{"desc":"645","fix":"651"},{"desc":"652","fix":"653"},{"desc":"640","fix":"654"},{"desc":"640","fix":"655"},{"desc":"649","fix":"656"},{"desc":"649","fix":"657"},{"desc":"640","fix":"658"},{"desc":"640","fix":"659"},{"desc":"660","fix":"661"},{"desc":"662","fix":"663"},{"desc":"640","fix":"664"},{"desc":"640","fix":"665"},{"desc":"640","fix":"666"},{"desc":"640","fix":"667"},{"desc":"640","fix":"668"},{"desc":"640","fix":"669"},{"desc":"670","fix":"671"},{"desc":"640","fix":"672"},{"desc":"673","fix":"674"},{"desc":"640","fix":"675"},[1588,1617],"'@media (max-width: 400px)'",{"desc":"676","fix":"677"},{"desc":"640","fix":"678"},"Update the dependencies array to be: [config, dispatch]",{"range":"679","text":"680"},{"range":"681","text":"680"},"Update the dependencies array to be: [access, config, dispatch]",{"range":"682","text":"683"},"Update the dependencies array to be: [checkAuthenticatin]",{"range":"684","text":"685"},"Update the dependencies array to be: [cmMessage, showAlert]",{"range":"686","text":"687"},"Update the dependencies array to be: [config, dispatch, username]",{"range":"688","text":"689"},{"range":"690","text":"685"},"Update the dependencies array to be: [goToLogin, regConfirmation]",{"range":"691","text":"692"},{"range":"693","text":"680"},{"range":"694","text":"680"},{"range":"695","text":"689"},{"range":"696","text":"689"},{"range":"697","text":"680"},{"range":"698","text":"680"},"Update the dependencies array to be: [dispatch]",{"range":"699","text":"700"},"Update the dependencies array to be: [config, dispatch, userInfo]",{"range":"701","text":"702"},{"range":"703","text":"680"},{"range":"704","text":"680"},{"range":"705","text":"680"},{"range":"706","text":"680"},{"range":"707","text":"680"},{"range":"708","text":"680"},"Update the dependencies array to be: [props.open, state]",{"range":"709","text":"710"},{"range":"711","text":"680"},"Update the dependencies array to be: [config, dispatch, loggedInUser]",{"range":"712","text":"713"},{"range":"714","text":"680"},"Update the dependencies array to be: [config, dispatch, postId]",{"range":"715","text":"716"},{"range":"717","text":"680"},[1627,1629],"[config, dispatch]",[5715,5717],[1047,1049],"[access, config, dispatch]",[1127,1129],"[checkAuthenticatin]",[2807,2818],"[cmMessage, showAlert]",[2377,2379],"[config, dispatch, username]",[2441,2443],[2513,2530],"[goToLogin, regConfirmation]",[791,793],[2186,2188],[1803,1805],[4260,4262],[4509,4511],[1414,1416],[1229,1231],"[dispatch]",[2165,2175],"[config, dispatch, userInfo]",[2103,2105],[1875,1877],[1816,1818],[1389,1391],[2507,2509],[2361,2363],[873,875],"[props.open, state]",[2533,2535],[2649,2663],"[config, dispatch, loggedInUser]",[2720,2722],[1110,1112],"[config, dispatch, postId]",[1807,1809]]